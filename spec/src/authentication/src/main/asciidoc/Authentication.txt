======= [#50458673_pgfId-107871]## 

[#50458674_pgfId-1007393]##Specification: JSR-196 Java Authentication
Service Provider Interface for Containers ("Specification")

[#50458674_pgfId-1007394]##Version: 1.1

[#50458674_pgfId-1007395]##Status: Maintenance Release

[#50458674_pgfId-1007396]##Specification Lead: Oracle America, Inc.
("Specification Lead")

[#50458674_pgfId-1007397]##Release: May 31, 2013

[#50458674_pgfId-1007398]## 

[#50458674_pgfId-1007399]##Copyright 2013 Oracle America, Inc.

[#50458674_pgfId-1007400]##All rights reserved.

======= [#50458675_pgfId-163190]## _link:jaspic.htm#50458676_pgfId-1001582[Preface]_ __ _._ xiii

======= [#50458675_pgfId-163192]## _link:jaspic.htm#50458677_pgfId-1001112[1 Overview]_ __ _._ 1

{empty}[#50458675_pgfId-163194]##link:jaspic.htm#50458677_pgfId-1010511[1.1
Message Processing Model 1]

{empty}[#50458675_pgfId-163196]##link:jaspic.htm#50458677_pgfId-1003555[1.1.1
Authentication Modules . . . . . . . . . . . . . 2]

{empty}[#50458675_pgfId-163198]##link:jaspic.htm#50458677_pgfId-1003611[1.1.2
Authentication Contexts . . . . . . . . . . . . . 2]

{empty}[#50458675_pgfId-163200]##link:jaspic.htm#50458677_pgfId-1004769[1.1.3
Authentication Context Configuration . . . . . . . . . . . . . 2]

{empty}[#50458675_pgfId-163202]##link:jaspic.htm#50458677_pgfId-1004813[1.1.4
Authentication Context Configuration Providers . . . . . . . . . . . . .
3]

{empty}[#50458675_pgfId-163204]##link:jaspic.htm#50458677_pgfId-1003056[1.1.5
Request and Response Messages . . . . . . . . . . . . . 3]

{empty}[#50458675_pgfId-163206]##link:jaspic.htm#50458677_pgfId-1003063[1.1.6
Message Authentication Policy . . . . . . . . . . . . . 3]

{empty}[#50458675_pgfId-163208]##link:jaspic.htm#50458677_pgfId-1003068[1.1.7
Authentication Exchanges and State . . . . . . . . . . . . . 4]

{empty}[#50458675_pgfId-163210]##link:jaspic.htm#50458677_pgfId-1009768[1.1.8
Callbacks for Information From the Runtime . . . . . . . . . . . . . 4]

{empty}[#50458675_pgfId-163212]##link:jaspic.htm#50458677_pgfId-1003083[1.1.9
Subjects . . . . . . . . . . . . . 5]

{empty}[#50458675_pgfId-163214]##link:jaspic.htm#50458677_pgfId-1008862[1.1.10
Status Values and Exceptions . . . . . . . . . . . . . 5]

{empty}[#50458675_pgfId-163216]##link:jaspic.htm#50458677_pgfId-1009663[1.2
Typical Runtime Use Model 6]

{empty}[#50458675_pgfId-163218]##link:jaspic.htm#50458677_pgfId-1005710[1.2.1
Acquire AuthConfigProvider . . . . . . . . . . . . . 7]

{empty}[#50458675_pgfId-163220]##link:jaspic.htm#50458677_pgfId-1005831[1.2.2
Acquire AuthConfig . . . . . . . . . . . . . 7]

{empty}[#50458675_pgfId-163222]##link:jaspic.htm#50458677_pgfId-1005905[1.2.3
Acquire AuthContext Identifier . . . . . . . . . . . . . 7]

{empty}[#50458675_pgfId-163224]##link:jaspic.htm#50458677_pgfId-1005728[1.2.4
Acquire Authentication Context . . . . . . . . . . . . . 8]

{empty}[#50458675_pgfId-163226]##link:jaspic.htm#50458677_pgfId-1010367[1.2.5
Process Messages . . . . . . . . . . . . . 8]

{empty}[#50458675_pgfId-163228]##link:jaspic.htm#50458677_pgfId-1003792[1.3
Terminology 9]

{empty}[#50458675_pgfId-163230]##link:jaspic.htm#50458677_pgfId-1003805[1.4
Assumptions 11]

{empty}[#50458675_pgfId-163232]##link:jaspic.htm#50458677_pgfId-1006500[1.5
Requirements 12]

{empty}[#50458675_pgfId-163234]##link:jaspic.htm#50458677_pgfId-1005530[1.5.1
Non Requirements . . . . . . . . . . . . . 13]

======= [#50458675_pgfId-163236]## _link:jaspic.htm#50458678_pgfId-1019308[2 Message Authentication]_ __ _._ 15

{empty}[#50458675_pgfId-163238]##link:jaspic.htm#50458678_pgfId-1029418[2.1
Authentication 15]

{empty}[#50458675_pgfId-163240]##link:jaspic.htm#50458678_pgfId-1022576[2.1.1
Acquire AuthConfigProvider . . . . . . . . . . . . . 16]

{empty}[#50458675_pgfId-163242]##link:jaspic.htm#50458678_pgfId-1022679[2.1.1.1
What the Runtime Must Do 16]

{empty}[#50458675_pgfId-163244]##link:jaspic.htm#50458678_pgfId-1030738[2.1.1.2
What the Factory Must Do 16]

{empty}[#50458675_pgfId-163246]##link:jaspic.htm#50458678_pgfId-1022786[2.1.2
Acquire AuthConfig . . . . . . . . . . . . . 16]

{empty}[#50458675_pgfId-163248]##link:jaspic.htm#50458678_pgfId-1022800[2.1.2.1
What the Runtime Must Do 16]

{empty}[#50458675_pgfId-163250]##link:jaspic.htm#50458678_pgfId-1022587[2.1.2.2
What the Provider Must Do 17]

{empty}[#50458675_pgfId-163252]##link:jaspic.htm#50458678_pgfId-1028415[2.1.3
Acquire AuthContext Identifier . . . . . . . . . . . . . 17]

{empty}[#50458675_pgfId-163254]##link:jaspic.htm#50458678_pgfId-1023040[2.1.3.1
What the Runtime Must Do 17]

{empty}[#50458675_pgfId-163256]##link:jaspic.htm#50458678_pgfId-1029898[2.1.3.2
What the Configuration Must Do 18]

{empty}[#50458675_pgfId-163258]##link:jaspic.htm#50458678_pgfId-1022896[2.1.4
Acquire Authentication Context . . . . . . . . . . . . . 18]

{empty}[#50458675_pgfId-163260]##link:jaspic.htm#50458678_pgfId-1024098[2.1.4.1
What the Runtime Must Do 18]

{empty}[#50458675_pgfId-163262]##link:jaspic.htm#50458678_pgfId-1027953[2.1.4.2
What the Configuration Must Do 18]

{empty}[#50458675_pgfId-163264]##link:jaspic.htm#50458678_pgfId-1028368[2.1.5
Process Messages . . . . . . . . . . . . . 19]

{empty}[#50458675_pgfId-163266]##link:jaspic.htm#50458678_pgfId-1028369[2.1.5.1
What the Context Must Do 19]

{empty}[#50458675_pgfId-163268]##link:jaspic.htm#50458678_pgfId-1030038[2.1.5.2
What the Runtime Must Do 19]

{empty}[#50458675_pgfId-163270]##link:jaspic.htm#50458678_pgfId-1030295[2.1.5.3
What the Modules Must Do 25]

======= [#50458675_pgfId-163272]## _link:jaspic.htm#50458641_pgfId-1021047[3 Servlet Container Profile]_ __ _._ 27

{empty}[#50458675_pgfId-163274]##link:jaspic.htm#50458641_pgfId-1022750[3.1
Message Layer Identifier 27]

{empty}[#50458675_pgfId-163276]##link:jaspic.htm#50458641_pgfId-1023004[3.2
Application Context Identifier 27]

{empty}[#50458675_pgfId-163278]##link:jaspic.htm#50458641_pgfId-1030221[3.3
Message Requirements 28]

{empty}[#50458675_pgfId-163280]##link:jaspic.htm#50458641_pgfId-1023012[3.4
Module Requirements 28]

{empty}[#50458675_pgfId-163282]##link:jaspic.htm#50458641_pgfId-1022732[3.5
CallbackHandler Requirements 28]

{empty}[#50458675_pgfId-163284]##link:jaspic.htm#50458641_pgfId-1023241[3.6
AuthConfigProvider Requirements 28]

{empty}[#50458675_pgfId-163286]##link:jaspic.htm#50458641_pgfId-1023534[3.7
Authentication Context Requirements 29]

{empty}[#50458675_pgfId-163288]##link:jaspic.htm#50458641_pgfId-1023847[3.7.1
Authentication Context Identifiers . . . . . . . . . . . . . 29]

{empty}[#50458675_pgfId-163290]##link:jaspic.htm#50458641_pgfId-1029588[3.7.2
getAuthContext Subject . . . . . . . . . . . . . 29]

{empty}[#50458675_pgfId-163292]##link:jaspic.htm#50458641_pgfId-1029063[3.7.3
Module Initialization Properties . . . . . . . . . . . . . 30]

{empty}[#50458675_pgfId-163294]##link:jaspic.htm#50458641_pgfId-1029161[3.7.4
MessagePolicy Requirements . . . . . . . . . . . . . 30]

{empty}[#50458675_pgfId-163296]##link:jaspic.htm#50458641_pgfId-1023638[3.8
Message Processing Requirements 30]

{empty}[#50458675_pgfId-163298]##link:jaspic.htm#50458641_pgfId-1023977[3.8.1
MessageInfo Requirements . . . . . . . . . . . . . 31]

{empty}[#50458675_pgfId-163300]##link:jaspic.htm#50458641_pgfId-1024012[3.8.1.1
MessageInfo Properties 32]

{empty}[#50458675_pgfId-163302]##link:jaspic.htm#50458641_pgfId-1036767[3.8.2
Subject Requirements . . . . . . . . . . . . . 32]

{empty}[#50458675_pgfId-163304]##link:jaspic.htm#50458641_pgfId-1025848[3.8.3
ServerAuth Processing . . . . . . . . . . . . . 32]

{empty}[#50458675_pgfId-163306]##link:jaspic.htm#50458641_pgfId-1025023[3.8.3.1
validateRequest Before Service Invocation 33]

{empty}[#50458675_pgfId-163308]##link:jaspic.htm#50458641_pgfId-1025063[3.8.3.2
validateRequest After Service Invocation 34]

{empty}[#50458675_pgfId-163310]##link:jaspic.htm#50458641_pgfId-1025315[3.8.3.3
secureResponse Processing 34]

{empty}[#50458675_pgfId-163312]##link:jaspic.htm#50458641_pgfId-1036973[3.8.3.4
Forwards and Includes by Server Authentication Modules 34]

{empty}[#50458675_pgfId-163314]##link:jaspic.htm#50458641_pgfId-1037021[3.8.3.5
Wrapping and UnWrapping of Requests and Responses 35]

{empty}[#50458675_pgfId-163316]##link:jaspic.htm#50458641_pgfId-1036801[3.8.4
Setting the Authentication Results on the HttpServletRequest . . . . . .
. . . . . . . 35]

{empty}[#50458675_pgfId-163318]##link:jaspic.htm#50458641_pgfId-1036583[3.9
Sub-profile for authenticate, login, and logout of HttpServletRequest
36]

{empty}[#50458675_pgfId-163320]##link:jaspic.htm#50458641_pgfId-1036382[3.9.1
Authentication Configuration Requirements . . . . . . . . . . . . . 37]

{empty}[#50458675_pgfId-163322]##link:jaspic.htm#50458641_pgfId-1035428[3.9.2
Processing for HttpServletRequest.login . . . . . . . . . . . . . 37]

{empty}[#50458675_pgfId-163324]##link:jaspic.htm#50458641_pgfId-1035597[3.9.3
Processing for HttpServletRequest.authenticate . . . . . . . . . . . . .
37]

{empty}[#50458675_pgfId-163326]##link:jaspic.htm#50458641_pgfId-1035507[3.9.4
Processing for HttpServletRequest.logout . . . . . . . . . . . . . 38]

{empty}[#50458675_pgfId-163328]##link:jaspic.htm#50458641_pgfId-1035858[3.9.5
Calls from within ServerAuthContext . . . . . . . . . . . . . 38]

======= [#50458675_pgfId-163330]## _link:jaspic.htm#50458643_pgfId-1021047[4 SOAP Profile]_ __ _._ 39

{empty}[#50458675_pgfId-163332]##link:jaspic.htm#50458643_pgfId-1026408[4.1
Message Layer Identifier 39]

{empty}[#50458675_pgfId-163334]##link:jaspic.htm#50458643_pgfId-1023004[4.2
Application Context Identifier 39]

{empty}[#50458675_pgfId-163336]##link:jaspic.htm#50458643_pgfId-1029470[4.3
Message Requirements 39]

{empty}[#50458675_pgfId-163338]##link:jaspic.htm#50458643_pgfId-1025806[4.4
Module Requirements 40]

{empty}[#50458675_pgfId-163340]##link:jaspic.htm#50458643_pgfId-1022732[4.5
CallbackHandler Requirements 40]

{empty}[#50458675_pgfId-163342]##link:jaspic.htm#50458643_pgfId-1023241[4.6
AuthConfigProvider Requirements 40]

{empty}[#50458675_pgfId-163344]##link:jaspic.htm#50458643_pgfId-1023534[4.7
Authentication Context Requirements 40]

{empty}[#50458675_pgfId-163346]##link:jaspic.htm#50458643_pgfId-1028803[4.7.1
Authentication Context Identifiers . . . . . . . . . . . . . 41]

{empty}[#50458675_pgfId-163348]##link:jaspic.htm#50458643_pgfId-1028841[4.7.2
MessagePolicy Requirements . . . . . . . . . . . . . 41]

{empty}[#50458675_pgfId-163350]##link:jaspic.htm#50458643_pgfId-1029770[4.8
Requirements for Client Runtimes 41]

{empty}[#50458675_pgfId-163352]##link:jaspic.htm#50458643_pgfId-1029283[4.8.1
Client-Side Application Context Identifier . . . . . . . . . . . . . 41]

{empty}[#50458675_pgfId-163354]##link:jaspic.htm#50458643_pgfId-1026444[4.8.2
CallbackHandler Requirements . . . . . . . . . . . . . 42]

{empty}[#50458675_pgfId-163356]##link:jaspic.htm#50458643_pgfId-1026486[4.8.3
AuthConfigProvider Requirements . . . . . . . . . . . . . 42]

{empty}[#50458675_pgfId-163358]##link:jaspic.htm#50458643_pgfId-1029896[4.8.4
Authentication Context Requirements . . . . . . . . . . . . . 42]

{empty}[#50458675_pgfId-163360]##link:jaspic.htm#50458643_pgfId-1029867[4.8.4.1
getAuthContext Subject 42]

{empty}[#50458675_pgfId-163362]##link:jaspic.htm#50458643_pgfId-1027619[4.8.4.2
Module Initialization Properties 43]

{empty}[#50458675_pgfId-163364]##link:jaspic.htm#50458643_pgfId-1027356[4.8.4.3
MessagePolicy Requirements 43]

{empty}[#50458675_pgfId-163366]##link:jaspic.htm#50458643_pgfId-1026836[4.8.5
Message Processing Requirements . . . . . . . . . . . . . 43]

{empty}[#50458675_pgfId-163368]##link:jaspic.htm#50458643_pgfId-1026838[4.8.5.1
MessageInfo Requirements 43]

{empty}[#50458675_pgfId-163370]##link:jaspic.htm#50458643_pgfId-1026389[4.8.5.2
Subject Requirements 44]

{empty}[#50458675_pgfId-163372]##link:jaspic.htm#50458643_pgfId-1026790[4.8.5.3
secureRequest Processing 44]

{empty}[#50458675_pgfId-163374]##link:jaspic.htm#50458643_pgfId-1028206[4.8.5.4
validateResponse Processing 44]

{empty}[#50458675_pgfId-163376]##link:jaspic.htm#50458643_pgfId-1028199[4.9
Requirements for Server Runtimes 46]

{empty}[#50458675_pgfId-163378]##link:jaspic.htm#50458643_pgfId-1029200[4.9.1
Server-Side Application Context Identifier . . . . . . . . . . . . . 46]

{empty}[#50458675_pgfId-163380]##link:jaspic.htm#50458643_pgfId-1029360[4.9.2
CallbackHandler Requirements . . . . . . . . . . . . . 46]

{empty}[#50458675_pgfId-163382]##link:jaspic.htm#50458643_pgfId-1026639[4.9.3
AuthConfigProvider Requirements . . . . . . . . . . . . . 46]

{empty}[#50458675_pgfId-163384]##link:jaspic.htm#50458643_pgfId-1029883[4.9.4
Authentication Context Requirements . . . . . . . . . . . . . 47]

{empty}[#50458675_pgfId-163386]##link:jaspic.htm#50458643_pgfId-1028760[4.9.4.1
Module Initialization Properties 47]

{empty}[#50458675_pgfId-163388]##link:jaspic.htm#50458643_pgfId-1026821[4.9.4.2
MessagePolicy Requirements 47]

{empty}[#50458675_pgfId-163390]##link:jaspic.htm#50458643_pgfId-1027476[4.9.5
Message Processing Requirements . . . . . . . . . . . . . 48]

{empty}[#50458675_pgfId-163392]##link:jaspic.htm#50458643_pgfId-1026193[4.9.5.1
MessageInfo Requirements 48]

{empty}[#50458675_pgfId-163394]##link:jaspic.htm#50458643_pgfId-1026213[4.9.5.2
Subject Requirements 49]

{empty}[#50458675_pgfId-163396]##link:jaspic.htm#50458643_pgfId-1027036[4.9.5.3
validateRequest Processing 49]

{empty}[#50458675_pgfId-163398]##link:jaspic.htm#50458643_pgfId-1026236[4.9.5.4
secureResponse Processing 50]

======= [#50458675_pgfId-163400]## _link:jaspic.htm#50458639_pgfId-1029190[5 Future Profiles]_ __ _._ 53

{empty}[#50458675_pgfId-163402]##link:jaspic.htm#50458639_pgfId-1029074[5.1
JMS Profile 53]

{empty}[#50458675_pgfId-163404]##link:jaspic.htm#50458639_pgfId-1029269[5.1.1
Message Abstraction . . . . . . . . . . . . . 53]

{empty}[#50458675_pgfId-163406]##link:jaspic.htm#50458639_pgfId-1029273[5.1.2
Destinations . . . . . . . . . . . . . 53]

{empty}[#50458675_pgfId-163408]##link:jaspic.htm#50458639_pgfId-1029332[5.1.3
Message Processing Model . . . . . . . . . . . . . 53]

{empty}[#50458675_pgfId-163410]##link:jaspic.htm#50458639_pgfId-1029463[5.2
RMI/IIOP Portable Interceptor Profile 53]

{empty}[#50458675_pgfId-163412]##link:jaspic.htm#50458639_pgfId-1029465[5.2.1
Message Abstraction . . . . . . . . . . . . . 54]

======= [#50458675_pgfId-163414]## _link:jaspic.htm#50458684_pgfId-1020442[6 LoginModule Bridge Profile]_ __ _._ 55

{empty}[#50458675_pgfId-163416]##link:jaspic.htm#50458684_pgfId-1020172[6.1
Processing Model 55]

{empty}[#50458675_pgfId-163418]##link:jaspic.htm#50458684_pgfId-1020185[6.2
Division of Responsibility 55]

{empty}[#50458675_pgfId-163420]##link:jaspic.htm#50458684_pgfId-1023395[6.3
Standard Callbacks 56]

{empty}[#50458675_pgfId-163422]##link:jaspic.htm#50458684_pgfId-1020387[6.4
Subjects 56]

{empty}[#50458675_pgfId-163424]##link:jaspic.htm#50458684_pgfId-1020418[6.5
Logout 56]

{empty}[#50458675_pgfId-163426]##link:jaspic.htm#50458684_pgfId-1022807[6.6
LoginExceptions 56]

{empty}[#50458675_pgfId-163428]##link:jaspic.htm#50458685_pgfId-7705[Appendix
A: Related Documents 57]

{empty}[#50458675_pgfId-163430]##link:jaspic.htm#50458686_pgfId-999129[Appendix
B: Issues 59]

{empty}[#50458675_pgfId-163432]##link:jaspic.htm#50458686_pgfId-1012965[B.1
Implementing getCallerPrincipal and getUserPrincipal 59]

{empty}[#50458675_pgfId-163434]##link:jaspic.htm#50458686_pgfId-1013013[B.2
Alternative Supported Mechanisms at an Endpoint 59]

{empty}[#50458675_pgfId-163436]##link:jaspic.htm#50458686_pgfId-1015517[B.3
Access by Module to Other Layer Authentication Results 60]

{empty}[#50458675_pgfId-163438]##link:jaspic.htm#50458686_pgfId-1015592[B.4
How Are Target Credentials Acquired by Client Authentication Modules?
60]

{empty}[#50458675_pgfId-163440]##link:jaspic.htm#50458686_pgfId-1013399[B.5
How Does a Module Issue a Challenge? 60]

{empty}[#50458675_pgfId-163442]##link:jaspic.htm#50458686_pgfId-1015649[B.6
Message Correlation for Multi-Message Dialogs 61]

{empty}[#50458675_pgfId-163444]##link:jaspic.htm#50458686_pgfId-1015658[B.7
Compatibility With Load-Balancing Mechanisms 61]

{empty}[#50458675_pgfId-163446]##link:jaspic.htm#50458686_pgfId-1015696[B.8
Use of Generics and Typesafe Enums in Interface Definition 61]

{empty}[#50458675_pgfId-163448]##link:jaspic.htm#50458686_pgfId-1015822[B.9
HttpServletResponse Buffering and Header Commit Semantics 62]

{empty}[#50458675_pgfId-163450]##link:jaspic.htm#50458686_pgfId-1016070[B.10
Reporting New Issues 62]

{empty}[#50458675_pgfId-163452]##link:jaspic.htm#50458687_pgfId-27212[Appendix
C: Revision History 63]

{empty}[#50458675_pgfId-163454]##link:jaspic.htm#50458687_pgfId-16289[C.1
Early Draft 1 (dated 06/06/2005) 63]

{empty}[#50458675_pgfId-163456]##link:jaspic.htm#50458687_pgfId-25211[C.2
Significant Changes in Public Draft (dated 08/15/2006). 63]

{empty}[#50458675_pgfId-163458]##link:jaspic.htm#50458687_pgfId-27196[C.2.1
Changes to API 63]

{empty}[#50458675_pgfId-163460]##link:jaspic.htm#50458687_pgfId-27200[C.2.2
Changes to Processing Model 64]

{empty}[#50458675_pgfId-163462]##link:jaspic.htm#50458687_pgfId-27352[C.2.3
Changes to Profiles 64]

{empty}[#50458675_pgfId-163464]##link:jaspic.htm#50458687_pgfId-28071[C.3
Changes in Proposed Final Draft 1 64]

{empty}[#50458675_pgfId-163466]##link:jaspic.htm#50458687_pgfId-28090[C.3.1
Changes to Preface 64]

{empty}[#50458675_pgfId-163468]##link:jaspic.htm#50458687_pgfId-28096[C.3.2
Changes to “Overview” Chapter 64]

{empty}[#50458675_pgfId-163470]##link:jaspic.htm#50458687_pgfId-28117[C.3.3
Changes to “Message Authentication” Chapter 64]

{empty}[#50458675_pgfId-163472]##link:jaspic.htm#50458687_pgfId-28220[C.3.4
Changes to “Servlet Container Profile” Chapter 65]

{empty}[#50458675_pgfId-163474]##link:jaspic.htm#50458687_pgfId-28470[C.3.5
Changes to “SOAP Profile” Chapter 66]

{empty}[#50458675_pgfId-163476]##link:jaspic.htm#50458687_pgfId-28706[C.3.6
Changes to JMS Profile Chapter 67]

{empty}[#50458675_pgfId-163478]##link:jaspic.htm#50458687_pgfId-28737[C.3.7
Changes to Appendix B, Issues 67]

{empty}[#50458675_pgfId-163480]##link:jaspic.htm#50458687_pgfId-28926[C.3.8
Changes to Appendix D, API 67]

{empty}[#50458675_pgfId-163482]##link:jaspic.htm#50458687_pgfId-29277[C.4
Changes in Proposed Final Draft 2 68]

{empty}[#50458675_pgfId-163484]##link:jaspic.htm#50458687_pgfId-29363[C.4.1
Changes to License 68]

{empty}[#50458675_pgfId-163486]##link:jaspic.htm#50458687_pgfId-29307[C.4.2
Changes to Servlet Container Profile 68]

{empty}[#50458675_pgfId-163488]##link:jaspic.htm#50458687_pgfId-29332[C.4.3
Changes to SOAP Profile 69]

{empty}[#50458675_pgfId-163490]##link:jaspic.htm#50458687_pgfId-29278[C.4.4
Changes to LoginModule Bridge Profile 69]

{empty}[#50458675_pgfId-163492]##link:jaspic.htm#50458687_pgfId-29403[C.5
Changes in Final Release 69]

{empty}[#50458675_pgfId-163494]##link:jaspic.htm#50458687_pgfId-29404[C.5.1
Changes to title page 69]

{empty}[#50458675_pgfId-163496]##link:jaspic.htm#50458687_pgfId-29456[C.5.2
Changes to Preface 69]

{empty}[#50458675_pgfId-163498]##link:jaspic.htm#50458687_pgfId-29483[C.5.3
Changes to Overview 69]

{empty}[#50458675_pgfId-163500]##link:jaspic.htm#50458687_pgfId-29500[C.5.4
Changes to References 69]

{empty}[#50458675_pgfId-163502]##link:jaspic.htm#50458687_pgfId-29517[C.5.5
Changes to Issues 69]

{empty}[#50458675_pgfId-163504]##link:jaspic.htm#50458687_pgfId-29535[C.6
Changes in Maintenance Release A 69]

{empty}[#50458675_pgfId-163506]##link:jaspic.htm#50458687_pgfId-29536[C.6.1
Changes Effecting Entire Document 69]

{empty}[#50458675_pgfId-163508]##link:jaspic.htm#50458687_pgfId-29538[C.6.2
Changes to “Message Authentication” Chapter 70]

{empty}[#50458675_pgfId-163510]##link:jaspic.htm#50458687_pgfId-29579[C.6.3
Changes to Appendix D, API 70]

{empty}[#50458675_pgfId-163512]##link:jaspic.htm#50458687_pgfId-29626[C.7
Changes in Maintenance Release B 70]

{empty}[#50458675_pgfId-163514]##link:jaspic.htm#50458687_pgfId-29627[C.7.1
Changes Effecting Entire Document 70]

{empty}[#50458675_pgfId-163516]##link:jaspic.htm#50458687_pgfId-29893[C.7.2
Changes to Preface 70]

{empty}[#50458675_pgfId-163518]##link:jaspic.htm#50458687_pgfId-29857[C.7.3
Changes to Servlet Container Profile 70]

{empty}[#50458675_pgfId-163520]##link:jaspic.htm#50458687_pgfId-29637[C.7.4
Changes to Appendix B, Issues 71]

{empty}[#50458675_pgfId-163522]##link:jaspic.htm#50458687_pgfId-29793[C.7.5
Changes to Appendix D, SPI 71]

{empty}[#50458675_pgfId-163524]##link:jaspic.htm#50458644_pgfId-169458[Appendix
D: API 73]

{empty}[#50458675_pgfId-163526]##link:jaspic.htm#50458644_pgfId-224194[AuthException
75]

{empty}[#50458675_pgfId-163528]##link:jaspic.htm#50458644_pgfId-224270[AuthStatus
77]

{empty}[#50458675_pgfId-163530]##link:jaspic.htm#50458644_pgfId-224432[ClientAuth
79]

{empty}[#50458675_pgfId-163532]##link:jaspic.htm#50458644_pgfId-224604[MessageInfo
82]

{empty}[#50458675_pgfId-163534]##link:jaspic.htm#50458644_pgfId-224708[MessagePolicy
84]

{empty}[#50458675_pgfId-163536]##link:jaspic.htm#50458644_pgfId-224864[MessagePolicy.ProtectionPolicy
86]

{empty}[#50458675_pgfId-163538]##link:jaspic.htm#50458644_pgfId-224954[MessagePolicy.Target
88]

{empty}[#50458675_pgfId-163540]##link:jaspic.htm#50458644_pgfId-225067[MessagePolicy.TargetPolicy
90]

{empty}[#50458675_pgfId-163542]##link:jaspic.htm#50458644_pgfId-225212[ServerAuth
92]

{empty}[#50458675_pgfId-163544]##link:jaspic.htm#50458644_pgfId-227268[CallerPrincipalCallback
96]

{empty}[#50458675_pgfId-163546]##link:jaspic.htm#50458644_pgfId-227393[CertStoreCallback
99]

{empty}[#50458675_pgfId-163548]##link:jaspic.htm#50458644_pgfId-227479[GroupPrincipalCallback
101]

{empty}[#50458675_pgfId-163550]##link:jaspic.htm#50458644_pgfId-227569[PasswordValidationCallback
103]

{empty}[#50458675_pgfId-163552]##link:jaspic.htm#50458644_pgfId-227721[PrivateKeyCallback
106]

{empty}[#50458675_pgfId-163554]##link:jaspic.htm#50458644_pgfId-227908[PrivateKeyCallback.AliasRequest
109]

{empty}[#50458675_pgfId-163556]##link:jaspic.htm#50458644_pgfId-227995[PrivateKeyCallback.DigestRequest
111]

{empty}[#50458675_pgfId-163558]##link:jaspic.htm#50458644_pgfId-228098[PrivateKeyCallback.IssuerSerialNumRequest
113]

{empty}[#50458675_pgfId-163560]##link:jaspic.htm#50458644_pgfId-228201[PrivateKeyCallback.Request
115]

{empty}[#50458675_pgfId-163562]##link:jaspic.htm#50458644_pgfId-228234[PrivateKeyCallback.SubjectKeyIDRequest
116]

{empty}[#50458675_pgfId-163564]##link:jaspic.htm#50458644_pgfId-228321[SecretKeyCallback
118]

{empty}[#50458675_pgfId-163566]##link:jaspic.htm#50458644_pgfId-228465[SecretKeyCallback.AliasRequest
120]

{empty}[#50458675_pgfId-163568]##link:jaspic.htm#50458644_pgfId-228552[SecretKeyCallback.Request
122]

{empty}[#50458675_pgfId-163570]##link:jaspic.htm#50458644_pgfId-228573[TrustStoreCallback
123]

{empty}[#50458675_pgfId-163572]##link:jaspic.htm#50458644_pgfId-230337[AuthConfig
126]

{empty}[#50458675_pgfId-163574]##link:jaspic.htm#50458644_pgfId-230473[AuthConfigFactory
128]

{empty}[#50458675_pgfId-163576]##link:jaspic.htm#50458644_pgfId-231026[AuthConfigFactory.RegistrationContext
137]

{empty}[#50458675_pgfId-163578]##link:jaspic.htm#50458644_pgfId-231116[AuthConfigProvider
139]

{empty}[#50458675_pgfId-163580]##link:jaspic.htm#50458644_pgfId-231259[ClientAuthConfig
142]

{empty}[#50458675_pgfId-163582]##link:jaspic.htm#50458644_pgfId-231367[ClientAuthContext
144]

{empty}[#50458675_pgfId-163584]##link:jaspic.htm#50458644_pgfId-231429[RegistrationListener
145]

{empty}[#50458675_pgfId-163586]##link:jaspic.htm#50458644_pgfId-231467[ServerAuthConfig
146]

{empty}[#50458675_pgfId-163588]##link:jaspic.htm#50458644_pgfId-231575[ServerAuthContext
148]

{empty}[#50458675_pgfId-163590]##link:jaspic.htm#50458644_pgfId-232004[ClientAuthModule
151]

{empty}[#50458675_pgfId-163592]##link:jaspic.htm#50458644_pgfId-232132[ServerAuthModule
153]

=== [#50458676_pgfId-1001582]##[#50458676_32725]##Preface

[#50458676_pgfId-1001583]##  

======= [#50458676_pgfId-1001584]##Status of Document

[#50458676_pgfId-999979]##This document is Maintenance Release B of the
Java _TM_ Authentication Service Provider Interface for Containers and
represents Version 1.1 of the specification

======= [#50458676_pgfId-1002090]##Audience

[#50458676_pgfId-1003941]##This document is intended for developers of
the Reference Implementation and of the Technology Compatibility Kit and
for those who will be delivering implementations of this technology in
their products.

======= [#50458676_pgfId-1003575]##Abstract

[#50458676_pgfId-1002446]##This specification defines a service provider
interface (SPI) by which authentication providers implementing message
authentication mechanisms may be integrated in client or server message
processing containers or runtimes. Authentication providers integrated
through this interface operate on network messages provided to them by
their calling container. They transform outgoing messages such that the
source of the message may be authenticated by the receiving container,
and the recipient of the message may be authenticated by the message
sender. They authenticate incoming messages and return to their calling
container the identity established as a result of the message
authentication. The SPI is applicable to diverse messaging protocols
(including SOAP, JMS, and HttpServlet) and message processing runtimes
(including J2EE and Java EE containers).

[#50458676_pgfId-1003913]##This specification extends the pluggable
authentication concepts of the Java Authentication and Authorization
Service (JAAS) to the authentication of network messages. This effect is
achieved by evolving the JAAS login model to facilitate the integration
of security functionality at differentiated points within a logical
message processing model and by defining corresponding authentication
interfaces that make the network messages available for processing by
authentication modules.

======= [#50458676_pgfId-1002447]##Keywords

[#50458676_pgfId-1002421]##The keywords “MUST”, “MUST NOT”, “REQUIRED”,
“SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and
“OPTIONAL” in this document are to be interpreted as described in
RFC2119 [KEYWORDS].

======= [#50458676_pgfId-999982]##Acknowledgements

[#50458676_pgfId-999983]##This draft of the specification incorporates
the contributions of the JSR 196 Expert Group which included the
following members:

[#50458676_pgfId-1002279]## 

[#50458676_pgfId-1002211]##Steven Bazyl RSA Security, Inc.

[#50458676_pgfId-1002212]##Shing Wai Chan Sun Microsystems

[#50458676_pgfId-1003595]##Herb Erickson Novell, Inc.

[#50458676_pgfId-1002244]##Johan Gellner Tmax Soft, Inc.

[#50458676_pgfId-1002778]##Steven Kinser Novell, Inc.

[#50458676_pgfId-1002245]##Boris Koberle Sap AG.

[#50458676_pgfId-1002246]##Mikko Kolehmainen Nokia Networks

[#50458676_pgfId-1002284]##Charlie Lai Sun Microsystems

[#50458676_pgfId-1003566]##Hal Lockart BEA Systems

[#50458676_pgfId-1003567]##Thomas Maslen Quest Software

[#50458676_pgfId-1003568]##Cameron Morris Novell, Inc.

[#50458676_pgfId-1002258]##Larry McCay Individual

[#50458676_pgfId-1002216]##Ron Monzillo Sun Microsystems

[#50458676_pgfId-1002217]##Anthony Nadalin IBM

[#50458676_pgfId-1002218]##Nataraj Nagaratnam IBM

[#50458676_pgfId-1002271]##Raymond K. Ng Oracle Corporation

[#50458676_pgfId-1002272]##Arvind Prabhakar Sun Microsystems

[#50458676_pgfId-1002780]##Anil Saldhana JBoss, Inc.

[#50458676_pgfId-1002273]##Rajiv Shivane Pramati Technologies

[#50458676_pgfId-1002220]##Neil Smithline BEA Systems

[#50458676_pgfId-1002781]##Jeppe Sommer Trifork

[#50458676_pgfId-1002782]##Misun Yoon Tmax Soft, Inc.

[#50458676_pgfId-1002283]## 

[#50458676_pgfId-1002116]##The following people also contributed to this
specification:

[#50458676_pgfId-1002236]##

[#50458676_pgfId-1002783]##Venu Gopal Sun Microsystems

[#50458676_pgfId-1004007]##Will Hopkins Oracle America, Inc.

[#50458676_pgfId-1002454]##V. B. Kumar Jayanti Sun Microsystems

[#50458676_pgfId-1002452]##Manveen Kaur Sun Microsystems

[#50458676_pgfId-1002278]##Raja Perumal Sun Microsystems

[#50458676_pgfId-1004018]##Tim Quinn Oracle America, Inc.

[#50458676_pgfId-1002228]##Gursharan Singh Sun Microsystems

[#50458676_pgfId-1004002]##Anil Tappetla Sun Microsystems

[#50458676_pgfId-1004003]##Arjan Tijms

[#50458676_pgfId-1004017]##Yi Wang Oracle America, Inc.

[#50458676_pgfId-1002227]##Kai Xu Sun Microsystems

======= [#50458677_pgfId-1001080]## _CHAPTER_ [#50458677_32725]##

=== [#50458677_pgfId-1001112]##[#50458677_60270]##Overview

[#50458677_pgfId-1002411]##This chapter introduces the message
processing model facilitated by this specification and the interfaces
defined to integrate message authentication facilities within this
model.

====== [#50458677_pgfId-1010511]##[#50458677_68262]##Message Processing Model

[#50458677_pgfId-1010512]##A typical message interaction between a
client and server begins with a request from the client to the server.
The server receives the request and dispatches it to a service to
perform the requested processing. When the service completes, it may
create a response that is returned back to the client.

[#50458677_pgfId-1003541]##The SPI defined by the specification is
structured such that message processing runtimes can inject security
processing at four points in the typical message interaction scenario. A
message processing runtime uses the SPI at these points to delegate the
corresponding message security processing to authentication providers
(that is, authentication modules) integrated into the runtime by way of
the SPI.

[#50458677_pgfId-1010738]##The following diagram depicts the four
interaction points. The names of the interaction points represent the
methods of the corresponding ClientAuthModule (client authentication
module) and ServerAuthModule (server authentication module) interfaces
defined by the SPI.

[#50458677_pgfId-1009005]##  

image:jaspic-1.gif[image]

======= [#50458677_pgfId-1005043]##Message Processing Modellink:#pgfId-1010188[1]

======= [#50458677_pgfId-1003555]##Authentication Modules

[#50458677_pgfId-1003557]##As described above, there are two types of
authentication modules. A client authentication module implements the
ClientAuthModule interface and is invoked (indirectly) by a message
processing runtime at points 1 and 4 (that is, secureRequest and
validateResponse) in the message processing model. A server
authentication module implements the ServerAuthModule interface and is
invoked (indirectly) by a message processing runtime at points 2 and 3
(that is, validateRequest and secureResponse) in the message processing
model.

[#50458677_pgfId-1003674]##When an authentication module is invoked at
the identified message processing points, it is provided access to the
request and response messages (as appropriate to the point in the
interaction) and proceeds to secure or validate them as appropriate. For
example, when secureRequest is invoked on a client authentication
module, the module may attach a user name and password to the request
message. Similarly, when validateRequest is called, the server
authentication module may extract a user name and password from the
message and validate them against a user database. Note that
authentication modules are responsible for securing or validating
messages, while the message processing runtime remains responsible for
transport of messages and invocation of the corresponding application
level processing.

[#50458677_pgfId-1003580]##A message processing runtime invokes client
authentication modules by interacting with a client authentication
context object, and server authentication modules by interacting with a
server authentication context object. An authentication context object
is an implementation of either the ClientAuthContext or
ServerAuthContext interface as defined by this specification. A message
processing runtime may acquire the authentication context objects that
it uses to invoke authentication modules by interacting with an
authentication context configuration object. An authentication context
configuration object is an implementation of either the ClientAuthConfig
or ServerAuthConfig interface as defined by this specification.

======= [#50458677_pgfId-1003611]##Authentication Contexts

[#50458677_pgfId-1003629]##An authentication context is responsible for
constructing, initializing, and coordinating the invocation of one or
more encapsulated authentication modules. If the context implementation
supports the configuration of multiple authentication modules within a
context (for example, as sufficient alternatives), the context
coordinates the invocation of the authentication modules on behalf of
both the message processing runtime and the authentication modules.

[#50458677_pgfId-1004750]##A client message processing runtime interacts
with an implementation of the ClientAuthContext interface to invoke the
authentication modules of the context to perform message processing at
points 1 and 4 (secureRequest and validateResponse) of the message
processing model. Similarly, a server message processing runtime
interacts with an implementation of the ServerAuthContext interface to
invoke the modules of the context to perform message processing at
points 2 and 3 (validateRequest and secureResponse) of the message
processing model.

======= [#50458677_pgfId-1004769]##Authentication Context Configuration

[#50458677_pgfId-1006296]##An authentication context configuration
object serves a message processing runtime as the source of
authentication contexts pertaining to the messages of an application at
a messaging layer. The context configuration implementation is
responsible for returning authentication context objects that
encapsulate authentication module invocations sufficient to satisfy the
security policy configured for an application message. A message
processing runtime may use a representation of the message being
processed to obtain the corresponding authentication context from the
appropriate authentication context configuration object.

[#50458677_pgfId-1004799]##A client authentication context configuration
object implements the ClientAuthConfig interface and provides
ClientAuthContext objects for use by a message processing runtime at
points 1 and 4 (secureRequest and validateResponse) in the message
processing model. A server authentication context configuration object
implements the ServerAuthConfig interface and provides ServerAuthContext
objects for use by a message processing runtime at points 2 and 3
(validateRequest and secureResponse) in the message processing model.

[#50458677_pgfId-1004828]##A message processing runtime may acquire
authentication context configuration objects by interacting with a
provider of authentication context configuration objects.

======= [#50458677_pgfId-1004813]##Authentication Context Configuration Providers

[#50458677_pgfId-1004814]##An authentication context configuration
provider is an implementation of the AuthConfigProvider interface. An
authentication context configuration provider serves as a source of
authentication context configuration objects, where as noted above, each
configuration object serves as the source of authentication contexts
pertaining to the messages of an application at a messaging layer.

[#50458677_pgfId-1004839]##An authentication context configuration
provider embodies the implementation of a message authentication
configuration mechanism. Each such configuration mechanism encapsulates
the message authentication processing pertaining to applications in
configuration objects that return context objects that coordinate the
invocation of pluggable authentication modules to perform message
authentication on behalf of the corresponding applications.

[#50458677_pgfId-1004863]##The AuthConfigFactory class serves as the
catalog or registry of authentication context providers available for
use by a runtime. A message processing runtime may interact with the
factory to obtain or establish the provider registered for an
application context and messaging layer.

======= [#50458677_pgfId-1003056]##Request and Response Messages

[#50458677_pgfId-1003057]##Request and response messages are Java
representations of the corresponding protocol messages, and are passed
to authentication modules through an implementation of the MessageInfo
interface which provides common methods for accessing protocol specific
messages.

[#50458677_pgfId-1003773]##Authentication Modules that operate on
messages for a specific protocol (for example, SOAP messages) are
expected to be configured for and called from an appropriate message
processing runtime (for example, a SOAP message processing runtime).

======= [#50458677_pgfId-1003063]##Message Authentication Policy

[#50458677_pgfId-1004703]##When an authentication module is initialized
within an authentication context, it is passed policy information that
specifies what authentication guarantees the module is to enforce when
securing or validating request and response messages within that
context. Policy information is conveyed by the authentication context to
the authentication module in the form of MessagePolicy objects. Two
separate MessagePolicy objects are passed to the module through its
initialize method: One defines the message authentication policy to be
applied to the request message, and the other defines the message
authentication policy to be applied to the response.

[#50458677_pgfId-1009331]##A message authentication policy can be
targeted at specific parts of the related message or to the message as a
whole, and conveys the high level authentication guarantees that must be
enforced by the modules of a context. The policy may specify, for
example, that the source of a request must be authenticated. The
mechanisms by which a module enforces the guarantees, or, in other
words, how the module enforces the guarantees is up to the module.

======= [#50458677_pgfId-1003068]##Authentication Exchanges and State

[#50458677_pgfId-1003069]##Authentication modules should be implemented
such that they may be invoked concurrently and such that they are able
to apply and establish independent security identities for concurrent
invocations. To this end, modules should rely on their invocation
parameters and the callbacks supported by the CallbackHandler with which
they were initialized to obtain any information required to establish
the invocation context for which they were invoked.

[#50458677_pgfId-1009931]##In a multi-message authentication scenario,
it is the responsibility of the authentication modules involved in the
authentication to tie together or correlate the messages that comprise
the authentication exchange. In addition to message correlation to tie
together the messages required to complete an authentication, message
correlation may also be employed post-authentication such that a prior
authentication result or session may be applied to a subsequent
invocation. Modules are expected to perform their message correlation
function based on the parameters of their invocation and with the
benefit of any additional facilities provided by the invoking runtime
(for example, through their CallbackHandler).

[#50458677_pgfId-1010049]##To assist modules in performing their
correlation function, calls made to validateResponse must be made with
the same messageInfo object used in the call to secureRequest (or
validateResponse) that elicited the response. Similarly, calls made to
secureResponse must be made with the same messagInfo object that was
passed to validateRequest (for the corresponding request message).
Modules are also expected to avail themselves of persisted state
management facilities (for example, javax.servlet.http.HttpSession
facilities) provided by the invoking runtime. The use of such facilities
prior to authentication may increase the system’s susceptibility to a
denial-of-service attack, and their use by authentication modules should
be considered in that regard.

[#50458677_pgfId-1010081]##For security mechanisms or protocols where
message correlation is dependent on the content of exchanged messages,
it is the responsibility of the authentication modules to ensure that
the required correlation information is inserted in the exchanged
messages. For security mechanisms where message correlation is dependent
on context external to the exchanged messages, such as the transport
connection or session on which messages are received, the authentication
modules will be dependent on correlation related facilities provided by
the runtime.

[#50458677_pgfId-1010059]##This version of this specification does not
define the interfaces by which runtimes present correlation facilities
to authentication modules.

======= [#50458677_pgfId-1009768]##[#50458677_89561]##Callbacks for Information From the Runtime

[#50458677_pgfId-1003072]##Authentication modules may require security
information from the message processing environment that invoked them.
For example, a ClientAuthModule may require access to the client's key
pair to sign requests made on behalf of the client. The client's keys
would typically have been configured as part of the client application
itself. Likewise, a ServerAuthModule may require access to the server's
key pair to sign responses from the server. The server's keys would
typically be configured as part of the server.

[#50458677_pgfId-1004013]##To access cryptographic keys or other
external security credentials configured as part of the encompassing
runtime, an authentication module is provided with a CallbackHandler (at
initialization). The CallbackHandler is provided by the encompassing
runtime and serves to provide the authentication module with access to
facilities of the encompassing runtime.

[#50458677_pgfId-1004014]##The module can ask the CallbackHandler to
handle requests for security information needed by the module to perform
its message authentication processing.

======= [#50458677_pgfId-1003083]##Subjects

[#50458677_pgfId-1003084]##When an authentication module is invoked to
validate a message, it is passed a Subject object to receive the
credentials of the source of the message and a separate Subject object
to represent the credentials of the recipient of the message (such that
they are available to validate the message). When an authentication
module is invoked to validate a message, it communicates the message
source or caller authentication identity to its calling runtime (for
example, container) through (that is, by modifying) the Subject
associated with the source of the message.

[#50458677_pgfId-1004114]##Authentication modules may rely on the
Subjects as well as the CallbackHandler, described in
link:jaspic.htm#50458677_89561[See Callbacks for Information From the
Runtime], to obtain the security information necessary to secure or
validate messages. When an authentication module is invoked to secure a
message, it is passed a Subject object that may convey the credentials
of the source of the message (such that they are available to secure the
request).

======= [#50458677_pgfId-1008862]##Status Values and Exceptions

[#50458677_pgfId-1009359]##Authentication modules and authentication
contexts return AuthStatus values to characterize the outcome of their
message processing. When an AuthStatus value is returned, its value
represents the logical result of the module processing and indicates
that the module has established a corresponding request or response
message within the MessageInfo parameter exchanged with the runtime.

[#50458677_pgfId-1008956]##Authentication modules and authentication
contexts throw exceptions when their processing was unsuccessful and
when that processing did not establish a corresponding request or
response message to convey the error.

[#50458677_pgfId-1009399]##The vocabulary of AuthStatus values and
exceptions returned by authentication modules, and their mapping to the
message processing points at which they may be returned, is represented
in the following table.

======= [#50458677_pgfId-1009405]##AuthStatus and AuthException to Message Processing Point Matrix

[#50458677_pgfId-1009415]##status or exception

[#50458677_pgfId-1009417]##secureRequest

[#50458677_pgfId-1009419]##validateRequest

[#50458677_pgfId-1009421]##secureResponse

[#50458677_pgfId-1009423]##validateResponse

[#50458677_pgfId-1009425]##SUCCESS

[#50458677_pgfId-1009427]## 

[#50458677_pgfId-1009429]##Yes

[#50458677_pgfId-1009431]## 

[#50458677_pgfId-1009433]##Yes

[#50458677_pgfId-1009435]##FAILURE

[#50458677_pgfId-1009437]##Yes

[#50458677_pgfId-1009439]## 

[#50458677_pgfId-1009441]## 

[#50458677_pgfId-1009443]##Yes

[#50458677_pgfId-1009445]##SEND_SUCCESS

[#50458677_pgfId-1009447]##Yes

[#50458677_pgfId-1009449]##Yes

[#50458677_pgfId-1009451]##Yes

[#50458677_pgfId-1009453]## 

[#50458677_pgfId-1009455]##SEND_FAILURE

[#50458677_pgfId-1009457]## 

[#50458677_pgfId-1009459]##Yes

[#50458677_pgfId-1009461]##Yes

[#50458677_pgfId-1009463]## 

[#50458677_pgfId-1009465]##SEND_CONTINUE

[#50458677_pgfId-1009467]##Yes

[#50458677_pgfId-1009469]##Yes

[#50458677_pgfId-1009471]##Yes

[#50458677_pgfId-1009473]##Yes

[#50458677_pgfId-1009475]##AuthException

[#50458677_pgfId-1009477]##Yes

[#50458677_pgfId-1009479]##Yes

[#50458677_pgfId-1009481]##Yes

[#50458677_pgfId-1009483]##Yes

[#50458677_pgfId-1009808]##The following table describes the high level
semantics associated with the status values and exceptions presented in
the preceding table.

== [#50458677_pgfId-1009811]##AuthStatus and AuthException Semantics

[#50458677_pgfId-1009815]##status or exception

[#50458677_pgfId-1009817]##semantic

[#50458677_pgfId-1009819]##SUCCESS

[#50458677_pgfId-1009821]##Validation of a received message was
successful and produced either the request (validateRequest) message to
be dispatched to the service, or the response (validateResponse) message
to be returned to the client application.

[#50458677_pgfId-1009823]##FAILURE

[#50458677_pgfId-1009825]##A failure occurred on the client-side
(secureRequest or validateResponse) and produced a failure response
message to be returned to the client application.

[#50458677_pgfId-1009827]##SEND_SUCCESS

[#50458677_pgfId-1009829]##Processing of a request (secureRequest or
validateRequest) or response (secureResponse) message was successful and
produced the request (secureRequest) or response (validateRequest,
secureResponse) message to be sent to the peer.

[#50458677_pgfId-1009831]##SEND_FAILURE

[#50458677_pgfId-1009833]##A failure occurred on the service-side
(validateRequest or secureResponse) and produced a failure response
message to be sent to the client.

[#50458677_pgfId-1009835]##SEND_CONTINUE

[#50458677_pgfId-1009837]##Processing was incomplete. Additional message
exchanges will be required to achieve successful completion. The
processing produced the next request (secureRequest or validateResponse)
or response (validateRequest or secureResponse) message to be sent to
the peer.

[#50458677_pgfId-1009839]##AuthException

[#50458677_pgfId-1009841]##A failure occurred on the client-side
(secureRequest or validateResponse) or service-side (validateRequest or
secureResponse) without producing a failure response message.

[#50458677_pgfId-1009842]##The expected behavior of runtimes in response
to AuthStatus return values and AuthException exceptions is described in
link:jaspic.htm#50458678_68163[See What the Runtime Must Do]. These
behaviors may be specialized in profiles of this specification.

====== [#50458677_pgfId-1009663]##[#50458677_96760]##Typical Runtime Use Model

[#50458677_pgfId-1006443]##In the typical use model, a runtime would
perform the five steps defined in the following subsections to secure or
validate a message. In many cases, some or all of steps 1-4 will be
performed once, while step 5 would be repeated for each message to be
processed.

======= [#50458677_pgfId-1005710]##Acquire AuthConfigProvider

[#50458677_pgfId-1005850]##The message processing runtime acquires a
provider of authentication context configuration objects for the
relevant messaging layer and application identifier. This step is
typically done once for each application, and may be accomplished as
follows:

======= [#50458677_pgfId-1005863]## AuthConfigFactory factory = AuthConfigFactory.getFactory();

======= [#50458677_pgfId-1005854]##AuthConfigProvider provider = factory.getConfigProvider(layer, appID, listener);

======= [#50458677_pgfId-1005831]##Acquire AuthConfig

[#50458677_pgfId-1005868]##The message processing runtime acquires the
authentication context configuration object for the application from the
provider. This step is typically done at application deployment, and may
be accomplished as follows:

======= [#50458677_pgfId-1005876]## ClientAuthConfig clientConfig =

======= [#50458677_pgfId-1009255]## provider.getClientAuthConfig(layer, appID, callbackHandler);

[#50458677_pgfId-1006272]##or:

======= [#50458677_pgfId-1005897]## ServerAuthConfig serverConfig =

======= [#50458677_pgfId-1009259]## provider.getServerAuthConfig(layer, appID, callbackHandler);

[#50458677_pgfId-1005720]##The resulting authentication context
configuration object encapsulates all authentication contexts for the
application at the layer. Its internal state will be kept up to date by
the configuration system, and from this point until the application is
undeployed, the configuration object represents a stable point of
interaction between the runtime and the integrated authentication
mechanisms for the purpose of securing the messages of the application
at the layer.

[#50458677_pgfId-1006011]##A callback handler is associated with the
configuration object when it is obtained from the provider. This
callback handler will be passed to the authentication modules within the
authentication contexts acquired from the configuration object. The
runtime provides the callback handler so that the authentication modules
may employ facilities of the messaging runtime (such as keying
infrastructure) in their processing of application messages.

======= [#50458677_pgfId-1005905]##[#50458677_73081]##Acquire AuthContext Identifier

[#50458677_pgfId-1010395]##At points (1) and (2) in the message
processing model, a message processing runtime creates a MessageInfo
object and sets within it the message or messages being processed. The
runtime uses the MessageInfo to acquire the authentication context
identifier corresponding to the message from the authentication
configuration object. This step is typically performed for every
differentlink:#pgfId-1010421[2] request and may be accomplished by a
runtime as follows:

======= [#50458677_pgfId-1006646]##String authContextID = clientConfig.getAuthContextID(messageInfo);

[#50458677_pgfId-1006647]##or:

======= [#50458677_pgfId-1006652]##String authContextID = serverConfig.getAuthContextID(messageInfo);

[#50458677_pgfId-1006511]##The authentication context identifier will be
used to select the authentication context with which to perform the
message processing. In cases where the configuration system cannot
determine the context identifierlink:#pgfId-1006514[3], the value null
will be returned.

======= [#50458677_pgfId-1005728]##[#50458677_78800]##Acquire Authentication Context

[#50458677_pgfId-1006007]##The authentication identifier is used to
acquire an authentication context from the authentication context
configuration object. The acquired authentication context encapsulates
the one or more authentication modules that are to be invoked to process
the identified messages. The authentication context is acquired from the
authentication context configuration object as follows:

======= [#50458677_pgfId-1006361]##ClientAuthContext clientContext =

======= [#50458677_pgfId-1009155]## clientConfig.getAuthContext(authContextID, clientSubject, properties);

[#50458677_pgfId-1006015]## or:

======= [#50458677_pgfId-1006021]## ServerAuthContext serverContext =

======= [#50458677_pgfId-1009159]## serverConfig.getAuthContext(authContextID, serviceSubject, properties);

[#50458677_pgfId-1010353]##The properties argument is used to pass
additional initialization time properties to the authentication modules
encapsulated in the authentication context. Such properties might be
used to convey values specific to this use of the context by a user or
with a specific service.

[#50458677_pgfId-1010366]##The Subject argument is used to make the
principals and credentials of the sending entity available during the
acquisition of the authentication context. If the Subject is not null,
additional principals or credentials (pertaining to the sending entity)
may be added (to the Subject) during the context acquisition.

======= [#50458677_pgfId-1010367]##Process Messages

[#50458677_pgfId-1006051]##Appropriate to its point of processing in the
messaging model, the messaging runtime uses the MessageInfo described in
Step 3 to invoke a method of the authentication context obtained in Step
4.

[#50458677_pgfId-1006157]##At point (1) in the messaging model, the
clientSubject may contain the credentials used to secure the request, or
the modules of the context may collect the client credentials including
by using the callback handler passed through to them by the context.
MessageInfo would contain a request message about to be sent. On
successful return from the context, the runtime would extract the
secured request message from messageInfo and send it.

[#50458677_pgfId-1006545]##(1) AuthStatus status =
clientContext.secureRequest(messageInfo, clientSubject);

[#50458677_pgfId-1006174]##At point (2), the clientSubject receives any
principals or credentials established as a result of message validation
by the authentication modules of the context. The serviceSubject may
contain the credentials of the service or the modules of the context may
collect the service credentials, as necessary, by using the callback
handler passed to them by the context. MessageInfo would contain a
received request message. On successful return from the context, the
runtime may use the clientSubject to authorize and dispatch the
validated request message, as appropriate.

======= [#50458677_pgfId-1006559]##(2) AuthStatus status =

======= [#50458677_pgfId-1009087]## serverContext.validateRequest(messageInfo, clientSubject, serviceSubject);

[#50458677_pgfId-1006469]##At point (3), the serviceSubject may contain
the credentials used to secure the response, or the modules of the
context may collect the service credentials including by using the
callback handler passed through to them by the context. The MessageInfo
would contain a response message about to be sent and may also contain
the corresponding request message received at point (2). On return from
the context, the runtime would send the secured response message.

======= [#50458677_pgfId-1006564]##(3) AuthStatus status =

======= [#50458677_pgfId-1009105]## serverContext.secureResponse(messageInfo, serviceSubject);

[#50458677_pgfId-1006475]##At point (4), the serviceSubject receives any
principals or credentials established as a result of message validation
by the authentication modules of the context. The clientSubject may
contain the credentials of the receiving client or the modules of the
context may collect the client credentials, as necessary, by using the
callback handler passed to them by the context. MessageInfo would
contain a received response message and may also contain the associated
request message sent at point (1). On successful return from the
context, the runtime may use the serviceSubject to authorize the
response and would return the received message to the client, as
appropriate.

======= [#50458677_pgfId-1006571]##(4) AuthStatus status =

[#50458677_pgfId-1009126]## clientContext.validateResponse(messageInfo,
clientSubject, serviceSubject);

====== [#50458677_pgfId-1003792]##[#50458677_86694]##Terminology

======= [#50458677_pgfId-1005335]##authentication context

[#50458677_pgfId-1005336]##A Java Object that implements the
ClientAuthContext and/or ServerAuthContext interfaces and that is
responsible for constructing, initializing, and coordinating the
invocation of one or more encapsulated authentication modules.
Authentication context objects are classified as client or server
authentication contexts.

======= [#50458677_pgfId-1005342]##authentication context configuration

[#50458677_pgfId-1005343]## A Java Object that implements the AuthConfig
Interface and that serves as the source of client or server
authentication context objects pertaining to the processing of messages
for an application at a messaging layer.

======= [#50458677_pgfId-1005350]##authentication context configuration provider

[#50458677_pgfId-1005351]## A Java Object that implements the
AuthConfigProvider Interface and that serves as the source of
authentication context configuration objects.

======= [#50458677_pgfId-1003793]##authentication module

[#50458677_pgfId-1003794]##A Java Object that implements the
ClientAuthModule and/or ServerAuthModule message authentication
interfaces defined by this specification.

======= [#50458677_pgfId-1003795]##authentication provider

[#50458677_pgfId-1003796]##A synonym for an authentication module.

======= [#50458677_pgfId-1005359]##client authentication context

[#50458677_pgfId-1005360]##An authentication context that implements the
ClientAuthContext interface and that encapsulates client authentication
modules.

======= [#50458677_pgfId-1005366]##client authentication context configuration

[#50458677_pgfId-1005367]##An authentication context configuration that
implements the ClientAuthConfig interface and that returns client
authentication contexts.

======= [#50458677_pgfId-1003797]##client authentication module

[#50458677_pgfId-1003798]##A Java Object that implements the
ClientAuthModule interface defined by this specification.

======= [#50458677_pgfId-1005535]##message layer

[#50458677_pgfId-1005648]## The name associated within a message
processing runtime with a messaging protocol or abstraction, and which
may be used in the interfaces defined by this specification to cause the
integration of security mechanisms at the corresponding points within
the messaging runtime.

======= [#50458677_pgfId-1010619]##message processing runtime

[#50458677_pgfId-1010620]##The process or component (for example,
container) responsible for sending and receiving, including establishing
the transports used for such purposes, the application messages to be
secured using the interfaces defined by this specification. Message
processing runtimes are characterized as client, server, or as both
client and server message processing runtimes. A client message
processing runtime sends service requests and receives service
responses. A server message processing runtime receives service requests
and sends service responses.

======= [#50458677_pgfId-1005649]##message (layer) security

[#50458677_pgfId-1005158]## A network security mechanism that operates
above the transport and below the application messaging layers, and that
typically operates by encapsulating or associating application layer
messages within a securing context that may be independent of the
transport or connection over which the messages are communicated.

======= [#50458677_pgfId-1006689]##meta message

[#50458677_pgfId-1006693]##A mechanism specific message sent in addition
to (for example, in an advance of) the application messages, typically
for the purpose of establishing or modifying the context (such as
security) in which application messages will be exchanged.

======= [#50458677_pgfId-1005373]##server authentication context

[#50458677_pgfId-1005374]##An authentication context that implements the
ServerAuthContext interface and that encapsulates server authentication
modules.

======= [#50458677_pgfId-1005150]##server authentication context configuration

[#50458677_pgfId-1004952]##An authentication context configuration that
implements the ServerAuthConfig interface and that encapsulates client
authentication context.

======= [#50458677_pgfId-1005381]##server authentication module

[#50458677_pgfId-1005382]##A Java Object that implements the
ServerAuthModule interface defined by this specification.

====== [#50458677_pgfId-1003805]##Assumptions

[#50458677_pgfId-1005407]##The following assumptions apply to the
interfaces defined by this specification:

[#50458677_pgfId-1005186]##This specification defines interfaces for
integrating message layer security functionality in Java messaging
runtimes. These interfaces are intended to be employed by Java
Enterprise Edition (Java EE version 1.4 and beyond) messaging runtimes,
and by any Java messaging runtime that chooses to use them to support
integration of message layer security functionality.

[#50458677_pgfId-1005193]##The interfaces defined by this specification
have been developed for use within the message processing runtimes of
service consumers (for example, clients) and service providers (for
example, servers).

[#50458677_pgfId-1005207]##Interoperability between a message processing
runtime that employs the interfaces defined by this specification and
any other system will depend on the formats of the exchanged messages,
not on the interfaces used to process them.

[#50458677_pgfId-1005245]##This specification will define profiles to
establish the requirements governing the use of its interfaces within
specific messaging contexts or runtimes. Additional profiles may be
defined in futures releases of this specification, or external to it.

[#50458677_pgfId-1005246]##This specification promotes authentication
modules as the pluggable unit of message layer security functionality.
In the typical integration scenario, a new message layer security
mechanism is integrated in a message processing runtime as the result of
the configuration of a new authentication module.

[#50458677_pgfId-1005247]##Mechanisms that feature or require more
complex or specialized configuration functionality may depend on
integration of a corresponding configuration provider which may
encapsulate authentication module pluggability, including such that it
occurs as the result of provider configuration.

[#50458677_pgfId-1005236]##A message processing runtime that uses the
interfaces defined by this specification will remain responsible for
sending and receiving, including establishing the transports used for
such purposes, the application messages secured through these
interfaces. The integrated security mechanism code is responsible for
adding security constructs to messages to be sent, and for interpreting
security constructs contained in received messages.

[#50458677_pgfId-1005308]##As needed to perform its primary function
(that is, to add to and validate security constructs in messages
provided to it by its messaging runtime), an authentication mechanism
integrated through the interfaces defined in this specification may use
its own facilities or those of its calling runtime to exchange
additional messages with the same or with other parties.

[#50458677_pgfId-1005398]##Some multi-message authentication dialogs
require that the sending runtime be able to delay or retry application
message transmission until after a preliminary authentication dialog has
completed. Where a sending runtime is unable to perform such
functionality, effective integration of a dependent security mechanism
may require that the integrated security facilities perform the required
delay and retry functionality.

[#50458677_pgfId-1005389]##Authentication mechanisms integrated in a
messaging runtime through the interfaces defined by this specification
may require access to sensitive security information (for example,
cryptographic keys) for which access may have otherwise been limited to
the messaging runtime.

[#50458677_pgfId-1006499]##Independent of message transformations
performed by one or more integrated security mechanisms, the client
messaging runtime must remain capable of associating received responses
with sent requests.

====== [#50458677_pgfId-1006500]##Requirements

[#50458677_pgfId-1005404]## The interfaces defined by this specification
must comply with the following:

[#50458677_pgfId-1003815]##Be compatible with versions of Java beginning
with 1.4.

[#50458677_pgfId-1005657]##Be compatible with a wide range of messaging
protocols and runtimes.

[#50458677_pgfId-1005660]##Support the integration and configuration of
message security mechanisms in Java message processing runtimes that
retain responsibility for the transport of application layer messages.

[#50458677_pgfId-1005433]##Provide integrated authentication mechanisms
with access to the application messages transported by the messaging
runtime, especially for the purpose of adding or validating contained
security credentials.

[#50458677_pgfId-1005437]##Define a means for an integrated security
mechanism to establish (for example, application layer) response
messages as necessary to implement security mechanisms.

[#50458677_pgfId-1005445]##Define a means for an integrated security
mechanism to effect the destination address of outgoing messages.

[#50458677_pgfId-1005444]##Support the binding of received messages to
configured security mechanisms at various levels of granularity such as
per messaging runtime, per messaging layer, per application, and per
message.

[#50458677_pgfId-1005661]##Support the integration of alternative
security mechanism configuration facilities as required to support
specific security mechanisms or to integrate into standard or existing
configuration infrastructures.

[#50458677_pgfId-1005465]##Support the runtime binding of user or
application client credentials to invocations of authentication modules.

[#50458677_pgfId-1005418]##Support the establishment of Subject based
authorization identities by integrated authentication mechanisms.

[#50458677_pgfId-1005476]##Define a means for integrated security
mechanisms to gain access to facilities (for example, key repositories,
password databases, and subject or principal interpretation interfaces)
of their calling messaging runtime.

[#50458677_pgfId-1005478]##Facilitate the correlation of the associated
request and response processing performed by an authentication module.

[#50458677_pgfId-1005484]##Support runtime parameterization of security
mechanism invocation such that a single mechanism configuration can be
employed to secure commonly protected exchanges with different service
entities.

[#50458677_pgfId-1005506]##Support the apportionment of responsibility
for creation and maintenance of stateful security contexts among a
messaging runtime and its integrated security mechanisms, especially
such that context invalidation (including as a result of policy
modification) by either party is appropriately detected by the other.

[#50458677_pgfId-1005529]##Support the portable implementation
(including by third parties) of security mechanisms such that they may
be integrated in any messaging runtime which is compatible with the
corresponding interfaces of this specification.

======= [#50458677_pgfId-1005530]##Non Requirements

[#50458677_pgfId-1003789]##The standardization of specific principals or
credentials to be added by authentication modules to subjects.

[#50458677_pgfId-1005667]##The standardization of additional interfaces
or callbacks to allow JAAS login modules to secure the request and
response messages exchanged by J2EE and Java EE containers.

[#50458677_pgfId-1009392]##The standardization of interfaces to interact
with network authentication services, or to represent the security
credentials acquired from such services.

[#50458677_pgfId-1005669]##The standardization of application
programming interfaces for use in establishing or manipulating security
contexts in Subjects.

======= [#50458678_pgfId-1009178]## _CHAPTER_ [#50458678_32725]##

=== [#50458678_pgfId-1019308]##[#50458678_66195]##Message Authentication

[#50458678_pgfId-1019309]##This chapter defines how message processing
runtimes invoke authentication modules to secure or validate request and
response messages. It describes the interactions that occur between
message processing runtimes and authentication modules to cause security
guarantees to be enforced on request and response messages.

[#50458678_pgfId-1029417]##The subsections of this chapter establish the
common requirements that pertain to the use of this specification in a
generic message processing context. Profiles are expected to be defined
to establish the specific requirements pertaining to the use of this
specification in a particular message processing context.

[#50458678_pgfId-1031097]##The API defined by this specification is
intended to have more general applicability than the contexts of use
defined in this specification. To that end, a runtime that provides
compatible Java definitions of the interfaces defined by this
specification and compatible Java implementations of the defined classes
satisfies the baseline compatibility requirements of this specification.

====== [#50458678_pgfId-1029418]##[#50458678_91017]##Authentication

[#50458678_pgfId-1029422]##As defined in
link:jaspic.htm#50458677_96760[See Typical Runtime Use Model],” a
message processing runtime’s interaction with the interfaces defined by
this specification is divided into the following five phases:

[#50458678_pgfId-1022501]##Acquire AuthConfigProvider – Runtime acquires
a provider of authentication context configuration objects for the
relevant messaging layer and application identifier.

[#50458678_pgfId-1022502]##Acquire AuthConfig – Runtime acquires the
authentication context configuration object for the application from the
provider.

[#50458678_pgfId-1022509]##Acquire AuthContext Identifier – Runtime
acquires the authentication context identifier corresponding to the
messages to be processed.

[#50458678_pgfId-1022534]##Acquire Authentication Context – Runtime uses
the context identifier to obtain the corresponding authentication
context.

[#50458678_pgfId-1022542]##Process Message(s) – Runtime uses the
authentication context to process the messages.

[#50458678_pgfId-1022563]##The remaining sections of this chapter define
the requirements that must be satisfied by messaging runtimes and
providers in support of each of the five interactions identified above.

======= [#50458678_pgfId-1022576]##[#50458678_27490]##Acquire AuthConfigProvider

======= [#50458678_pgfId-1022679]##[#50458678_58423]##What the Runtime Must Do

[#50458678_pgfId-1030758]##For a message processing runtime to be able
to invoke authentication modules configured according to this
specification, the JVM of the message processing runtime must have been
configured or initialized such that it has loaded the abstract
AuthConfigFactory class, and such that the getFactory method of the
abstract class (loads, as necessary, and) returns a concrete
implementation of AuthConfigFactory. When called by the messaging
runtime with layer and appContext arguments, the getConfigProvider
method of the returned factory implementation must return the
corresponding (as a result of configuration or registration)
AuthConfigProvider object (or null if no provider is configured for the
arguments).

[#50458678_pgfId-1030766]##This specification defines authorization
protected configuration interfaces, and a message processing runtime
must support the granting, to applications and administration utilities,
of the permissions required to employ these configuration interfaces.

[#50458678_pgfId-1030759]##A message processing runtime that wishes to
invoke authentication modules configured according to this specification
must use the AuthConfigFactory.getFactory method to obtain a factory
implementation. The runtime must invoke the getConfigProvider method of
the factory to obtain the AuthConfigProvider. The runtime must specify
appropriate (non-null) layer and application context identifiers in its
call to getConfigProvider. The specified values must be as defined by
the profile of this specification being followed by the messaging
runtime.

[#50458678_pgfId-1030736]##A runtime may continue to reuse a provider
for as long as it wishes. However, a runtime that wishes to be notified
of changes to the factory that would cause the factory to return a
different provider for the layer and appContext arguments should include
a (non-null) RegistrationListener as an argument in the call used to
acquire the provider. When a listener argument is included in the call
to acquire a provider, the factory will invoke the notify method of the
listener when the correspondence between the provider and the layer and
application context for which it had been acquired is no longer in
effect. When the notify method is invoked by the factory, the runtime
should reacquire an AuthConfigProvider for the layer and application
context.

======= [#50458678_pgfId-1030738]##What the Factory Must Do

[#50458678_pgfId-1022670]##The factory implementation must satisfy the
requirements defined by the AuthConfigFactory class. In particular, it
must offer a public, zero argument constructor that supports the
construction and registration of AuthConfigProvider objects from a
persistent declarative representation.

======= [#50458678_pgfId-1022786]##Acquire AuthConfig

======= [#50458678_pgfId-1022800]##What the Runtime Must Do

[#50458678_pgfId-1022776]##Once the runtime has obtained the appropriate
(non-null) AuthConfigProvider, it must obtain from the provider the
authentication context configuration object corresponding to the
messaging layer, its role as client or server, and the application
context for which it will be exchanging messages. It does this by
invoking getClientAuthConfig or getServerAuthConfig as appropriate to
the role of the runtime in the message exchange. A runtime operating at
points 1 and 4 in the messaging model must invoke getClientAuthConfig to
acquire its configuration object. A runtime operating at points 2 and 3
in the messaging model must invoke getServerAuthConfig to acquire its
configuration object. The call to acquire the configuration object must
specify the same values for layer and application context identifier
that were used to acquire the provider. Depending on the profile of this
specification being followed by the messaging runtime, a CallbackHandler
may also be a required argument of the call to acquire the configuration
object. When a profile requires a CallbackHandler, the profile must also
specify the callbacks that must be supported by the handler.

[#50458678_pgfId-1022840]##A runtime may continue to reuse an acquired
authentication context configuration object for as long as it is acting
as client or server of the corresponding application. A runtime should
reacquire an authentication context configuration object when it is
notified (through a RegistrationListener) that it must reacquire the
AuthConfigProvider from which the configuration object was acquired (and
after having reacquired the provider).

======= [#50458678_pgfId-1022587]##[#50458678_80015]##What the Provider Must Do

[#50458678_pgfId-1022869]##The provider implementation must satisfy the
requirements defined by the AuthConfigProvider interface. In particular,
it must return non-null authentication configuration objects. Moreover,
when the provider is a dynamic configuration provider, any change to the
internal state of the provider occurring as the result of a call to its
refresh method must be recognized by every authentication context
configuration object obtained from the provider.

[#50458678_pgfId-1028426]##The provider implementation must provide a
configuration facility that may be used to configure the information
required to initialize authentication contexts for the (one or more)
authentication context configuration scopes (defined by layer and
application context) for which the provider is registered (at the
factory).

[#50458678_pgfId-1029945]##To allow for delegation of session management
to authentication contexts and their contained authentication modules,
it must be possible for one or more of the authentication context
configuration scopes handled by an AuthConfigProvider to be configured
such that the getAuthContext method of the corresponding authentication
context configuration objects will return a non-null authentication
context for all authentication context identifier values, independent of
whether or not the corresponding messages require protection. In this
case, contexts returned for messages for which protection is NOT
required must initialize their contained authentication modules with
request and/or response MessagePolicy objects for which isMandatory()
returns false (while allowing for the case where one of either request
or response policy may be null).

[#50458678_pgfId-1028434]##A sample and perhaps typical context
initialization model is described in
Sectionlink:jaspic.htm#50458678_61169[See What the Configuration Must
Do]. Providers must offer a configuration facility sufficient to sustain
the typical context initialization model.

======= [#50458678_pgfId-1028415]##[#50458678_97015]##Acquire AuthContext Identifier

======= [#50458678_pgfId-1023040]##What the Runtime Must Do

[#50458678_pgfId-1023027]##At points (1) and (2) in the messaging model,
the message processing runtime must obtain the authentication context
identifier corresponding to the request message processing being
performed by the runtime.

[#50458678_pgfId-1024053]##The identifier may be acquired by calling the
getAuthContextID method of the authentication context configuration
object (obtained in the preceding step). If the messaging runtime
chooses to obtain the context identifier by this means, it must provide
a MessageInfo object as argument to the getAuthContextID call, and the
MessageInfo must have been initialized such that its getRequestMessage
method will return the request message being processed by the runtime.
The type of the returned request message must be as defined by the
profile of this specification being followed by the messaging runtime.

[#50458678_pgfId-1029897]##Alternatively and depending on the
requirements relating to authentication context identifier inherent in
the profile being followed by the messaging runtime, the runtime may
obtain the identifier by other means. Where a profile defines or
facilitates other means by which a messaging runtime may acquire the
identifier, the identifier acquired by any such means must be equivalent
to the identifier that would be acquired by calling getAuthContextID as
described above.

======= [#50458678_pgfId-1029898]##What the Configuration Must Do

[#50458678_pgfId-1028017]##The configuration implementation must satisfy
the requirements defined by the AuthConfig interface with respect to the
getAuthContextID method.

======= [#50458678_pgfId-1022896]##[#50458678_91867]##Acquire Authentication Context

======= [#50458678_pgfId-1024098]##What the Runtime Must Do

[#50458678_pgfId-1029912]##At points (1) and (2) in the messaging model,
the message processing runtime must invoke the getAuthContext method of
the authentication context configuration object (obtained in step 2) to
obtain the authentication context object corresponding to the message
that is to be processed. This is accomplished by invoking getAuthContext
with the authentication context identifier corresponding to the request
message and obtained as described above. If required by the profile of
this specification being followed by the runtime, the call to
getAuthContext must pass a Map containing the required property
elements. The value of the Subject argument provided by the runtime in
its call to getAuthContext must correspond to the requirements of the
profile of this specification being followed by the runtime.

[#50458678_pgfId-1029662]## Once an authentication context is acquired,
it may be reused to process subsequent requests of the application for
which an equivalent authentication context identifier, Subject, and
properties Map (as used in the getAuthContext) applies. Runtimes that
wish to be dynamic with respect to changes in context configuration
should call getAuthContext for every request. An authentication context
configuration object may return the same authentication context object
for different authentication context identifiers for which the same
module configuration and message protection policy applies.

[#50458678_pgfId-1028510]##At points (3) and (4) in the messaging model,
the runtime may repeat the context acquisition performed at point (2)
and (1) respectively, or it may reuse the previously acquired context.

======= [#50458678_pgfId-1027953]##[#50458678_61169]##What the Configuration Must Do

[#50458678_pgfId-1028293]##The configuration implementation must satisfy
the requirements defined by the corresponding ClientAuthConfig or
ServerAuthConfig interface with respect to the getAuthContext method. In
this regard, the configuration implementation must determine the
authentication modules that are to comprise the acquired context, and it
must provide the context implementation with sufficient information to
initialize the modules of the context. The getAuthContext method must
return null when no authentication modules are to be invoked for an
identified authentication context at the layer and application context
represented by the configuration object.

[#50458678_pgfId-1028301]##The interfaces by which an authentication
context configuration object obtains a properly configured or
initialized authentication context object are implementation-specific.
That said, it is expected that the typical context initialization will
require the following information:

* [#50458678_pgfId-1028302]##The CallbackHandler (if any) to be passed
to the modules of the context
* [#50458678_pgfId-1028322]##A list of one or more module configurations
(one for each module of the context), and where each such configuration
conveys (either directly or indirectly) the following information:

[#50458678_pgfId-1028325]##The implementation class for the
authentication module (that is, an implementation of the
ClientAuthModule or ServerAuthModule interface as appropriate to the
type of the containing context)

[#50458678_pgfId-1028331]##The module specific initialization properties
(in a form compatible with conveyance to the module by using a Map)

[#50458678_pgfId-1028353]##The request and response MessagePolicy
objects for the module

[#50458678_pgfId-1028354]##The context-specific control attributes to be
used by the context to coordinate the invocation of the module with
respect to the other modules of the context

[#50458678_pgfId-1028367]##To sustain the above requirements, the
AuthConfigProvider from which the authentication context configuration
object was acquired must provide a configuration facility by which the
information required to initialize authentication contexts may be
configured and associated with one or more authentication context
identifiers within the (one or more) layer and application context
scopes for which the provider is registered (at the factory).

======= [#50458678_pgfId-1028368]##Process Messages

======= [#50458678_pgfId-1028369]##What the Context Must Do

[#50458678_pgfId-1028034]##Every context implementation must satisfy the
requirements as defined by the corresponding ClientAuthContext or
ServerAuthContext interface.

[#50458678_pgfId-1028391]##Every context is responsible for constructing
and initializing the one or more authentication modules assigned to the
context by the authentication context configuration object. The
initialization step includes passing the relevant request and response
MessagePolicy objects to the authentication modules. These policy
objects may have been acquired by the authentication context
configuration object and provided as arguments through the internal
interfaces used by the configuration object to acquire the context.

[#50458678_pgfId-1030035]##Every context must delegate calls made to the
methods of its corresponding ClientAuth or ServerAuth interface to the
corresponding methods of its one or more authentication modules. If a
context encapsulates multiple authentication modules, the context must
embody the control logic to determine which modules of the context are
to be invoked and in what order. Contexts which encapsulate alternative
sufficient modules must ensure that the same message values are passed
to each invoked alternative of the context. If a context invokes
multiple authentication modules, the context must combine the AuthStatus
values returned by the invoked authentication modules to establish the
AuthStatus value returned by the context to the messaging runtime. The
context implementation must define the logic for combining the returned
AuthStatus values.

======= [#50458678_pgfId-1030038]##[#50458678_68163]##What the Runtime Must Do

[#50458678_pgfId-1029345]##If a non-null authentication context object
is returned by getAuthContext, the corresponding message processing
runtime must invoke the methods of the acquired authentication context
to process the corresponding request and response messages as defined
below. Otherwise, the message processing runtime must proceed with its
normal processing of the corresponding messages and without invoking the
methods of an authentication context object.

======= [#50458678_pgfId-1024231]##At point (1) in the message processing model:

* [#50458678_pgfId-1024230]##The message processing runtime must call
the secureRequest method of the ClientAuthContext.
* [#50458678_pgfId-1029700]##The messageInfo argument to the call must
have been initialized such that its getRequestMessage method will return
the request message being processed by the runtime. The type of the
returned request message must be as defined by the profile being
followed.
* [#50458678_pgfId-1029701]##If a non-null Subject was used to acquire
the ClientAuthContext, the same Subject must be passed as the
clientSubject in this call. If a non-null clientSubject is used in this
call, it must not be read-only, and the same clientSubject argument must
be passed in all calls to validateResponse made for the one or more
responses processed to complete the message exchange.
* [#50458678_pgfId-1024566]##If the call to secureRequest returns:

[#50458678_pgfId-1024567]##AuthStatus.SEND_SUCCESS – The runtime should
send (without calling secureRequest) the request message acquired by
calling messageInfo.getRequestMessage. After sending the request, the
runtime should proceed to point (4) in the message processing model (to
receive and validate the response).

[#50458678_pgfId-1029022]##AuthStatus.SEND_CONTINUE – The module has
returned, in messageInfo, an initial request message to be sent.
Moreover, the module is informing the client runtime that it will be
required to continue the message dialog by sending the message resulting
from validation of the response to the initial message. If the runtime
will be unable to continue the dialog by sending the message resulting
from validation of the response, the runtime must not send the initial
request and must convey its inability by returning an error to the
client application. Otherwise, the runtime should send (without calling
secureRequest) the request message acquired by calling
messageInfo.getRequestMessage.

[#50458678_pgfId-1028682]##AuthStatus.FAILURE – The runtime should
return an error to the client application. The runtime should derive the
returned error from the response message acquired by calling
messageInfo.getResponseMessage.

[#50458678_pgfId-1029002]##Throws an AuthException – The runtime should
use the exception to convey to the client runtime that the request
failed.

======= [#50458678_pgfId-1029003]##At point (4) in the message processing model:

* [#50458678_pgfId-1028619]##The message processing runtime must call
the validateResponse method of the ClientAuthContext.
* [#50458678_pgfId-1028620]##In the call made to validateResponse, the
runtime must pass the same MessageInfo instance that was passed to
secureRequest (at the start of the message exchange). The messageInfo
argument must have been initialized such that its getResponseMessage
method will return the response message being processed by the
runtime.The type of the required return messages must be as defined by
the profile being followed.
* [#50458678_pgfId-1025417]##The value of the clientSubject argument to
the call must be the same as that passed in the call to secureRequest
for the corresponding request.
* [#50458678_pgfId-1028750]##The serviceSubject argument to the call may
be non-null, in which it must not be read-only and may be used by
modules to store Principals and credentials determined to pertain to the
source of the response.
* [#50458678_pgfId-1025420]##If the call to validateResponse returns:

[#50458678_pgfId-1029041]##AuthStatus.SUCCESS – The runtime should use
the response message acquired by calling messageInfo.getResponseMessage
to create the value to be returned to the client.

[#50458678_pgfId-1025422]##AuthStatus.SEND_CONTINUE – If the runtime is
unable to process this status value, it must return an error to the
client application indicating its inability to process this status
value. To process this status value, the runtime must send (without
calling secureRequest) the (continuation) request message obtained by
calling messageInfo.getRequestMessage, and it must receive and process
by using validateResponse (at least) the next corresponding response or
error (before returning a value to the client).

[#50458678_pgfId-1025442]##AuthStatus.FAILURE – The runtime should
return an error to the client application. The runtime should derive the
returned error from the response message acquired by calling
messageInfo.getResponseMessage.

[#50458678_pgfId-1030254]##Throws an AuthException – The runtime should
use the exception to convey to the client runtime that the request
failed.

[#50458678_pgfId-1030258]## 

image:jaspic-2.gif[image]

======= [#50458678_pgfId-1030333]##State Diagram of Client Message Processing Runtime

======= [#50458678_pgfId-1030259]##At point (2) in the message processing model:

* [#50458678_pgfId-1025484]##The message processing runtime must call
the validateRequest method of the ServerAuthContext.
* [#50458678_pgfId-1024339]##The messageInfo argument to the call must
have been initialized such that its getRequestMessage method will return
the request message being processed by the runtime. For some profiles of
this specification, the runtime must also initialize messageInfo such
that its getResponseMessage method will return the response message
being processed by the runtime. The type of the required return messages
must be as defined by the profile being followed.
* [#50458678_pgfId-1024340]##The clientSubject argument must be non-null
and it must not be read-only. It is expected that the modules of the
authentication context will populate this Subject with principals and
credentials resulting from their processing of the request message.
* [#50458678_pgfId-1029707]##If a non-null Subject was used to acquire
the ServerAuthContext, the same Subject must be passed as the
serviceSubject in this call. If a non-null serviceSubject is used in
this call, it must not be read-only, and the same serviceSubject must be
passed in the call to secureResponse for the corresponding response (if
there is one).
* [#50458678_pgfId-1028665]##If the call to validateRequest returns:

[#50458678_pgfId-1029125]##AuthStatus.SUCCESS – The runtime should
proceed to authorize the request using the clientSubject, perform the
application request processing (depending on the authorization result),
and proceed to point (3) as appropriatelink:#pgfId-1029128[4].

[#50458678_pgfId-1029177]##AuthStatus.SEND_SUCCESS – The runtime should
send (without calling secureResponse) the response message acquired by
calling messageInfo.getResponseMessage, at which time the processing of
the application request and its corresponding response will be complete.
The runtime must NOT proceed to authorize the request or perform the
application request processing.

[#50458678_pgfId-1028832]##AuthStatus.SEND_CONTINUE – The runtime should
send (without calling secureResponse) the response message acquired by
calling messageInfo.getResponseMessage. The runtime must NOT proceed to
authorize the request or perform the application request processing. The
processing of the application request is not finished, and as such, its
outcome is not yet known.

[#50458678_pgfId-1029217]##AuthStatus.SEND_FAILURE – The runtime must
NOT proceed to authorize the request or perform the application request
processing. If the failure occurred afterlink:#pgfId-1029231[5] the
service invocation, the runtime must perform whatever processing it
requires to complete the processing of a request that failed after a
successful service invocation, and prior to communicating the invocation
result to the client runtime. The runtime may send (without calling
secureResponse) the response message acquired by calling
messageInfo.getResponseMessage.

[#50458678_pgfId-1029275]##Throws an AuthException – The runtime must
NOT proceed to authorize the request or perform the application request
processing. If the failure occurred after the service invocation, the
runtime must perform whatever processing it requires to complete the
processing of a request that failed after the service invocation, and
prior to communicating the invocation result to the client runtime. The
runtime may send (without calling secureResponse) a failure message of
its choice. If a failure message is returned, it should indicate whether
the failure in request processing occurred before or after the service
invocation.

======= [#50458678_pgfId-1029276]##At point (3) in the message processing model:

* [#50458678_pgfId-1024369]##The message processing runtime must call
the secureResponse method of the ServerAuthContext. The call to
secureResponse should be made independent of the result of the
application request processing.
* [#50458678_pgfId-1024370]##In the call made to secureResponse, the
runtime must pass the same MessageInfo instance that was passed to
validateRequest (for the corresponding request message). The messageInfo
argument must have been initialized such that its getResponseMessage
method will return the response message being processed by the runtime.
The type of the required return messages must be as defined by the
profile being followed.
* [#50458678_pgfId-1024371]##The value of the serviceSubject argument to
the call must be the same as that passed in the call to validateRequest
for the corresponding request.
* [#50458678_pgfId-1024461]##If the call to secureResponse returns:

[#50458678_pgfId-1024508]##AuthStatus.SEND_SUCCESS – The runtime should
send (without calling secureResponse) the response message acquired by
calling messageInfo.getResponseMessage at which time the processing of
the application request and its corresponding response will be complete.

[#50458678_pgfId-1029295]##AuthStatus.SEND_CONTINUE – The runtime should
send (without calling secureResponse) the response message acquired by
calling messageInfo.getResponseMessage. The processing of the response
is not finished, and as such, its outcome is not yet known.

[#50458678_pgfId-1024522]##AuthStatus.SEND_FAILURE – The runtime must
perform whatever processing it requires to complete the processing of a
request that failed after (or during) service invocation, and prior to
communicating the invocation result to the client runtime. This may
include sending (without calling secureResponse) the response message
acquired by calling messageInfo.getResponseMessage.

[#50458678_pgfId-1030294]##Throws an AuthException – The runtime must
perform whatever processing it requires to complete the processing of a
request that failed after (or during) service invocation, and prior to
communicating the invocation result to the client runtime. The runtime
may send (without calling secureResponse) an appropriate response
message of its choice. If a failure message is returned, it should
indicate that the failure in request processing occurred after the
service invocation.

[#50458678_pgfId-1030298]## 

image:jaspic-3.gif[image]

======= [#50458678_pgfId-1030340]##State Diagram of Server Message Processing Runtime

======= [#50458678_pgfId-1030295]##What the Modules Must Do

[#50458678_pgfId-1029636]##The authentication module implementations
within the context must satisfy the requirements as defined by the
corresponding ClientAuthModule or ServerAuthModule interface.

======= [#50458641_pgfId-1020138]## _CHAPTER_ [#50458641_32725]##

=== [#50458641_pgfId-1021047]##[#50458641_42591]##Servlet Container Profile

[#50458641_pgfId-1022749]##This chapter defines a profile of the use of
the interfaces defined in this specification by Servlet containers to
enforce the declarative authentication constraints of the Servlet
container security model.

[#50458641_pgfId-1023074]##This profile focuses on points 2 (and, to a
lesser degree), 3 in the message processing model. This profile does not
specify the behavior of the corresponding client runtime (that is,
points 1 and 4 in the message processing model).

[#50458641_pgfId-1023075]##The profile-specific requirements defined in
this chapter are to be considered in addition to the generic
requirements defined in Chapter 2. A compatible implementation of this
profile is a servlet container that satisfies all of the requirements
that apply to this profile.

====== [#50458641_pgfId-1022750]##[#50458641_73280]##Message Layer Identifier

[#50458641_pgfId-1022967]##The message layer value used to select the
AuthConfigProvider and ServerAuthConfig objects for this profile must be
"HttpServlet".

====== [#50458641_pgfId-1023004]##[#50458641_60699]##Application Context Identifier

[#50458641_pgfId-1037078]##The application context identifier (that is,
the appContext parameter value) used to select the AuthConfigProvider
and ServerAuthConfig objects for a specific application shall be the
String value constructed by concatenating the host name, a blank
separator character, and the decoded context path corresponding to the
web module.

[#50458641_pgfId-1037074]##AppContextID ::= hostname blank context-path

[#50458641_pgfId-1037126]##For example: "java-server /petstore"

[#50458641_pgfId-1037128]##This profile uses the term host name to refer
to the name of a logical host that processes Servlet requests. Servlet
requests may be directed to a logical host using various physical or
virtual host names or addresses, and a message processing runtime may be
composed of multiple logical hosts. Systems or administrators that
register AuthConfigProvider objects with specific application context
identifiers must have an ability to determine the host name for which
they wish to perform the registration.

[#50458641_pgfId-1037134]##A Servlet container that implements a version
of the Servlet specification that defines the getVirtualServerName
method on the ServletContext interface, must construct its application
context identifiers using a value for hostname that is equivalent to the
value returned by calling getVirtualServerName on the ServletContext
corresponding to the web application.

====== [#50458641_pgfId-1030221]##Message Requirements

[#50458641_pgfId-1022928]##The MessageInfo argument used in any call
made by the message processing runtime to validateRequest or
secureResponse must have been initialized such that the non-null objects
returned by the getRequestMessage and getResponseMessage methods of the
MessageInfo are an instanceof HttpServletRequest and
HttpServletResponse, respectively.

====== [#50458641_pgfId-1023012]##[#50458641_29860]##Module Requirements

[#50458641_pgfId-1023053]##The getSupportedMessageTypes method of all
authentication modules integrated for use with this profile must include
javax.servlet.http.HttpServletRequest.class and
javax.servlet.http.HttpServeletResponse.class in its return value.

====== [#50458641_pgfId-1022732]##[#50458641_81966]##CallbackHandler Requirements

[#50458641_pgfId-1033574]##The CallbackHandler passed to
ServerAuthModule.initialize is determined by the handler argument passed
in the AuthConfigProvider.getServerAuthConfig call that acquired the
corresponding authentication context configuration object. The handler
argument must not be null, and the argument handler and the
CallbackHandler passed to ServerAuthModule.initialize must support the
following callbacks:

* [#50458641_pgfId-1024801]##CallerPrincipalCallback
* [#50458641_pgfId-1024803]##GroupPrincipalCallback
* [#50458641_pgfId-1024832]##PasswordValidationCallback

[#50458641_pgfId-1024924]##The CallbackHandler passed to
ServerAuthModule.initialize should also support the following callbacks,
and it must be possible to configure the runtime such that the
CallbackHandler passed to ServerAuthModule.initialize supports the
following callbacks in addition to those listed above.

* [#50458641_pgfId-1024834]##CertStoreCallback
* [#50458641_pgfId-1023029]##PrivateKeyCallback
* [#50458641_pgfId-1023033]##SecretKeyCallback
* [#50458641_pgfId-1025780]##TrustStoreCallback

[#50458641_pgfId-1025781]##The argument handler and the CallbackHandler
passed through to the authentication modules must be initialized with
any application context required to process its supported callbacks on
behalf of the corresponding application.

====== [#50458641_pgfId-1023241]##[#50458641_26924]##AuthConfigProvider Requirements

[#50458641_pgfId-1023113]##The factory implementation returned by
calling the getFactory method of the abstract AuthConfigFactory class
must have been configured such that it returns a non-null
AuthConfigProvider for those application contexts for which pluggable
authentication modules have been configured at the “HttpServlet” layer.

[#50458641_pgfId-1024336]##For each application context for which it is
servicing requests, the runtime must call getConfigProvider to acquire
the provider object corresponding to the layer and application context.
The layer and appContext arguments to getConfigProvider must be as
defined in link:jaspic.htm#50458641_73280[See Message Layer
Identifier],” and link:jaspic.htm#50458641_60699[See Application Context
Identifier],” respectively. If a non-null AuthConfigProvider is
returned, the messaging runtime must call getServerAuthConfig on the
provider to obtain the authentication context configuration object
pertaining to the application context at the layer. The layer and
appContext arguments of the call to getServerAuthConfig must be the same
as those used to acquire the provider, and the handler argument must be
as defined in link:jaspic.htm#50458641_81966[See CallbackHandler
Requirements].”

[#50458641_pgfId-1024346]##A null return value from getConfigProvider
indicates that pluggable authentication modules have not been configured
at the layer for the application context and that the messaging runtime
must proceed to perform servlet security constraint processing (for the
application context) without further reliance on this profile.

====== [#50458641_pgfId-1023534]##[#50458641_20785]##Authentication Context Requirements

[#50458641_pgfId-1024408]##When a non-null AuthConfigProvider is
returned by the factory, the provider must have been configured with the
information required to initialize the authentication contexts for the
(one or more) authentication context configuration scopes (defined by
layer and application context) for which the provider is registered (at
the factory). The information (typically) required to initialize
authentication contexts is described by example in
Sectionlink:jaspic.htm#50458678_61169[See What the Configuration Must
Do].

[#50458641_pgfId-1033634]##When a non-null AuthConfigProvider is
returned by the factory, the messaging runtime must call getAuthContext
on the authentication context configuration object (obtained from the
provider). The authContextID argument used in the call to getAuthContext
must be the value as described in link:jaspic.htm#50458641_42024[See
Authentication Context Identifiers].”

[#50458641_pgfId-1033641]##For all values of the authContextID argument
that satisfy the requirements of
Sectionlink:jaspic.htm#50458641_42024[See Authentication Context
Identifiers], the call to getAuthContext must return a non-null
authentication context.

======= [#50458641_pgfId-1023847]##[#50458641_42024]##Authentication Context Identifiers

[#50458641_pgfId-1029483]##This profile does NOT impose any profile
specific requirements on authentication context identifiers. As defined
in link:jaspic.htm#50458678_97015[See Acquire AuthContext Identifier],
the authentication context identifier used in the call to getAuthContext
must be equivalent to the value that would be acquired by calling
getAuthContextID with the MessageInfo that will be used in the call to
validateRequest.

======= [#50458641_pgfId-1029588]##getAuthContext Subject

[#50458641_pgfId-1029589]##A null value may be passed as the Subject
argument in the getAuthContext call.

======= [#50458641_pgfId-1029063]##[#50458641_58827]##Module Initialization Properties

[#50458641_pgfId-1033269]##If the runtime is a JSR 115 compatible
Servlet container, the properties argument passed in all calls to
getAuthContext must contain the key-value pair shown in the following
table.

======= [#50458641_pgfId-1033272]##JSR 115 Compatible Module Initialization Properties

[#50458641_pgfId-1033276]##key

[#50458641_pgfId-1033278]##value

[#50458641_pgfId-1033280]##javax.security.jacc.PolicyContext

[#50458641_pgfId-1033282]##The PolicyContext identifier value that the
container must set to satisfy the JSR 115 authorization requirements as
described in “Setting the Policy Context” within the JSR 115
specification

[#50458641_pgfId-1033287]##When the runtime is not a JSR 115 compatible
Servlet container, the properties argument used in all calls to
getAuthContext must not include a javax.security.jacc.PolicyContext
key-value pair, and a null value may be passed for the properties
argument.

======= [#50458641_pgfId-1029161]##[#50458641_73537]##MessagePolicy Requirements

[#50458641_pgfId-1024533]##Each ServerAuthContext obtained through
getAuthContext must initialize its encapsulated ServerAuthModule objects
with a non-null value for requestPolicy. The encapsulated authentication
modules may be initialized with a null value for responsePolicy.

[#50458641_pgfId-1032419]##The requestPolicy used to initialize the
authentication modules of the ServerAuthContext must be constructed such
that the value obtained by calling isMandatory on the requestPolicy
accurately reflects whether (that is, true return value) or not (that
is, false return value) authentication is required to access the web
resource corresponding to the HttpServletRequest to which the
ServerAuthContext will be applied. The message processing runtime is
responsible for determining if authentication is required and must
convey the results of its determination as described in
link:jaspic.htm#50458641_43992[See MessageInfo Requirements].

[#50458641_pgfId-1029530]##Calling getTargetPolicies on the request
MessagePolicy must return an array containing at least one TargetPolicy
whose ProtectionPolicy will be interpreted by the modules of the context
to mean that the source of the corresponding targets within the message
is to be authenticated. To that end, calling the getID method on the
ProtectionPolicy must return one of the following values:

* [#50458641_pgfId-1024433]##ProtectionPolicy.AUTHENTICATE_SENDER
* [#50458641_pgfId-1024440]##ProtectionPolicy.AUTHENTICATE_CONTENT

====== [#50458641_pgfId-1023638]##[#50458641_61189]##Message Processing Requirements

[#50458641_pgfId-1023942]##For this profile, point (2) of the messaging
processing model occurs after the runtime determines that the connection
on which the request was received satisfies the connection
requirementslink:#pgfId-1032695[6] that apply to the request and before
the runtime enforces the authorizationlink:#pgfId-1032976[7]
requirements that apply to the request. At point (2) in the message
processing model, the runtime must call validateRequest on the
ServerAuthContext. The runtime must not call validateRequest if the
request does not satisfy the connection requirements that apply to the
request. If the request has satisfied the connection requirements, the
message processing runtime must call validateRequest independent of
whether or not access to the resource would be authorized prior to the
call to validateRequestlink:#pgfId-1032704[8]. The validateRequest
method must be called for all requests (to which the Servlet security
model applieslink:#pgfId-1037165[9]), including submits of a form-based
login form.

[#50458641_pgfId-1029792]##If the call to validateRequest returns any
value other than AuthStatus.SUCCESS, the runtime should return a
response and must discontinue its processing of the request.

[#50458641_pgfId-1034206]##If the call to validateRequest returns
AuthStatus.SUCCESS, the runtime must establish return values for
getUserPrincipal, getRemoteUser, and getAuthType as defined in
link:jaspic.htm#50458641_17093[See Setting the Authentication Results on
the HttpServletRequest]”. After setting the authentication results, the
runtime must determine whether the authentication identity established
in the clientSubject is authorized to access the resource. The identity
tested for authorization must be selected based on the nature, with
respect to JSR 115 compatibility, of the calling runtime. In a JSR 115
compatible runtime, the identity must be comprised of exactly the
Principal objects of the clientSubject. In a non-JSR 115 compatible
Servlet runtime, the identity must include the caller Principal
(established during the validateRequest processing using the
corresponding CallerPrincipalCallback) and may include any of the
Principal objects of the clientSubject. Independent of the nature of the
calling runtime, if the request is NOT authorized, the runtime must set,
within the response, an HTTP status code as required by the Servlet
specification. The request must be dispatched to the resource if the
request was determined to be authorized; otherwise it must NOT be
dispatched and the runtime must proceed to point (3) in the message
processing model.

[#50458641_pgfId-1033696]##If the request is dispatched to the resource
and the resource invocation throws an exception to the runtime, the
runtime must set, within the response, an HTTP status code which
satisfies any applicable requirements defined within the servlet
specification. In this case, the runtime should complete the processing
of the request without calling secureResponse.

[#50458641_pgfId-1032770]## If invocation of the resource completes
without throwing an exception, the runtime must proceed to point (3) in
the message processing model. At point (3) in the message processing
model, the runtime must call secureResponse on the same
ServerAuthContext used in the corresponding call to validateRequest and
with the same MessageInfo object.

[#50458641_pgfId-1030159]##If the request is dispatched to the resource,
and the resource was configured to run-as its caller, then for
invocations originating from the resource where caller propagation is
required, the identity established using the CallerPrincipalCallback
must be used as the propagated identity.

======= [#50458641_pgfId-1023977]##[#50458641_43992]##MessageInfo Requirements

[#50458641_pgfId-1023983]##The messageInfo argument used in the call to
validateRequest must have been initialized by the runtime such that its
getRequestMessage and getResponseMessage methods will return the
HttpServletRequest and HttpServletResponse objects corresponding to the
messages (respectively) being processed by the runtime. This must be the
case even when the target of the request is a static page (that is, not
a Servlet).

======= [#50458641_pgfId-1024012]##MessageInfo Properties

[#50458641_pgfId-1036516]##This profile requires that the message
processing runtime conditionally establish the following key-value pair
within the Map of the MessageInfo object passed in the calls to
getAuthContextID, validateRequest, and secureResponse.

======= [#50458641_pgfId-1036519]##MessageInfo Map Properties

[#50458641_pgfId-1036523]##key

[#50458641_pgfId-1036525]##value

[#50458641_pgfId-1036527]##javax.security.auth.message.MessagePolicy.isMandatory

[#50458641_pgfId-1036529]##Any non-null String value, s, for which
Boolean.valueOf(s).booleanValue() == true

======= [#50458641_pgfId-1036530]##javax.security.auth.message.MessagePolicy.isMandatory

[#50458641_pgfId-1030368]##The MessageInfo map must contain this key and
its associated value, if and only if authentication is required to
perform the resource access corresponding to the HttpServletRequest to
which the ServerAuthContext will be applied. Authentication is required
if use of the HTTP method of the HttpServletRequest at the resource
identified by the HttpServletRequest is covered by a Servlet
auth-constraintlink:#pgfId-1030555[10], or in a JSR 115 compatible
runtime, if the corresponding WebResourcePermission is NOT
grantedlink:#pgfId-1036965[11] to an unauthenticated caller. In a JSR
115 compatible runtime, the corresponding WebResourcePermission may be
constructed directly from the HttpServletRequest as follows:

[#50458641_pgfId-1030389]##public
WebResourcePermission(HttpServletRequest request);

[#50458641_pgfId-1036759]##The authentication context configuration
system must use the value of this property to establish the
corresponding value within the requestPolicy passed to the
authentication modules of the ServerAuthContext acquired to process the
MessageInfo.

======= [#50458641_pgfId-1036767]##Subject Requirements

[#50458641_pgfId-1036761]##A new clientSubject must be instantiated and
passed in the call to validateRequest.

======= [#50458641_pgfId-1025848]##[#50458641_58550]##ServerAuth Processing

[#50458641_pgfId-1025173]##As described in
link:jaspic.htm#50458641_61189[See Message Processing Requirements], the
profile requires that validateRequest be called on every request that
satisfies the corresponding connection requirements (and to which the
Servlet container security model applies). As such, validateRequest will
be called either before the service invocation (to establish the caller
identity) or after the service invocation (when a multi-message dialog
is required to secure the response). The module implementation is
responsible for recording any state and performing any processing
required to differentiate these two different types of calls to
validateRequest.

======= [#50458641_pgfId-1025023]##[#50458641_63712]##validateRequest Before Service Invocation

[#50458641_pgfId-1025026]##When validateRequest is called before the
service invocation on a module initialized with a mandatory
requestPolicy (as defined by the return value from
requestPolicy.isMandatory()), the module must only return
AuthStatus.SUCCESS if it was able to completely satisfy the request
authentication policy. In this case, the module (or its context) must
also have used the CallbackHandler passed to it by the runtime to handle
a CallerPrincipalCallback using the clientSubject as argument to the
callback. If more than one module of a context uses the CallbackHandler
to handle this callback, the context is responsible for coordinating the
calls such that the appropriate caller principal value is established.

[#50458641_pgfId-1025246]##If the module was not able to completely
satisfy the request authentication policy, it must:

* [#50458641_pgfId-1037302]##return AuthStatus.SEND_CONTINUE – If it has
established a response (available to the runtime by calling
messageInfo.getResponseMessage) that must be sent by the runtime for the
request validation to be effectively continued by the client. The module
must have set the HTTP status code of the response to a value (for
example, HTTP 401 unauthorized, HTTP 303 see other, or HTTP 307
temporary redirect) that will indicate to the client that it should
retry (or continue) the request. This, however, is solely the
responsibility of the module, and the runtime must be liberal in its
acceptance of continue responses, including responses with HTTP success
status codes; such as might be returned with forms (including login
forms and forms that depend on javascript to be relayed through the
browser).
* [#50458641_pgfId-1025753]##return AuthStatus.SEND_FAILURE – If the
request validation failed, and when the client should not retry or
continue with its processing of the request. The module must have
established a response message (available to the runtime by calling
messageInfo.getResponseMessage) that may be sent by the runtime to
inform the client that the request failed. The module must have set the
HTTP status code of the response to a value (for example, HTTP 403
forbidden or HTTP 404 not found) that will indicate to the client that
it should NOT continue the request. The runtime may choose not to send a
response message, or to send a different response message (given that it
also contains an analogous HTTP status code).
* [#50458641_pgfId-1032584]##throw an AuthException – If the request
validation failed, and when the client should not retry the request, and
when the module has not defined a response to be sent by the runtime. If
the runtime chooses to send a response, it must define the HTTP status
code and descriptive content (of the response). The HTTP status code of
the response must indicate to the client (for example, HTTP 403
forbidden, HTTP 404 not found, or HTTP 500 internal server error) that
the request failed and that it should NOT be retried. The descriptive
content set in the response may be obtained from the AuthException.

[#50458641_pgfId-1029032]##When validateRequest is called before the
service invocation on a module that was initialized with an optional
requestPolicy (that is, requestPolicy.isMandatory() returns false), the
module should attempt to satisfy the request authentication policy, but
it must do so without initiatinglink:#pgfId-1033706[12] additional
message exchanges or interactions involving the client. Independent of
whether the authentication policy is satisfied, the module may return
AuthStatus.SUCCESS. If the module returns AuthStatus.SUCCESS (and the
authentication policy was satisfied), the module (or its context) must
employ a CallerPrincipalCallback as described above. If the
authentication policy was not satisfied, and yet the module chooses to
return AuthStatus.SUCCESS, the module (or its context) must use a
CallerPrincipalCallback to establish the container’s representation of
the unauthenticated caller within the clientSubject. If the module
determines that an invalid or incomplete security context was used to
secure the request, then the module may return AuthStatus.SEND_FAILURE,
AuthStatus.SEND_CONTINUE, or throw an AuthException. If the module
throws an AuthException, or returns any value other that
AuthStatus.SUCCESS, the runtime must NOT proceed to the service
invocation. The runtime must process an AuthException as described above
for a request with a mandatory requestPolicy. The runtime must process
any return value other than AuthStatus.SUCCESS as it would be processed
if it were returned for a request with a mandatory requestPolicy.

======= [#50458641_pgfId-1025063]##[#50458641_30319]##validateRequest After Service Invocationlink:#pgfId-1036922[13]

[#50458641_pgfId-1033947]##When validateRequest is called after the
service invocation has completed, the module must return
AuthStatus.SEND_SUCCESS when the module has successfully secured the
application response message and made it available through
messageInfo.getResponseMessage. For the request to be successfully
completed, the runtime must send the response message returned by the
module.

[#50458641_pgfId-1025516]##When securing of the application response
message has failed, and the response dialog is to be terminated, the
module must return AuthStatus.SEND_FAILURE or throw an AuthException.

[#50458641_pgfId-1025526]##If the module returns
AuthStatus.SEND_FAILURE, it must have established a response message in
messageInfo, and it must have set the HTTP status code within the
response to HTTP 500 (internal server error). The runtime may choose not
to send a response message, or to send a different response message
(given that it also contains an HTTP 500 status code).

[#50458641_pgfId-1025601]##When the module throws an AuthException, the
runtime may choose not to send a response. If the runtime sends a
response, the runtime must set the HTTP status code to HTTP 500
(internal server error), and the runtime must define the descriptive
content of the response (perhaps by obtaining it from the
AuthException).

[#50458641_pgfId-1033651]##The module must return
AuthStatus.SEND_CONTINUE if the response dialog is to continue. This
status value is used to inform the calling runtime that, to successfully
complete the response processing, it must be capable of continuing the
message dialog by processing at least one additional request/response
exchange (after having sent the response message returned in
messageInfo). The module must have established (in messageInfo) a
response message that will cause the client to continue the response
processing (that is, retry the request). For the response processing to
be successfully completed, the runtime must send the response message
returned by the module.

======= [#50458641_pgfId-1025315]##[#50458641_55699]##secureResponse Processing

[#50458641_pgfId-1025562]##The return value and AuthException semantics
of secureResponse are as defined in link:jaspic.htm#50458641_30319[See
validateRequest After Service Invocation].” This profile places no
requirements on authentication modules with respect to interpreting
responsePolicy values.

======= [#50458641_pgfId-1036973]##[#50458641_76852]##Forwards and Includes by Server Authentication Modules

[#50458641_pgfId-1037019]##The message processing runtime must support
the acquisition and use of RequestDispatcher objects by authentication
modules within their processing of validateRequest. Under the
constraints defined by RequestDispatcher, authentication modules must be
able to forward and include using the request and response objects
passed in MessageInfo. In particular, an authentication module must be
able to acquire a RequestDispatcher from the request obtained from
MessageInfo, and uses it to forward the request (and response) to a
login form. Authentication modules should catch and rethrow as an
AuthException any exception thrown by these methods.

======= [#50458641_pgfId-1037021]##[#50458641_10260]##Wrapping and UnWrapping of Requests and Responses

[#50458641_pgfId-1033118]##A ServerAuthModule must only call
MessageInfo.setResponseMessage() to wrap or unwrap the existing response
within MessageInfo. That is, if a ServerAuthModule calls
MessageInfo.setResponseMessage(), the response argument must be an
HtppServletResponseWrapper that wraps the HttpServletResponse within
MessageInfo, or the response argument must be an HttpServletResponse
that is wrapped by the HttpServletResponseWrapper within MessageInfo.
The analogous requirements apply to MessageInfo.setRequestMessage().

[#50458641_pgfId-1033085]##During secureResponse processing, a
ServerAuthModule must unwrap the messages in MessageInfo that it wrapped
during its validateRequest processing. The unwrapped values must be
established in MessageInfo when secureResponse returns. The module
should not remove wrappers for which it is not responsible.

[#50458641_pgfId-1033141]##During validateRequest processing, a
ServerAuthModule must NOT unwrap a message in MessageInfo, and must NOT
establish a wrapped message in MessageInfo unless the ServerAuthModule
returns AuthStatus.SUCCESS. For example, if during validateRequest
processing a ServerAuthModule calls MessageInfo.setResponseMessage(),
the response argument must be an HttpServletResponseWrapper that wraps
the HttpServletResponse within MessageInfo.

[#50458641_pgfId-1033189]##When a ServerAuthModule returns a wrapped
message in MessageInfo, or unwraps a message in MessageInfo, the message
processing runtime must ensure that the HttpServletRequest and
HttpServletResponse objects established by the ServerAuthModule are used
in downstream processing.

======= [#50458641_pgfId-1036801]##[#50458641_17093]##Setting the Authentication Results on the HttpServletRequest

[#50458641_pgfId-1036802]##The requirements defined in this section must
be fulfilled by a message processing runtime, when (at point (2) in the
messaging model, validateRequest returns AuthStatus.SUCCESS. The
requirements must also be fulfilled by HttpServletRequest.authenticate
when its call to validateRequest returns AuthStatus.SUCCESS. In both
cases, the HttpServletRequest must be modified as necessary to ensure
that the Principal returned by getUserPrincipal and the String returned
by getRemoteUser correspond, respectively, to the Principal established
by validateRequest (via the CallerPrincipalCallback) and to the String
obtained by calling getName on the established
Principallink:#pgfId-1036805[14]. Both cases, must also ensure that the
value returned by calling getAuthType on the HttpServletRequest is
consistent in terms of being null or non-null with the value returned by
getUserPrincipal.

[#50458641_pgfId-1036832]##When getAuthType is to return a non-null
value, the Map of the MessageInfo object used in the call to
validateRequest must be consulted to determine if it contains an entry
for the key identified in link:jaspic.htm#50458641_94156[See
Authentication Type (Callback) Property]. If the Map contains an entry
for the key, the corresponding value must be obtained from the Map and
established as the getAuthType return value. If the Map does not contain
an entry for the key, and an auth-method is defined in the login-config
element of the deployment descriptor for the web application, the value
from the auth-method must be established as the getAuthType return
value. If the Map does not contain an entry for the key, and the
deployment descriptor does not define an auth-method, a product defined
default non-null value must be established the getAuthType return value,
and the same default value need not be used for both cases.

======= [#50458641_pgfId-1036835]##[#50458641_94156]##Authentication Type (Callback) Property

[#50458641_pgfId-1036839]##key

[#50458641_pgfId-1036841]##value

[#50458641_pgfId-1036843]##javax.servlet.http.authType

[#50458641_pgfId-1036845]##A non-null String value that identifies the
authentication mechanism

[#50458641_pgfId-1036567]##If a non-null Principal was established by
validateRequest (via the CallerPrincipalCallback), the Map of the
MessageInfo object used in the call to validateRequest must be consulted
to determine if it contains an entry for the key identified in
link:jaspic.htm#50458641_86485[See Authentication Session Registration
(Callback) Property]. If the Map contains an entry for the key, the
authentication session machinery of the container must be used to create
(or update) a container authentication session to represent the caller
Principal, authType, and the additional container authentication state
established by the call to validateRequest. The resulting container
authentication session must be bound to the HttpServletResponse such
that the container will be able to restore the caller authentication
results on subsequent calls to the application.

== [#50458641_pgfId-1036571]##[#50458641_86485]##Authentication Session Registration (Callback) Property

[#50458641_pgfId-1036575]##key

[#50458641_pgfId-1036577]##value

[#50458641_pgfId-1036579]##javax.servlet.http.registerSession

[#50458641_pgfId-1036581]##Any non-null String value, s, for which
Boolean.valueOf(s).booleanValue() == true

[#50458641_pgfId-1036786]##The authentication type and session
registration properties are callback propertieslink:#pgfId-1036798[15];
and are intended to provide a way for an authentication module to
request a corresponding service from its encompassing runtime. As such,
all authentication modules must ensure that they do not inadvertently
relay these properties should they be included in their input
MessageInfo arguments.

====== [#50458641_pgfId-1036583]##[#50458641_84376]##Sub-profile for authenticate, login, and logout of HttpServletRequest

[#50458641_pgfId-1036381]##Servlet 3.0 added the authenticate, login,
and logout methods to the HttpServletRequest interface. A compatible
implementation of the Servlet Container Profile must satisfy the
requirements defined in this sub-profile. This sub-profile differs from
the larger profile in which it is contained, in that it describes the
handling of calls that would typically be expected to occur within the
service invocation; while the focus of the larger profile, is on points
(2) and (3) in the messaging model (which occur on either side of the
service invocation).

======= [#50458641_pgfId-1036382]##Authentication Configuration Requirements

[#50458641_pgfId-1035130]##When an application calls
HttpServletRequest.authenticate, HttpServletRequest.login, or
HttpServletRequest.logout, the container implementation of the called
method must determine (as defined in link:jaspic.htm#50458641_26924[See
AuthConfigProvider Requirements]” if there is an AuthConfigProvider
configured for the application context and layer. If not, the called
method must proceed to perform the required authenticate, login, or
logout functionality without further reliance on this sub-profile.

[#50458641_pgfId-1035561]##If an AuthConfigProvider is determined to be
configured, the called method must proceed to obtain the corresponding
ServerAuthConfig also as defined in link:jaspic.htm#50458641_26924[See
AuthConfigProvider Requirements]”.

[#50458641_pgfId-1035540]##As described in
link:jaspic.htm#50458678_27490[See Acquire AuthConfigProvider], the
called method may reuse the results of a previous AuthConfigProvider
determination and ServerAuthConfig acquisition (such as that performed
by the message processing runtime) during its processing of the servlet
request within which the authenticate, login, or logout method is being
called.

======= [#50458641_pgfId-1035428]##Processing for HttpServletRequest.login

[#50458641_pgfId-1035596]##The container implementation of login must
throw a ServletException which may convey that the exception was caused
by an incompatibility between the login method and the configured
authentication mechanism.

======= [#50458641_pgfId-1035597]##[#50458641_86597]##Processing for HttpServletRequest.authenticate

[#50458641_pgfId-1035602]##If authenticate is called in the context of a
call it made to validateRequest, it must not recall validateRequest, but
must perform the container authentication processing that it performs
when it determines that an AuthConfigProvider is not configured for the
application context and layer.

[#50458641_pgfId-1036326]##Otherwise, authenticate must acquire the
corresponding ServerAuthContext object as defined in
link:jaspic.htm#50458641_20785[See Authentication Context Requirements]”
(and its subsections), while satisfying the additional requirement that
the authentication context identifier used to obtain the
ServerAuthContext must be the identifier that would be acquired by
calling getAuthContextID with MessageInfo as defined in
link:jaspic.htm#50458641_43992[See MessageInfo Requirements]” and while
satisfying the additional requirement that the MessageInfo map must
unconditionally contain the
javax.security.auth.message.MessagePolicy.isMandatory key (with
associated true value).

[#50458641_pgfId-1035626]##Authenticate must call validateRequest on the
acquired ServerAuthContext. The MessageInfo argument to the call to
validateRequest must be as defined above. The clientSubject argument
must be a non-null Subject and should be the Subject resulting from the
call to validateRequest prior to the service invocation as described in
link:jaspic.htm#50458641_63712[See validateRequest Before Service
Invocation]”. If the prior Subject is not used, A new (empty)
clientSubject must be instantiated and passed in the call to
validateRequest. A null value may be used for the serviceSubject.

[#50458641_pgfId-1035647]##If the call to validateRequest returns
AuthStatus.SUCCESS, the authenticate method must perform the processing
defined in link:jaspic.htm#50458641_17093[See Setting the Authentication
Results on the HttpServletRequest]”. This processing includes
establishing return values for getUserPrincipal, getRemoteUser, and
getAuthType and may include the registration of the authentication
results in a container authentication sessionlink:#pgfId-1036104[16].
Following this processing, the authenticate method must return the
boolean value true, and if the calling context is configured to run-as
its caller, the results of the authentication must be reflected in the
run-as identity.

[#50458641_pgfId-1035661]##If the call to validateRequest throws an
AuthException, the authenticate method must catch the AuthException and
throw a ServletException.

[#50458641_pgfId-1035805]##If the call to validateRequest returns any
value other than AuthStatus.SUCCESS, the authenticate method must return
false.

======= [#50458641_pgfId-1035507]##Processing for HttpServletRequest.logout

[#50458641_pgfId-1035493]##If logout is called in the context of a call
it made to cleanSubject, it must not recall cleanSubject, but it must
perform the logout processing that it performs when it determines that
an AuthConfigProvider is not configured for the application context and
layer.

[#50458641_pgfId-1036349]##Otherwise, logout must acquire the
corresponding ServerAuthContext object as defined in
link:jaspic.htm#50458641_20785[See Authentication Context Requirements]”
(and its subsections), while satisfying the additional requirement that
the authentication context identifier used to obtain the
ServerAuthContext must be the identifier that would be acquired by
calling getAuthContextID with MessageInfo as defined in
link:jaspic.htm#50458641_43992[See MessageInfo Requirements]” and while
satisfying the additional requirement that the MessageInfo map must
unconditionally contain the
javax.security.auth.message.MessagePolicy.isMandatory key (with
associated true value). Logout should attempt to satisfy the requirement
of link:jaspic.htm#50458641_43992[See MessageInfo Requirements], that
MessageInfo be initialized such that its getResponseMessage will return
the HttpServletResponse, but need not do so if the response is
unavailable or committed.

[#50458641_pgfId-1035965]##The container implementation of logout must
call cleanSubject on the acquired ServerAuthContext. The MessageInfo
argument to the call to cleanSubject must be as defined above. The
clientSubject argument must be a non-null Subject and should be the
Subject resulting from the most recent call to validateRequest which may
have occurred either as described in link:jaspic.htm#50458641_63712[See
validateRequest Before Service Invocation]” or as described in
link:jaspic.htm#50458641_86597[See Processing for
HttpServletRequest.authenticate]”. If the prior Subject is not used, A
new clientSubject must be instantiated and passed in the call.

[#50458641_pgfId-1036342]##Following the return from cleanSubject,
logout must perform the logout processing that it performs when it
determines that an AuthConfigProvider is not configured for the
application context and layer, and if the calling context is configured
to run-as its caller, the results of the logout must be reflected in the
run-as identity.

======= [#50458641_pgfId-1035858]##Calls from within ServerAuthContext

[#50458641_pgfId-1036214]##If HttpServletRequest.authenticate or
HttpServletRequest.logout is called from within the methods of the
ServerAuthContext interface (for example, from within validateRequest,
secureResponse, or cleanSubject), it is the responsibility of the
implementation of the ServerAuthContext to interpret the results of the
call and to establish appropriate ServerAuthContext return values. This
profile is silent on the details of the interpretation and mapping of
return values.

======= [#50458643_pgfId-1020138]## _CHAPTER_ [#50458643_32725]##

=== [#50458643_pgfId-1021047]##[#50458643_26680]##SOAP Profile

[#50458643_pgfId-1025785]##This chapter defines a profile of the use of
the interfaces defined in this specification to secure SOAP message
exchanges between web services client runtimes and web service endpoint
runtimes. This profile is equally applicable to SOAP versions 1.1 and
1.2.

[#50458643_pgfId-1026406]##This profile is composed of two internal
profiles that partition the requirements of the profile into those that
must be satisfied by client runtimes and those that must be satisfied by
server runtimes. The profile-specific requirements defined in this
chapter are to be considered in addition to the generic requirements
defined in Chapter 2. A compatible implementation of an internal profile
of this specification is an implementation that satisfies all of the
requirements that apply to that profile.

====== [#50458643_pgfId-1026408]##[#50458643_73280]##Message Layer Identifier

[#50458643_pgfId-1026409]##The message layer value used to select the
AuthConfigProvider and ServerAuthConfig objects for this profile must be
“SOAP”.

====== [#50458643_pgfId-1023004]##[#50458643_60699]##Application Context Identifier

[#50458643_pgfId-1029156]##The application context identifier (that is,
the appContext parameter value) used by a client runtime to select the
AuthConfigProvider and ClientAuthConfig objects pertaining to a
client-side application context configuration scope must be as defined
in link:jaspic.htm#50458643_22299[See Client-Side Application Context
Identifier].

[#50458643_pgfId-1029523]##Similarly, the application context identifier
used by a server runtime to select the AuthConfigProvider and
ClientAuthConfig objects pertaining to an server-side application
context configuration scope must be as defined in
link:jaspic.htm#50458643_18909[See Server-Side Application Context
Identifier].

====== [#50458643_pgfId-1029470]##[#50458643_82273]##Message Requirements

[#50458643_pgfId-1025805]##The MessageInfo argument used in any call
made by the message processing runtime to secureRequest,
validateResponse, validateRequest, or secureResponse must have been
initialized such that any non-null objects returned by the
getRequestMessage and getResponseMessage methods of the MessageInfo are
an instanceof javax.xml.soap.SOAPMessage.

====== [#50458643_pgfId-1025806]##Module Requirements

[#50458643_pgfId-1023053]##The getSupportedMessageTypes method of all
authentication modules integrated for use with this profile must include
javax.xml.soap.SOAPMessage.class in its return value.

====== [#50458643_pgfId-1022732]##[#50458643_81966]##CallbackHandler Requirements

[#50458643_pgfId-1024862]##The CallbackHandler passed to an
authentication module’s initialize method is determined by the handler
argument passed in the call to AuthConfigProvider.getClientAuthConfig or
getServerAuthConfig that acquired the corresponding authentication
context configuration object.

[#50458643_pgfId-1029021]##The handler argument must not be null, and
the argument handler and the CallbackHandler passed to the initialize
method of all authentication modules should support the following
callbacks, and it must be possible to configure the runtime such that
the CallbackHandler passed at module initialization supports the
following callbacks (in addition to any others required to be supported
by the applicable internal profile):

* [#50458643_pgfId-1025825]##CertStoreCallback
* [#50458643_pgfId-1025826]##PrivateKeyCallback
* [#50458643_pgfId-1025827]##SecretKeyCallback
* [#50458643_pgfId-1025828]##TrustStoreCallback

[#50458643_pgfId-1026418]##The argument handler and the CallbackHandler
passed through to the modules must be initialized with any application
context required to process the supported callbacks on behalf of the
corresponding application.

====== [#50458643_pgfId-1023241]##AuthConfigProvider Requirements

[#50458643_pgfId-1029455]##The factory implementation returned by
calling the getFactory method of the abstract AuthConfigFactory class
must be configured such that it returns a non-null AuthConfigProvider
for those application contexts for which pluggable authentication
modules have been configured at the “SOAP” layer.

[#50458643_pgfId-1029729]##For each application context for which it is
servicing requests, the runtime must call getConfigProvider to acquire
the provider object corresponding to the layer and application context.
The layer and appContext arguments to getConfigProvider must be as
defined in link:jaspic.htm#50458643_73280[See Message Layer Identifier]”
and link:jaspic.htm#50458643_60699[See Application Context Identifier]”
respectively.

[#50458643_pgfId-1029736]##A null return value from getConfigProvider
indicates that pluggable authentication modules have not been configured
at the layer for the application context, and that the messaging runtime
must proceed to perform its SOAP message processing (for the application
context) without further reliance on this profile.

====== [#50458643_pgfId-1023534]##[#50458643_80724]##Authentication Context Requirements

[#50458643_pgfId-1024408]##When a non-null AuthConfigProvider is
returned by the factory, the provider must have been configured with the
information required to initialize the authentication contexts for the
one or more authentication context configuration scopes, defined by
layer and application context, for which the provider is registered (at
the factory). The information typically required to initialize
authentication contexts is described by example in
Sectionlink:jaspic.htm#50458678_61169[See What the Configuration Must
Do].

[#50458643_pgfId-1029740]##When a non-null AuthConfigProvider is
returned by the factory, the messaging runtime must call getAuthContext
on the authentication context configuration object (obtained from the
provider). The authContextID argument used in the call to getAuthContext
must be the value as described in link:jaspic.htm#50458643_42024[See
Authentication Context Identifiers].”

[#50458643_pgfId-1029806]##A null return value from getAuthContext
indicates that pluggable authentication modules have not been configured
for the web service invocation within the authentication context
configuration scope, and that the runtime must proceed to perform its
SOAP message processing for this request/response without further
reliance on this profile.

[#50458643_pgfId-1029825]##Effective integration of a session-oriented
authentication mechanism for use in an authentication context
configuration scope should be expected to require configuration of the
corresponding AuthConfigProvider such that getAuthContext will return
non-null authentication context objects for all legitimate authContextID
values acquired for the corresponding scope.

======= [#50458643_pgfId-1028803]##[#50458643_42024]##Authentication Context Identifiers

[#50458643_pgfId-1028837]##This profile does NOT impose any profile
specific requirements on authentication context identifiers. As defined
in link:jaspic.htm#50458678_97015[See Acquire AuthContext Identifier],
the authentication context identifier used in the call to getAuthContext
must be equivalent to the value that would be acquired by calling
getAuthContextID with the MessageInfo that will be used in the
corresponding call to secureRequest (by a client runtime) or
validateRequest (by a server runtime).

======= [#50458643_pgfId-1028841]##MessagePolicy Requirements

[#50458643_pgfId-1029764]##Each authentication context object obtained
through getAuthContext must initialize its encapsulated authentication
modules with a non-null requestPolicy and/or a non-null responsePolicy,
such that at least one of requestPolicy or responsePolicy is not null.

====== [#50458643_pgfId-1029770]##Requirements for Client Runtimes

[#50458643_pgfId-1026443]##This section defines the requirements of this
profile that must be satisfied by a runtime operating in the client
role. A runtime may operate in both the client and server roles.

======= [#50458643_pgfId-1029283]##Client-Side [#50458643_22299]##Application Context Identifier

[#50458643_pgfId-1031826]##The application context identifier used by a
client-runtime to acquire the AuthConfigProvider and ClientAuthConfig
objects pertaining to the client side processing of a web service
invocation shall begin with a client scope identifier that identifies
the client. If the client-runtime may host multiple client applications,
then the client scope identifier must differentiate among the client
applications deployed within the runtime. In runtimes where applications
are differentiated by unambiguous application identifiers, an
application identifier may be used as the client scope identifier. Where
application identifiers are not defined or suitable, the location (for
example, its file path) of the client archive from which the invocation
will originate may be used as the client scope identifier.

[#50458643_pgfId-1031849]##In addition to its client scope identifier,
the application context identifier must include a client reference to
the service. If a service reference is defined for the invocation (for
example, by using a WebServiceRef annotation as defined in the JAXWS 2.0
or JAXWS 2.1 Specifications), the client reference to the service must
be the name value of the service reference. If a service reference was
not defined for the invocation, the client reference to the service must
be the web service URL.

[#50458643_pgfId-1031855]##A client application context identifier must
be the String value composed by concatenating the client scope
identifier, a blank separator character, and the client reference to the
service.

[#50458643_pgfId-1031856]##AppContextID ::= client-scope-identfier blank
client-reference

[#50458643_pgfId-1031854]##The following are examples of client
application context identifiers.

======= [#50458643_pgfId-1031774]##"petstoreAppID service/petstore/delivery-service"

[#50458643_pgfId-1031794]##"petstoreAppID
http://localhost:8080/petstore/delivery-service/fish"

[#50458643_pgfId-1031795]##"/home/fishkeeper/petstore-client.jar
service/petstore/delivery-service"

[#50458643_pgfId-1031796]##"/home/fishkeeper/petstore-client.jar
http://localhost:8080/petstore/delivery-service/fish"

[#50458643_pgfId-1031915]## 

[#50458643_pgfId-1031907]##Systems or administrators that register
AuthConfigProvider objects with specific client-side application context
identifiers must have an ability to determine the client scope
identifier and the client reference for which they wish to perform the
registration.

======= [#50458643_pgfId-1026444]##[#50458643_41741]##CallbackHandler Requirements

[#50458643_pgfId-1026445]##Unless the client runtime is embedded in a
server runtime (for example, an invocation of a web service by a servlet
running in a Servlet container), the CallbackHandler passed to
ClientAuthModule.initialize must support the following callbacks:

* [#50458643_pgfId-1026137]##NameCallback
* [#50458643_pgfId-1026138]##PasswordCallback

[#50458643_pgfId-1026425]##In either event, the CallbackHandler must
also support the requirements in link:jaspic.htm#50458643_81966[See
CallbackHandler Requirements].”

======= [#50458643_pgfId-1026486]##AuthConfigProvider Requirements

[#50458643_pgfId-1028286]##If a non-null AuthConfigProvider is returned
(by the call to getConfigProvider), the messaging runtime must call
getClientAuthConfig on the provider to obtain the authentication context
configuration object pertaining to the application context at the layer.
The layer and appContext arguments of the call to getClientAuthConfig
must be the same as those used to acquire the provider, and the handler
argument must be as defined in link:jaspic.htm#50458643_41741[See
CallbackHandler Requirements],” for a client runtime.

======= [#50458643_pgfId-1029896]##[#50458643_93890]##Authentication Context Requirements

[#50458643_pgfId-1029897]##The getAuthContext calls made on the
ClientAuthConfig (obtained by calling getClientAuthConfig) must satisfy
the requirements defined in the following subsections.

======= [#50458643_pgfId-1029867]##getAuthContext Subject

[#50458643_pgfId-1027628]##A non-null Subject corresponding to the
client must be passed as the clientSubject in the getAuthContext call.

======= [#50458643_pgfId-1027619]##Module Initialization Properties

[#50458643_pgfId-1027642]##A null value may be passed for the properties
argument in all calls made to getAuthContext.

======= [#50458643_pgfId-1027356]##MessagePolicy Requirements

[#50458643_pgfId-1027296]##Each ClientAuthContext obtained through
getAuthContext must initialize its encapsulated ClientAuthModule objects
with requestPolicy and responsePolicy objects (or null values) that are
compatible with the requirements and capabilities of the service
invocation (at the service). The requirements, preferences, and
capabilities of the client may be factored in the context acquisition
and may effect the requestPolicy and responsePolicy objects passed to
the authentication modules of the context.

======= [#50458643_pgfId-1026836]##[#50458643_61034]##Message Processing Requirements

[#50458643_pgfId-1028280]##A client runtime, after having prepared
(except for security) the SOAP request message to be sent to the
service, is operating at point (1) in the message processing model
defined by this specification. A client runtime that has received a SOAP
response message, and that has not yet performed any transformations on
the response message, is operating at point (4) in the message
processing model defined by this specification.

[#50458643_pgfId-1029906]##If the client runtime obtained a non-null
ClientAuthContext by using the authentication context identifier
corresponding to the request message, then at point (1) in the message
processing model, the runtime must call secureRequest on the
ClientAuthContext, and at point (4) the runtime must call
validateResponse on the ClientAuthContext.

[#50458643_pgfId-1029936]##When processing a one-way application message
exchange pattern, the runtime must not proceed to point (4) unless the
return value from secureRequest (or a from validateResponse) is
AuthStatus.SEND_CONTINUE.

======= [#50458643_pgfId-1026838]##[#50458643_15679]##MessageInfo Requirements

[#50458643_pgfId-1028277]##The messageInfo argument used in a call to
secureRequest must have been initialized by the runtime such that its
getRequestMessage will return the SOAP request message being processed
by the runtime.

[#50458643_pgfId-1028019]##When a corresponding call is made to
validateResponse, it must be made with the same messageInfo and
clientSubject arguments used in the corresponding call to secureRequest,
and it must have been initialized by the runtime such that its
getResponseMessage method will return the SOAP response message being
processed by the runtime.

======= [#50458643_pgfId-1026841]##MessageInfo Properties

[#50458643_pgfId-1026933]##This profile requires that the message
processing runtime establish the following key-value pairs within the
Map of the MessageInfo passed in the calls to secureRequest and
validateResponse.

======= [#50458643_pgfId-1031487]##Client MessageInfo Map Properties

[#50458643_pgfId-1031491]##key

[#50458643_pgfId-1031493]##value

[#50458643_pgfId-1031495]##javax.xml.ws.wsdl.service

[#50458643_pgfId-1031497]##The value of the qualified service name,
represented as a javax.xml.namespace.QName.

======= [#50458643_pgfId-1026389]##Subject Requirements

[#50458643_pgfId-1027000]##The clientSubject used in the call to
getAuthContext must be used in the call to secureRequest and for any
corresponding calls to validateResponse.

======= [#50458643_pgfId-1026790]##[#50458643_37452]##secureRequest Processing

[#50458643_pgfId-1030256]##When secureRequest is called on a module that
was initialized with a mandatory request policy (as defined by the
return value from requestPolicy.isMandatory()), the module must only
return AuthStatus.SEND_SUCCESS if it was able to completely satisfy the
request policy. If the module was not able to completely satisfy the
request policy, it must:

* [#50458643_pgfId-1029923]##Return AuthStatus.SEND_CONTINUE – If it has
established an initial request (available to the runtime by calling
messageInfo.getRequestMessage) that must be sent by the runtime for the
request to be effectively continued and when additional message
exchanges will be required to achieve successful completion of the
secureRequest processing.
* [#50458643_pgfId-1029928]##Return AuthStatus.FAILURE – If it failed
securing the request and only if it established a response message
containing a SOAP fault element (available to the runtime by calling
messageInfo.getResponseMessage) that may be returned to the application
to indicate that the request failed.
* [#50458643_pgfId-1027308]##Throw an AuthException – If it failed
securing the request and did not establishing a failure response
message. The runtime may choose to return a response message containing
a SOAP fault element, in which case, the runtime must define the content
of the message and of the fault, and may do so based on the content of
the AuthException.

[#50458643_pgfId-1028204]##When secureRequest is called on a module that
was initialized with an optional requestPolicy (that is,
requestPolicy.isMandatory() returns false), the module may attempt to
satisfy the request policy and may return AuthStatus.SEND_SUCCESS
independent of whether the policy was satisfied.

[#50458643_pgfId-1030932]##The module should NOT throw an AuthException
or return AuthStatus.FAILURE. The module may initiate a security dialog,
as described above for AuthStatus.SEND_CONTINUE, but should not do so if
the client cannot accommodate the possibility of a failure of an
optional security dialog.

[#50458643_pgfId-1030357]##When secureRequest is called on a module that
was initialized with an undefined request policy (that is, requestPolicy
== null), the module must return AuthStatus.SEND_SUCCESS.

======= [#50458643_pgfId-1028206]##[#50458643_31172]##validateResponse Processing

[#50458643_pgfId-1028363]##validateResponse may be called either prior
to the service invocation to process a response received during the
secureRequest processing (when a multi-message dialog is required to
secure the request), or after the service invocation and during the
process of securing the response generated by the service invocation.
The module implementation is responsible for recording any state and
performing any processing required to differentiate these contexts.

======= [#50458643_pgfId-1028368]##[#50458643_11691]##validateResponse After Service Invocation

[#50458643_pgfId-1028402]##When validateResponse is called after the
service invocation on a module that was initialized with a mandatory
response policy (as defined by the return value from
responsePolicy.isMandatory()), the module must only return
AuthStatus.SUCCESS if it was able to completely satisfy the response
policy. If the module was not able to completely satisfy the response
policy, it must:

* [#50458643_pgfId-1026305]##Return AuthStatus.SEND_CONTINUE – If it has
established a request (available to the runtime by calling
messageInfo.getRequestMessage) that must be sent by the runtime for the
response validation to be effectively continued by the client.
* [#50458643_pgfId-1028895]##Return AuthStatus.FAILURE – If response
validation failed and only if the module has established a response
message containing a SOAP fault element (available to the runtime by
calling messageInfo.getResponseMessage) that may be returned to the
application to indicate that the response validation failed.
* [#50458643_pgfId-1026307]##Throw an AuthException – If response
validation failed without establishing a failure response message. The
runtime may choose to return a response message containing a SOAP fault
element, in which case, the runtime must define the content of the
message and of the fault, and may do so based on the content of the
AuthException.

[#50458643_pgfId-1028198]##When validateResponse is called after the
service invocation on a module that was initialized with an optional
responsePolicy (that is, responsePolicy.isMandatory() returns false),
the module should attempt to satisfy the response policy, but it must do
so without initiatinglink:#pgfId-1030808[17] additional message
exchanges or interactions involving the service. Independent of whether
the response policy is satisfied, the module may return
AuthStatus.SUCCESS. If the module determines that an invalid or
incomplete security context was used to secure the response, then the
module may return AuthStatus.FAILURE, AuthStatus.SEND_CONTINUE, or throw
an AuthException. The runtime must process an AuthException as described
above for a response with a mandatory responsePolicy. The runtime must
process any return value other than AuthStatus.SUCCESS as it would be
processed if it were returned for a response with a mandatory
responsePolicy.

[#50458643_pgfId-1030377]##When validateResponse is called after the
service invocation on a module that was initialized with an undefined
response policy (that is, responsePolicy == null), the module must
return AuthStatus.SUCCESS.

======= [#50458643_pgfId-1028384]##validateResponse Before Service Invocationlink:#pgfId-1028502[18]

[#50458643_pgfId-1028443]##When validateResponse is called before the
service invocation, the module must return AuthStatus.SEND_CONTINUE if
the request dialog is to continue. This status value is used to inform
the client runtime that, to successfully complete the request
processing, it must be capable of continuing the message dialog by
processing at least one additional request/response exchange. The module
must have established (in messageInfo) a request message that will cause
the service to continue the request processing. For the request
processing to be successfully completed, the runtime must send the
request message returned by the module.

[#50458643_pgfId-1028445]##If the module returns AuthStatus.FAILURE, it
must have established a SOAP message containing a SOAP fault element as
the response in messageInfo and that may be returned to the application
to indicate that the request failed.

[#50458643_pgfId-1028487]##If the module throws an AuthException, the
runtime may choose to return a response message containing a SOAP fault
element, in which case, the runtime must define the content of the
message and of the fault, and may do so based on the content of the
AuthException.

====== [#50458643_pgfId-1028199]##Requirements for Server Runtimes

[#50458643_pgfId-1026471]##This section defines the requirements of this
profile that must be satisfied by a runtime operating in the server
role. A runtime may operate in both the client and server roles.

======= [#50458643_pgfId-1029200]##[#50458643_18909]##Server-Side Application Context Identifier

[#50458643_pgfId-1029295]##The application context identifier used by a
server-runtime to acquire the AuthConfigProvider and ServerAuthConfig
objects pertaining to the endpoint side processing of an invocation
shall be the String value constructed by concatenating a host name, a
blank separator character, and the pathlink:#pgfId-1031721[19] component
of the service endpoint URI corresponding to the webservice.

[#50458643_pgfId-1029297]##AppContextID ::= hostname blank
service-endpoint-uri

[#50458643_pgfId-1029357]##For example: “aquarium
/petstore/delivery-service/fish"

[#50458643_pgfId-1029534]##In the definition of server-side application
context identifiers, this profile uses the term host name to refer to
the logical host that performs the service corresponding to a service
invocation. Web service invocations may be directed to a logical host
using various physical or virtual host names or addresses, and a message
processing runtime may be composed of multiple logical hosts. Systems or
administrators that register AuthConfigProvider objects with specific
server-side application context identifiers must have an ability to
determine the hostname for which they wish to perform the registration.

======= [#50458643_pgfId-1029360]##[#50458643_73656]##CallbackHandler Requirements

[#50458643_pgfId-1026147]##The CallbackHandler passed to
ServerAuthModule.initialize must support the following callbacks:

* [#50458643_pgfId-1026148]##CallerPrincipalCallback
* [#50458643_pgfId-1026149]##GroupPrincipalCallback
* [#50458643_pgfId-1026155]##PasswordValidationCallback

[#50458643_pgfId-1026474]##The CallbackHandler must also support the
requirements in link:jaspic.htm#50458643_81966[See CallbackHandler
Requirements].”

======= [#50458643_pgfId-1026639]##AuthConfigProvider Requirements

[#50458643_pgfId-1028274]##If a non-null AuthConfigProvider is returned
(by the call to getConfigProvider), the messaging runtime must call
getServerAuthConfig on the provider to obtain the authentication context
configuration object pertaining to the application context at the layer.
The layer and appContext arguments of the call to getServerAuthConfig
must be the same as those used to acquire the provider, and the handler
argument must be as defined in link:jaspic.htm#50458643_73656[See
CallbackHandler Requirements],” for a server runtime.

======= [#50458643_pgfId-1029883]##[#50458643_27233]##Authentication Context Requirements

[#50458643_pgfId-1029884]##The getAuthContext calls made on the
ServerAuthConfig object (obtained by calling getServerAuthConfig) must
satisfy the requirements defined in the following subsections.

======= [#50458643_pgfId-1028760]##[#50458643_56626]##Module Initialization Properties

[#50458643_pgfId-1029971]##If the runtime is a JSR 115 compatible EJB or
Servlet endpoint container, the properties argument passed in all calls
to getAuthContext must contain the key-value pair shown in the following
table.

======= [#50458643_pgfId-1029974]##JSR 115 Compatible Module Initialization Properties

[#50458643_pgfId-1029978]##key

[#50458643_pgfId-1029980]##value

[#50458643_pgfId-1029982]##javax.security.jacc.PolicyContext

[#50458643_pgfId-1029984]##The PolicyContext identifier value that the
container must set to satisfy the JSR 115 authorization requirements as
described in “Setting the Policy Context” within the JSR 115
specification

[#50458643_pgfId-1026807]##When the runtime is not a JSR 115 compatible
endpoint container, the properties argument used in all calls to
getAuthContext must not include a javax.security.jacc.PolicyContext
key-value pair, and a null value may be passed for the properties
argument.

======= [#50458643_pgfId-1026821]##[#50458643_99998]##MessagePolicy Requirements

[#50458643_pgfId-1030505]##When a non-null requestPolicy is used to
initialize the authentication modules of a ServerAuthContext, the
requestPolicy must be constructed such that the value obtained by
calling isMandatory on the requestPolicy accurately reflects whether
(that is, true return value) or not (that is, false return value)
message protection within the SOAP messaging layer is required to
perform the web service invocation corresponding to the MessageInfo used
to acquire the ServerAuthContext. Similarly, the value obtained by
calling isMandatory on a non-null responsePolicy must accurately reflect
whether or not message protection is required (within the SOAP messaging
layer) on the response (if there is one) resulting from the
corresponding web service invocation

[#50458643_pgfId-1031301]##Calling getTargetPolicies on the
requestPolicy corresponding to a web service invocation for which a SOAP
layer client identity is to be established as the caller identity must
return an array containing at least one TargetPolicy for which calling
getProtectionPolicy.getID() returns one of the following values:

* [#50458643_pgfId-1031302]##ProtectionPolicy.AUTHENTICATE_SENDER
* [#50458643_pgfId-1026828]##ProtectionPolicy.AUTHENTICATE_CONTENT

[#50458643_pgfId-1030568]##When all of the operations of a web service
endpoint require client authentication, each ServerAuthContext acquired
for the endpoint must initialize its contained authentication modules
with a requestPolicy that includes a TargetPolicy as described above and
that mandates client authentication. When client authentication is
required for some, but not all, operations of an endpoint, the
requestPolicy used to initialize the authentication modules of a
ServerAuthContext acquired for the endpoint must include a TargetPolicy
as described above and should only mandate client authentication if
client authentication is required for all of the operations mapped to
the ServerAuthContext. When none of the operations mapped to a
ServerAuthContext require client authentication, the requestPolicy used
to initialize the authentication modules of the ServerAuthContext must
NOT mandate client authentication.

======= [#50458643_pgfId-1027476]##[#50458643_63204]##Message Processing Requirements

[#50458643_pgfId-1028265]##A server runtime that has received a SOAP
request message, and that has not yet performed any transformations on
the SOAP message, is operating at point (2) in the message processing
model defined by this specification. A server runtime, after having
prepared (except for security) a SOAP response message to be returned to
the client, is operating at point (3) in the message processing model
defined by this specification.

[#50458643_pgfId-1031080]##When processing a one-way application message
exchange pattern, the runtime must not proceed to point (3) in the
message processing model, and the runtime must only return a response
message when validateRequest returns AuthStatus.SEND_CONTINUE (in which
case, the response defined by validateRequest is to be returned).

[#50458643_pgfId-1031073]##If the server runtime obtained a non-null
ServerAuthContext by using the authentication context identifier
corresponding to the request message, then at point (2) in the message
processing model, the runtime must call validateRequest on the
ServerAuthContext, and at point (3) the runtime must call secureResponse
on the ServerAuthContext.

[#50458643_pgfId-1030022]##If the call to validateRequest returns
AuthStatus.SUCCESS, the runtime must perform any web service
authorization processinglink:#pgfId-1030025[20] required as a
prerequisite to accessing the target resource. If authentication is
required for the request to be authorized, the runtime must determine
whether the authentication identity established in the clientSubject is
authorized to access the resource. In a JSR 115 compatible runtime, the
identity tested for authorization must be comprised of exactly the
Principal objects of the clientSubject. If the request is NOT
authorized, and the message-exchange pattern is not one-way, the runtime
must set within the response (within messageInfo) a SOAP fault element
as defined by the runtime. If the request was determined to be
authorized, it must be dispatched to the resource. Otherwise the request
must NOT be dispatched and the runtime must proceed to point (3) in the
message processing model (as appropriate to the message exchange
pattern).

[#50458643_pgfId-1030029]##If the invocation of the resource results in
an exception being thrown by the resource to the runtime and the message
exchange pattern is not one-way, the runtime must set within the
response (within messageInfo) a SOAP fault element as defined by the
runtime. Following the resource invocation, and if the message exchange
pattern is not one-way, the runtime must proceed to point (3) in the
message processing model. At point (3) in the message processing model,
the runtime must call secureResponse on the same ServerAuthContext used
in the corresponding call to validateRequest and with the same
MessageInfo object.

[#50458643_pgfId-1030030]##If the request is dispatched to the resource,
and the resource was configured to run-as its caller, then for
invocations originating from the resource where caller propagation is
required, the identity established using the CallerPrincipalCallback
must be used as the propagated identity.

======= [#50458643_pgfId-1026193]##MessageInfo Requirements

[#50458643_pgfId-1028262]##The messageInfo argument used in a call to
validateRequest must have been initialized by the runtime such that its
getRequestMessage will return the SOAP request message being processed
by the runtime.

[#50458643_pgfId-1027066]##When a corresponding call is made to
secureResponse, it must be made with the same messageInfo and
serviceSubject arguments used in the corresponding call to
validateRequest, and it must have been initialized by the runtime such
that its getResponseMessage method will return the SOAP response message
being processed by the runtime.

======= [#50458643_pgfId-1027601]##[#50458643_18618]## MessageInfo Properties

[#50458643_pgfId-1027067]##This profile does not define any properties
that must be included in the Map within the MessageInfo passed in calls
to validateRequest and secureResponse.

======= [#50458643_pgfId-1026213]##Subject Requirements

[#50458643_pgfId-1027040]##A new clientSubject must be instantiated and
passed in any calls made to validateRequest.

======= [#50458643_pgfId-1027036]##validateRequest Processing

[#50458643_pgfId-1026220]##validateRequest may be called either before
the service invocation (to validate and authorize the request) or after
the service invocation (when a multi-message dialog is required to
secure the response). The module implementation is responsible for
recording any state and performing any processing required to
differentiate these contexts.

======= [#50458643_pgfId-1026221]##[#50458643_60890]##validateRequest Before Service Invocation

[#50458643_pgfId-1030849]##When validateRequest is called before the
service invocation on a module initialized with a mandatory request
policy (as defined by the return value from
requestPolicy.isMandatory()), the module must only return
AuthStatus.SUCCESS if it was able to completely satisfy the request
policy. If the satisfied request policy includes a TargetPolicy element
with a ProtectionPolicy of AUTHENTICATE_SOURCE or AUTHENTICATE_CONTENT,
then the module (or its context) must employ the CallbackHandler passed
to it by the runtime to handle a CallerPrincipalCallback using the
clientSubject as argument to the callback. If more than one module of a
context uses the CallbackHandler to handle this callback, the context is
responsible for coordinating the calls such that the appropriate caller
principal value is established.

[#50458643_pgfId-1030850]##If the module was not able to completely
satisfy the request policy, it must:

* [#50458643_pgfId-1026224]##Return AuthStatus.SEND_CONTINUE – If it has
established a response (available to the runtime by calling
messageInfo.getResponseMessage) that must be sent by the runtime for the
request validation to be effectively continued by the client.
* [#50458643_pgfId-1030862]##Return AuthStatus.SEND_FAILURE – If the
request validation failed, and when the module has established a SOAP
message containing a fault element (available to the runtime by calling
messageInfo.getResponseMessage) that may be sent by the runtime to
inform the client that the request failed.
* [#50458643_pgfId-1030863]##Throw an AuthException – If the request
validation failed, and when the module has NOT defined a response, to be
sent by the runtime. If the runtime chooses to send a response, it must
define a SOAP message containing a SOAP fault element, and may use the
content of the AuthException to do so.

[#50458643_pgfId-1027729]##When validateRequest is called before the
service invocation on a module that was initialized with an optional
request policy (that is, requestPolicy.isMandatory() returns false), the
module should attempt to satisfy the request policy, but it must do so
without initiatinglink:#pgfId-1030821[21] additional message exchanges
or interactions involving the client. Independent of whether the request
policy is satisfied, the module may return AuthStatus.SUCCESS. If the
module returns AuthStatus.SUCCESS, and the request policy was satisfied
(and included a TargetPolicy element as described above), then the
module (or its context) must employ the CallerPrincipalCallback as
described above. If the request policy was not satisfied (and included a
TargetPolicy element as described above), and yet the module chooses to
return AuthStatus.SUCCESS, the module (or its context) must use a
CallerPrincipalCallback to establish the container’s representation of
the unauthenticated caller within the clientSubject. If the module
determines that an invalid or incomplete security context was used to
secure the request, then the module may return AuthStatus.SEND_FAILURE,
AuthStatus.SEND_CONTINUE, or throw an AuthException.If the module throws
an AuthException, or returns any value other that AuthStatus.SUCCESS,
the runtime must NOT proceed to the service invocation. The runtime must
process an AuthException as described above for a request with a
mandatory requestPolicy. The runtime must process any return value other
than AuthStatus.SUCCESS as it would be processed if it were returned for
a request with a mandatory requestPolicy.

[#50458643_pgfId-1030403]##When validateRequest is called before the
service invocation on a module that was initialized with an undefined
request policy (that is, requestPolicy == null), the module must return
AuthStatus.SUCCESS.

======= [#50458643_pgfId-1026230]##[#50458643_30319]##validateRequest After Service Invocation link:#pgfId-1028496[22]

[#50458643_pgfId-1026231]##When validateRequest is called after the
service invocation, the module must return AuthStatus.SEND_SUCCESS when
the module has successfully secured the application response message and
made it available through messageInfo.getResponseMessage. For the
request to be successfully completed, the runtime must send the response
message returned by the module.

[#50458643_pgfId-1026232]##When securing of the application response
message has failed, and the response dialog is to be terminated, the
module must return AuthStatus.SEND_FAILURE or throw an AuthException.

[#50458643_pgfId-1026233]##If the module returns
AuthStatus.SEND_FAILURE, it must have established a SOAP message
containing a SOAP fault element as the response in messageInfo. The
runtime may choose not to send a response message, or to send a
different response message.

[#50458643_pgfId-1026234]##When the module throws an AuthException, the
runtime may choose not to send a response. If the runtime sends a
response, the runtime must define the content of the response.

[#50458643_pgfId-1026235]##The module must return
AuthStatus.SEND_CONTINUE if the response dialog is to continue. This
status value is used to inform the calling runtime that, to successfully
complete the response processing, it will need to be capable of
continuing the message dialog by processing at least one additional
request/response exchange (after having sent the response message
returned in messageInfo). The module must have established (in
messageInfo) a response message that will cause the client to continue
the response processing. For the response processing to be successfully
completed, the runtime must send the response message returned by the
module.

======= [#50458643_pgfId-1026236]##[#50458643_42720]##secureResponse Processing

[#50458643_pgfId-1028253]##  

[#50458643_pgfId-1026237]##When secureResponse is called on a module
that was initialized with an undefined responsePolicy (that is,
responsePolicy == null), the module must return AuthStatus.SEND_SUCCESS.
Otherwise, the return value and AuthException semantics of
secureResponse are as defined in link:jaspic.htm#50458643_30319[See
validateRequest After Service Invocation].”

======= [#50458639_pgfId-1020138]## _CHAPTER_ [#50458639_32725]##

=== [#50458639_pgfId-1029190]##[#50458639_63745]##Future Profiles

[#50458639_pgfId-1029191]##This chapter presents initial thoughts on
some other profiles that are being considered.

====== [#50458639_pgfId-1029074]##JMS Profile

[#50458639_pgfId-1029439]##This profile would use the interfaces defined
in this specification to apply pluggable security mechanisms to JMS
message exchanges.

======= [#50458639_pgfId-1029269]##Message Abstraction

[#50458639_pgfId-1029301]##This profile would employ javax.jms.Message
as its message abstraction. Properties would be set on the Message to
convey security credentials and security results.

======= [#50458639_pgfId-1029273]##[#50458639_60699]##Destinations

[#50458639_pgfId-1029129]##In this profile, application contexts could
be defined for JMS destinations, such that authentication configuration
providers could be registered for interactions with destinations, and
such that authentication context configuration objects could be defined
for interactions with destinations.

======= [#50458639_pgfId-1029332]##Message Processing Model

[#50458639_pgfId-1029333]##A client profile could require that
secureRequest be called when a Message is sent by a MessageProducer to a
Destination and that validateResponse be called when a Message is
received by a MessageConsumer from a Destination.

[#50458639_pgfId-1029456]##A server profile could require that
validateRequest be called when a Destination receives a message from a
MessageProducer, and that secureResponse be called when a Destination
sends a message to a MessageConsumer.

====== [#50458639_pgfId-1029463]##[#50458639_27895]##RMI/IIOP Portable Interceptor Profile

[#50458639_pgfId-1029464]##This profile would be implemented within
portable interceptors, where it could be used secure RMI/IIOP message
exchanges and to serve as security mechanism integration facility within
the portable interceptor processing framework.

======= [#50458639_pgfId-1029465]##Message Abstraction

[#50458639_pgfId-1029466]##The profile would employ
org.omg.PortableInterceptor.ClientRequestInfo for its client-side
message abstraction, and org.omg.PortableInterceptor.ServerRequestInfo
for its server-side message abstraction.

[#50458639_pgfId-1029461]## 

======= [#50458684_pgfId-1020138]## _CHAPTER_ [#50458684_32725]##

=== [#50458684_pgfId-1020442]##LoginModule Bridge Profile

[#50458684_pgfId-1020443]##This chapter defines an internal contract
that specifies how a server-side message layer authentication module
(that is, an implementation of the ServerAuthModule interface as defined
by this specification) may delegate some of its security processing
responsibilities to a (JAAS) LoginModule. A LoginModule is an object
that implements the javax.security.auth.spi.LoginModule interface in the
Java Platform, Standard Edition.

====== [#50458684_pgfId-1020172]##[#50458684_13967]##Processing Model

[#50458684_pgfId-1023370]##The ServerAuthModule must create an instance
of a javax.security.auth.login.LoginContext. If the options argument
passed to the initialize method of the ServerAuthModule contains a
non-null String value for the String key
"javax.security.auth.login.LoginContext", then the ServerAuthModule must
pass this value as the name parameter in its calls to the LoginContext
constructor. If the options argument does not contain a non-null String
value for this key, the ServerAuthModule must use its own fully
qualified class name in its calls to the constructor. In either case,
the administrator of the javax.security.auth.login.Configuration system
of the LoginContext is responsible for establishing the
javax.security.auth.login.AppConfigurationEntry objects (with
corresponding login module name, control flag, and initialization
options) to be returned for the entry name used by the ServerAuthModule
and for the default entry name "other".

[#50458684_pgfId-1020297]##If the ServerAuthModule passes a Subject to
the LoginContext constructor, it must pass its client Subject. The
ServerAuthModule must pass a CallbackHandler to the constructor and the
passed CallbackHandler must conform to the requirements of
link:jaspic.htm#50458684_47308[See Standard Callbacks]."

[#50458684_pgfId-1020318]##A new LoginContext instance should be created
for each new request, and a LoginContext instance should not be shared
across different requests. Once a LoginContext object has been created,
the LoginContext.login method may be invoked from within the
ServerAuthModule.validateRequest method to delegate security processing
to the LoginModule objects configured in the LoginContext.

====== [#50458684_pgfId-1020185]##Division of Responsibility

[#50458684_pgfId-1022788]##A ServerAuthModule must only interact with a
LoginModule in a protocol-independent fashion. Specifically, a
ServerAuthModule is the only entity that may interpret protocol-specific
messages (a SOAP request or an HTTP Servlet request, for example). A
LoginModule must only perform protocol-independent security processing
(for example, verifying a username/password that was transmitted in the
request).

[#50458684_pgfId-1022861]##A LoginModule requests information from the
ServerAuthModule using the ServerAuthModule provided CallbackHandler.
Since the LoginModule must only perform protocol-independent operations,
it follows that any callback it requests from the handler must also be
protocol-independent. It is the responsibility of the provided
CallbackHandler implementation to return the requested
protocol-independent information to the LoginModule. The CallbackHandler
is responsible for any protocol-specific message parsing required to
extract the protocol-independent information returned by the
CallbackHandler.

====== [#50458684_pgfId-1023395]##[#50458684_47308]##Standard Callbacks

[#50458684_pgfId-1023400]##This profile requires that the
CallbackHandler provided by the ServerAuthModule to the LoginContext
constructor support the javax.security.auth.callback.NameCallback and
the javax.security.auth.callback.PasswordCallback. If the
ServerAuthModule passes its client Subject to the LoginContext
constructor, the CallbackHandler provided to the LoginContext
constructor must also support the GroupPrincipalCallback. Future
versions of this profile may require that additional callbacks be
supported by the handler.

====== [#50458684_pgfId-1020387]##[#50458684_19985]##Subjects

[#50458684_pgfId-1022761]##If authentication succeeds, a LoginModule may
update its Subject instance with authenticated Principal and credential
objects. If the ServerAuthModule did not pass its client Subject to the
LoginContext constructor, then it must transfer the Principals and
credentials from the LoginContext Subject to the client Subject.

[#50458684_pgfId-1023405]##If the ServerAuthModule is implementing a
profile of this specification that requires the module to employ the
CallerPrincipalCallback, then the ServerAuthModule must satisfy this
requirement using the CallbackHandler provided to the ServerAuthModule,
and the CallerPrincipalCallback must be constructed using the
namelink:#pgfId-1023340[23] value that would be obtained by the
LoginModule if it were to use its CallbackHandler to handle a
NameCallback.

====== [#50458684_pgfId-1020418]##Logout

[#50458684_pgfId-1020411]##When ServerAuthModule.cleanSubject is called
on the client Subject, the cleanSubject method must invoke the
LoginContext.logout method.

====== [#50458684_pgfId-1022807]##LoginExceptions

[#50458684_pgfId-1020429]##If the LoginContext instance throws a
LoginException, the ServerAuthModule must throw a corresponding
AuthException. The LoginException may be established as the cause of the
AuthException.

======= [#50458685_pgfId-6947]##APPENDIX [#50458685_55242]##

=== [#50458685_pgfId-7705]##[#50458685_53633]##Related Documents

[#50458685_pgfId-7999]##This specification refers to the following
documents. The terms used to refer to the documents in this
specification are included in brackets.

[#50458685_pgfId-8155]##S. Bradner, “Key words for use in RFCs to
Indicate Requirement Levels,” RFC 2119, Harvard University, March 1997,
[Keywords].

[#50458685_pgfId-20384]## _Java™ 2 Platform, Enterprise Edition
Specification Version 1.4_ [J2EE Specification], available at:
_http://java.sun.com/j2ee/docs.html_ .

[#50458685_pgfId-17918]## _Java™ Platform, Enterprise Edition 5
Specification,_ [Java EE 5 Specification], available at:
http://java.sun.com/javaee

[#50458685_pgfId-17922]## _Java™ 2 Platform, Standard Edition, Version
5.0 API Specification_ , [Java SE 5 Specification], available at:
_http://java.sun.com/javase_

[#50458685_pgfId-8186]## _Enterprise JavaBeans™ Specification, Version
3.0_ [EJB Specification], available at:
_http://java.sun.com/products/ejb_

[#50458685_pgfId-8009]## _Java™ Servlet Specification, Version 2.5_
[Servlet Specification], available at:
_http://java.sun.com/products/servlet_

[#50458685_pgfId-8302]## _Java™ Authentication and Authorization
Service_ (JAAS) 1.0 [JAAS Specification], available at:
_http://java.sun.com/products/jaas_

[#50458685_pgfId-20207]## _Java™_ API for XML-Based Web Services
(JAX-WS) 2.0 [JAXWS-2.0 Specification], available at:
https://jax-ws.dev.java.net/ or
http://jcp.org/aboutJava/communityprocess/final/jsr224

[#50458685_pgfId-20413]## _Java™_ API for XML-Based Web Services
(JAX-WS) 2.1 [JAXWS-2.1 Specification], available at:
https://jax-ws.dev.java.net/ or
http://jcp.org/aboutJava/communityprocess/final/jsr224

[#50458685_pgfId-20270]##SOAP Version 1.2 Part 0: Primer, W3C
Recommendation, 24 June 2003 [SOAP Specification], available at:
http://www.w3.org/TR/soap12-part0

[#50458685_pgfId-20314]## _Java™_ Message Service Specification Version
1.1 [JMS Sp ecification], available at:
http://java.sun.com/products/jms/docs.html

[#50458685_pgfId-20325]##Common Secure Interoperability, Version 2
(CSIv2),OMG standard [CSIv2 Specification], available at:
http://www.omg.org/technology/documents/formal/omg_security.htm

[#50458685_pgfId-20363]##Portable Interceptors, OMG Standard [PI
Specification], available at:
http://www.omg.org/docs/formal/04-03-19.pdf

======= [#50458686_pgfId-874]## _ApPenDIX_ [#50458686_32725]##

=== [#50458686_pgfId-999129]##[#50458686_50116]##Issues

[#50458686_pgfId-1011446]##The following sections document the more
noteworthy issues that have been discussed by the Expert Group (EG). The
expectation is that standardization of the interfaces defined by this
specification will depend on satisfactory resolution of these issues.

======= [#50458686_pgfId-1012965]##Implementing getCallerPrincipal and getUserPrincipal

[#50458686_pgfId-1012966]##J2EE containers and other messaging runtimes
are required to support various forms of these methods. When the
authentication identity is provided to the container as a bag of
principals in a Subject, the container needs some way to recognize which
of the principals in the subject should be returned as the caller or
user Principal.

[#50458686_pgfId-1012987]##

image:jaspic-4.gif[image]

Defined the CallerPrincipalCallback and GroupPrincipalCallback. The
container provided CallbackHandler will handle these callbacks by
distinguishing (in some container specific way) the Principals
identified in the corresponding Callback within a Subject passed in the
Callback.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1013013]##Alternative Supported Mechanisms at an Endpoint

[#50458686_pgfId-1015582]##How does one use this SPI to configure and
invoke alternative “sufficient” providers, such that satisfying any
alternative within the context results in a successful outcome as seen
by the calling container or runtime?

[#50458686_pgfId-1015583]##

image:jaspic-4.gif[image]

The getAuthContext method of ClientAuthConfig and ServerAuthConfig was
modified to include the credentials of the client or service subject
respectively so that they may be applied in the context acquisition. The
presence of the credentials during context selection will allow the
acquired context to be matched to the credentials, which will eliminate
one of the reasons, that is, support for alternative credential types,
why a context might need to support alternative (sufficient) modules.
AuthContext objects could achieve transactional semantics by passing
message copies to modules, or they could pass properties requiring
transaction behavior of modules. There seems to be consensus within the
EG that we should facilitate the use of single module contexts by
empowering the config layer to select an appropriate context (containing
a single module).

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015517]##Access by Module to Other Layer Authentication Results

[#50458686_pgfId-1013265]##How does an authentication module gain access
to authentication results established at a “lower” authentication layer?
For example, acceptance of an identity assertion for subject S conveyed
within the message at layer Y may be dependent on being able to
authenticate at some lower layer (for example, SSL or perhaps message
layer X), the entity (perhaps other than S) providing or making the
identity assertion.

[#50458686_pgfId-1013273]## 

[#50458686_pgfId-1013313]##

image:jaspic-4.gif[image]

The ServletRequest object includes attributes that define the security
properties of the transport connection on which a protected request
arrived at the Servlet container. For the Servlet profile of this
specification, we would expect the existing attribute mechanism to be
employed. The general issue remains open, and may be resolved by the
definition of one or more new Callback objects (for example,
getTransportProtection and/or getLayerSubject) to be handled by the
container or runtime.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015592]##How Are Target Credentials Acquired by Client Authentication Modules?

[#50458686_pgfId-1013360]##When a client must obtain a short-lived,
service-targeted security token (such as a Kerberos Service Ticket), how
are such tokens acquired, and how might the SPI defined by this
specification be applied to secure any network interactions required for
token acquisition? If the client authentication module is to perform
token acquisition directly, it must be provided with sufficient
information to acquire a suitable token. If token acquisition is done by
the runtime (perhaps) in advance of the authentication module invocation
(for example, during name context interpretation), the authentication
module must be provided with a means to obtain a suitable token from the
runtime.

[#50458686_pgfId-1013403]##

image:jaspic-4.gif[image]

Extended the AuthConfig SPI to provide for the communication of
properties such as service name at module initialization. Message
exchanges required to acquire security tokens may be encapsulated in any
of the AuthConfig, AuthContext, or AuthModule elements of the processing
model. Also added Subject parameter to getAuthContext call such that the
acquired credential can be passed back to the runtime.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1013399]##How Does a Module Issue a Challenge?

[#50458686_pgfId-1013339]##How does an authentication module return a
message to inform its network peer that it must do some additional
security processing as required by the network authentication mechanism
being implemented by the module?

[#50458686_pgfId-1015648]##

image:jaspic-4.gif[image]

Defined AuthStatus.SEND_CONTINUE and related semantics. Improved the
overview and message authentication chapters to describe multi-message
exchanges.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015649]##Message Correlation for Multi-Message Dialogs

[#50458686_pgfId-1015693]##How are the messages that comprise a
multi-message authentication dialog correlated, and where is any state
relating to the authentication kept?

[#50458686_pgfId-1015689]## 

[#50458686_pgfId-1015669]##

image:jaspic-4.gif[image]

Based on the premise that message-specific knowledge is held within the
authentication modules and that authentication modules are responsible
for control of the dialog, it is assumed that authentication modules are
responsible for tying together or correlating the messages that comprise
the multi-message authentication dialog. Modules are expected to record
and recover any necessary state, and may do so using the facilities of
the containing runtime (for example, persisted sessions). It is also
recognized that there are security mechanisms where message correlation
is dependent on context external to the exchanged messages, such as the
transport connection or session on which the messages were received, and
that in such cases authentication modules will be dependent on
correlation related facilities provided by the runtime. This draft of
the specification does not standardize such facilities. The expert group
discussed two alternatives for providing such facilities: 1) provide one
or more callbacks to allow a module to set and get state associated with
the current transport session; 2) define a module return value to be
used to signal the runtime when it must record and reuse the same
(stateful) messageInfo parameter when it calls the module to process the
next message on the same transport session.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015658]##Compatibility With Load-Balancing Mechanisms

[#50458686_pgfId-1015704]##In a load-balanced environment, must the
messages that comprise a multi-message authentication dialog (for
example, the messages of a challenge-response dialog) be processed by
the same authentication module instance, and if so how will that be
accomplished?

[#50458686_pgfId-1015712]##

image:jaspic-4.gif[image]

Modules may choose to persist any state required to complete the dialog
in a centralized repository. In other cases, such modules may choose to
employ persisted session facilities of the runtime (for example,
HttpSession) that have already been reconciled with load balancing. In
other cases, it may be feasible to extend train the load-balancer to
recognize security-mechanisms specific correlation identifiers in
messages.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015696]##Use of Generics and Typesafe Enums in Interface Definition

[#50458686_pgfId-1015765]##Should the SPI be modified to use new Java
language features, specifically generics and typesafe enums, introduced
in Java SE 5?

[#50458686_pgfId-1015770]##

image:jaspic-4.gif[image]

There is a requirement that the SPI be used in J2SE 1.4 environments,
and an interest has been expressed in using the SPI in J2ME
environments. As such, the specification does not employ these language
features. There has been discussion regarding the use of these features
in the SPI definition, while allowing for implementations matched to
Java environments where these features are not available.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1015822]##[#50458686_63065]##HttpServletResponse Buffering and Header Commit Semantics

[#50458686_pgfId-1015905]##The Servlet Specification defines buffering
of the HttpServletResponse body such that filling the response
bodylink:#pgfId-1015958[24] (for the first time) can cause the response
status code, HTTP response headers, and first buffer’s worth of response
body to be sent. Similarly, during processing of an HttpServletRequest,
methods may be called on the corresponding HttpServletResponse (for
example, sendRedirect or flushbuffer) that will cause the analogous
content to be sent. In all such cases, the response has effectively been
committed with respect to the status code, headers, and first response
body buffer that will be returned to the client. After a response has
committed, subsequent changes are not permitted to the status code or
headers, and change to the response body is only permitted to the extent
that more content may be appended. As such, when response buffering
triggers a commit, for example during processing within the servlet, a
call to secureResponse, following return from the servlet, will be
unable to effect the response status code, the response headers, or any
response body content that has already been sent (any or all of which
may be necessary to secure the response).

[#50458686_pgfId-1016051]##

image:jaspic-4.gif[image]

The Servlet Specification defines the HttpServletResponseWrapper class,
which can be used to extend the buffering capacity of the response, and
thereby delay commit until the response is complete. When a
ServerAuthModule requires that responses be buffered until they are
explicitly completed, the module’s validateRequest method should install
a response wrapper when it returns AuthStatus.SUCCESS. Just prior to its
return, the secureResponse method of the ServerAuthModule should write
the completed message to the wrapped response and remove the wrapper.

image:jaspic-4.gif[image]

======= [#50458686_pgfId-1016070]##[#50458686_45082]##Reporting New Issues

[#50458686_pgfId-1016065]##

image:jaspic-4.gif[image]

http://java.net/projects/jaspic-spec%20[]http://java.net/jira/browse/JASPIC_SPEC[The
maintenance project for this specification is located on the web at:
http://java.net/projects/jaspic-spec where you will find the technology
issue tracker at: http://java.net/jira/browse/JASPIC_SPEC]

image:jaspic-4.gif[image]

======= [#50458687_pgfId-27211]## aPPENDIX

=== [#50458687_pgfId-27212]##Revision History

[#50458687_pgfId-27213]## 

======= [#50458687_pgfId-16289]##Early Draft 1 (dated 06/06/2005)

======= [#50458687_pgfId-25211]##Significant Changes in Public Draft (dated 08/15/2006).

======= [#50458687_pgfId-27196]##Changes to API

[#50458687_pgfId-27218]##The classes and interfaces of the API were
divided into four packages, message, config, callback, and module.

[#50458687_pgfId-27264]##The MessageLayer Interface was removed. Message
layers are represented as a String.

[#50458687_pgfId-27265]##The use of the URI type to identify
applications (and other things) was replaced by String,

[#50458687_pgfId-27252]##The AuthParam Interface was replaced by the
MessageInfo Interface, and concrete message-specific implementations of
the AuthParam interface were removed from the SPI.

[#50458687_pgfId-27253]##The disposeSubject methods were renamed
cleanSubject.

[#50458687_pgfId-27254]##The sharedMap arguments were removed.
MessageInfo is now used to convey such context.

[#50458687_pgfId-27255]##The parameter names corresponding to subjects
were modified to correspond to the service role of the corresponding
party (i.e., client or server) as 0pposed to the message sending role.

[#50458687_pgfId-27256]##The ModuleProperties Interface was removed, and
the responsibility for implementing transactional semantics was
transferred to the authentication context (if it supports multiple
sufficient alternatives).

[#50458687_pgfId-27257]##The PendingException and FailureException
classes were removed and a new return value type, AuthStatus, was
defined to convey the related semantics. A general return value model
was provided by the AuthStatus class.

[#50458687_pgfId-27260]##The AuthConfigProvider interface was created to
facilitate the integration of alternative module conversation systems,
and facilities were added to the AuthConfigFactory to support the
registration of AuthConfigProviders. The RegistrationListener interface
we defined to support live replacement of configuration systems.

[#50458687_pgfId-27261]##The authentication context configuration layer
was formalized and methods to acquire authentication contexts (i.e,
getAuthContext) were moved to the authentication context configuration
layer. Subject arguments were added to the getAuthContext methods to
support both the acquisition of credentials by the config system, and to
allow the Subject and its content to factor in the context acquisition.

[#50458687_pgfId-27266]##new callbacks were defined (i.e.
CallerPrincipalCallback and GroupPrincipalCallback).

======= [#50458687_pgfId-27200]##Changes to Processing Model

[#50458687_pgfId-27356]##The AuthStatus return model was described and
the message processing model of the Overview and Message Authentication
chapters was evolved to describe the processing by runtimes of the
returned AuthStatus values, especially in the case of a multi-message
authentication dialog.

======= [#50458687_pgfId-27352]##Changes to Profiles

[#50458687_pgfId-27204]##The Servlet, SOAP, and JMS profiles were added.

======= [#50458687_pgfId-28071]##Changes in Proposed Final Draft 1

======= [#50458687_pgfId-28090]##Changes to Preface

[#50458687_pgfId-28091]##Changed Status and Audience to reflect
transition to PFD.

[#50458687_pgfId-28094]##Added paragraphs to describe relationship to
JAAS

======= [#50458687_pgfId-28096]##Changes to link:jaspic.htm#50458677_60270[See Overview]” Chapter

[#50458687_pgfId-28097]##Changed
sectionslink:jaspic.htm#50458677_73081[See Acquire AuthContext
Identifier] and link:jaspic.htm#50458677_78800[See Acquire
Authentication Context] to reflect change in AuthConfig interface from
getOperation to getAuthContextID.

[#50458687_pgfId-28103]##Added definition of “message processing
runtime” to link:jaspic.htm#50458677_86694[See Terminology]” section.

======= [#50458687_pgfId-28117]##Changes to link:jaspic.htm#50458678_66195[See Message Authentication]” Chapter

[#50458687_pgfId-28140]##Changed sections
link:jaspic.htm#50458678_91017[See Authentication],
link:jaspic.htm#50458678_80015[See What the Provider Must Do],
link:jaspic.htm#50458678_97015[See Acquire AuthContext Identifier],
link:jaspic.htm#50458678_91867[See Acquire Authentication Context]o
reflect change in AuthConfig interface from getOperation to
getAuthContextID.

[#50458687_pgfId-28163]##to link:jaspic.htm#50458678_58423[See What the
Runtime Must Do]”, added a requirement that runtimes support the
granting to applications and administration utilities of the permissions
required to employ the configuration interfaces of the SPI.

[#50458687_pgfId-28168]##In subsection “at point (1) in the message
processing model:” of link:jaspic.htm#50458678_68163[See What the
Runtime Must Do]”, clarified clientSubject requirements, and indicated
that a non-null clientSubject must not be read-only.

[#50458687_pgfId-28188]##In subsection “at point (4) in the message
processing model:” of link:jaspic.htm#50458678_68163[See What the
Runtime Must Do]”, clarified serviceSubject requirements, and indicated
that a non-null serviceSubject must not be read-only.

[#50458687_pgfId-28196]##added “Fig 2.1: State Diagram of Client Message
Processing Runtime”

[#50458687_pgfId-28197]##In subsection “at point (2) in the message
processing model:” of link:jaspic.htm#50458678_68163[See What the
Runtime Must Do]”, clarified serviceSubject requirements, and indicated
that a non-null serviceSubject must not be read-only.

[#50458687_pgfId-28205]##In subsection “at point (3) in the message
processing model:” of link:jaspic.htm#50458678_68163[See What the
Runtime Must Do]”, clarified that the call to secureResponse should be
made independent of the outcome of the application request processing.

[#50458687_pgfId-28215]##added “Fig 2.2: State Diagram of Server Message
Processing Runtime”.

======= [#50458687_pgfId-28220]##Changes to link:jaspic.htm#50458641_42591[See Servlet Container Profile]” Chapter

[#50458687_pgfId-28238]##Added last sentence to introductory paragraph
to clarify what is required to be a compatible implementation of the
profile.

[#50458687_pgfId-28249]##In link:jaspic.htm#50458641_60699[See
Application Context Identifier]”, extended identifier format to include
the logical hostname along with he context path.

[#50458687_pgfId-28253]##In link:jaspic.htm#50458641_81966[See
CallbackHandler Requirements]”, added requirement that the handler
argument (passed by the runtime) must not be null.

[#50458687_pgfId-28257]##Changed section
link:jaspic.htm#50458641_20785[See Authentication Context Requirements]
to reflect change in AuthConfig interface from getOperation to
getAuthContextID.

[#50458687_pgfId-28297]##Changed link:jaspic.htm#50458641_42024[See
Authentication Context Identifiers]”, to remove requirements for a
specific identifier format.

[#50458687_pgfId-28301]##Changed link:jaspic.htm#50458641_58827[See
Module Initialization Properties]”,to require that the runtime set the
PolicyContext in the module initialization properties passed to
getAuthContext call.

[#50458687_pgfId-28313]##In link:jaspic.htm#50458641_73537[See
MessagePolicy Requirements]”, removed requirements relating to
responsePolicy. Also moved responsibility for determining when (client)
authentication is required from the AuthConfig subsystem to the message
processing runtime.

[#50458687_pgfId-28320]##In link:jaspic.htm#50458641_61189[See Message
Processing Requirements]”, clarified the points within the servlet
processing model that corresponding to points 2 and 3 of the message
module. Added explicit statement to ensure that validateRequest is
called on all requests including requests to a login form. Moved the
comment regarding “delegation of session management” to a footnote.
Changed the processing when there is an authorization failure to require
that secureResponse be called. Changed the prohibition on calling
secureResponse when the application throws an exception to a
recommendation. Added last sentence to require the use of the principal
established using the CallerPrincipalCallback where identity propagation
is configured.

[#50458687_pgfId-28332]##Changed link:jaspic.htm#50458641_43992[See
MessageInfo Requirements]”, to conditionally require the inclusion of a
property within the MessageInfo map when client authentication is
required. Also placed new requirement on the authentication context
configuration system that is use this value to establish the
requestPolicy.

[#50458687_pgfId-28339]##Added initial sentence to
link:jaspic.htm#50458641_58550[See ServerAuth Processing]”, to reiterate
that validateRequest be called on every request that satisfies the
applicable connection requirements.

[#50458687_pgfId-28346]##In link:jaspic.htm#50458641_63712[See
validateRequest Before Service Invocation]”,moved responsibility for
coordinating disparate uses of the CallerPrincipalCallback to the
context. Relaxed prohibition on returning SEND_CONTINUE from modules
initialized with an optional requestPolicy by allowing modules to
continue a multi-message authentication dialog as long as it was
initiated by the client. Added requirement that modules initialized with
an optional requestPolicy, use the CallerPrincipalCallback to
established an unauthenticated caller identity (if they return
AuthStatus.SUCCESS without having satisfied the TargetPolicy).

[#50458687_pgfId-28350]##In link:jaspic.htm#50458641_30319[See
validateRequest After Service Invocation]”, removed requirement that the
module set the HTTP 200 (OK) status code.

[#50458687_pgfId-28354]##In link:jaspic.htm#50458641_55699[See
secureResponse Processing]”, removed requirements dependent on
responsePolicy.

[#50458687_pgfId-28361]##Replaced section “Dealing with Servlet Commit
Semantics” with a new link:jaspic.htm#50458641_10260[See Wrapping and
UnWrapping of Requests and Responses].

======= [#50458687_pgfId-28470]##Changes to link:jaspic.htm#50458643_26680[See SOAP Profile]” Chapter

[#50458687_pgfId-28489]##Added last sentence to introductory paragraph
to clarify what is required to be a compatible implementation of the
profile.

[#50458687_pgfId-28514]##Changed link:jaspic.htm#50458643_60699[See
Application Context Identifier]”, to refer to subsections within the
sub-profiles where the corresponding identifiers are defined.

[#50458687_pgfId-28497]##In link:jaspic.htm#50458643_81966[See
CallbackHandler Requirements]”, added requirement that the handler
argument (passed by the runtime) must not be null.

[#50458687_pgfId-29245]##In link:jaspic.htm#50458643_80724[See
Authentication Context Requirements]”, added clarification of what it
means when getAuthContext returns a null value, and how the value
returned by getAuthContext impacts support for a session oriented
authentication mechanism.

[#50458687_pgfId-28530]##Changed link:jaspic.htm#50458643_42024[See
Authentication Context Identifiers]”, to remove requirements for a
specific identifier format.

[#50458687_pgfId-28543]##Added new link:jaspic.htm#50458643_22299[See
Client-Side Application Context Identifier]”, to describe the identifier
format as the concatenation of a client scope identifier and a client
reference to the service. For client scope identifiers, recommended the
use of application identifiers where they are available and suggested
the use of the archive URI where application identifiers are not
available. Required that the service-ref name be used (if available) for
the client reference to the service. Otherwise the service URL is to be
used. Included examples, and added a last paragraph indicating that
registration would require an ability to predict the client scope
identifier and client service reference associated by the runtime with a
client invocation.

[#50458687_pgfId-28550]##Removed requirements from
link:jaspic.htm#50458643_93890[See Authentication Context
Requirements]”, that were already stated in
link:jaspic.htm#50458643_80724[See Authentication Context
Requirements]”.

[#50458687_pgfId-28557]##In link:jaspic.htm#50458643_61034[See Message
Processing Requirements]”, to account for one-way application message
exchange patterns, limited the circumstances under which a runtime may
proceed to point (4) in the message processing model.

[#50458687_pgfId-28579]##In link:jaspic.htm#50458643_15679[See
MessageInfo Requirements]”, changed the description of the value of the
javax.xml.ws.wsdl.service property such that it must be a QName
containing the service name. Removed statement of relationship of value
to client authentication context identifier.

[#50458687_pgfId-28597]##In link:jaspic.htm#50458643_37452[See
secureRequest Processing]”, corrected cut an paste errors (i.e.,
s/response/request/). Relaxed prohibition on returning SEND_CONTINUE
from secureRequest on modules initialized with an optional
requestPolicy. Added requirement that a module must return
AuthStatus.SEND_SUCCESS (from secureRequest) if it was initialized with
a null requestPolicy.

[#50458687_pgfId-28587]##In link:jaspic.htm#50458643_11691[See
validateResponse After Service Invocation]”, on modules initialized with
and optional responsePolicy, relaxed prohibition on returning
SEND_CONTINUE from validateResponse and clarified the handling of
AuthException and the various AuthStatus return values.

[#50458687_pgfId-28609]##Added new link:jaspic.htm#50458643_18909[See
Server-Side Application Context Identifier]”, to describe the identifier
format as the concatenation of the logical hostname of the virtual
server, and the service endpoint URI. Also included an example.

[#50458687_pgfId-28617]##Removed requirements from
link:jaspic.htm#50458643_27233[See Authentication Context
Requirements]”, that were already stated in
link:jaspic.htm#50458643_80724[See Authentication Context
Requirements]”.

[#50458687_pgfId-28628]##Changed link:jaspic.htm#50458643_56626[See
Module Initialization Properties]”, to require that PolicyContext be set
in the module initialization properties (passed to getAuthContext call)
if the server runtime is a JSR 115 compatible container.

[#50458687_pgfId-28649]##In link:jaspic.htm#50458643_99998[See
MessagePolicy Requirements]”, removed paragraphs defining when message
protection is required by an EJB web service container. Added
requirement for a specific TargetPolicy within requestPolicy when the
CallerPrincipalCallback is to be used by the authentication module(s) of
the context. Added a requirement that the requestPolicy must be
mandatory and must include a specific TargetPolicy when all the
operations of an endpoint require client authentication. Added
recommended return values for isMandatory, when not all of the
operations of an endpoint require client authentication.

[#50458687_pgfId-28669]##In link:jaspic.htm#50458643_63204[See Message
Processing Requirements]”, to account for one-way application message
exchange patterns, limited the circumstances under which a runtime may
proceed to point (3) in the message processing model. Moved the comment
regarding “delegation of session management” to a footnote. Changed the
processing to require that secureResponse be called when there is an
authorization failure. Changed the prohibition on calling secureResponse
when the application throws an exception to a requirement that
secureResponse be called. Added last sentence to require the use of the
principal established using the CallerPrincipalCallback where identity
propagation is configured.

[#50458687_pgfId-28653]##In link:jaspic.htm#50458643_18618[See
MessageInfo Properties]” removed the requirement that the service name
property be set in the MessageInfo Map.

[#50458687_pgfId-28685]##In link:jaspic.htm#50458643_60890[See
validateRequest Before Service Invocation]”, moved responsibility for
coordinating disparate uses of the CallerPrincipalCallback to the
context. Relaxed prohibition on returning SEND_CONTINUE from modules
initialized with an optional requestPolicy by allowing modules to
continue a multi-message authentication dialog as long as it was
initiated by the client. Added requirement that modules initialized with
an optional requestPolicy, containing a prescribed TargetPolicy, use the
CallerPrincipalCallback to established an unauthenticated caller
identity (if they return AuthStatus.SUCCESS without having satisfied the
TargetPolicy).

[#50458687_pgfId-28702]##in link:jaspic.htm#50458643_42720[See
secureResponse Processing]”, corrected the required return value when
responsePolicy == null to be AuthStatus.SEND_SUCCESS.

======= [#50458687_pgfId-28706]##Changes to JMS Profile Chapter

[#50458687_pgfId-28722]##Renamed chapter to
link:jaspic.htm#50458639_63745[See Future Profiles]”.

[#50458687_pgfId-28729]##Changed chapter to be strictly informative;
serving to capture suggestions for additional profiles.

[#50458687_pgfId-28733]##Added link:jaspic.htm#50458639_27895[See
RMI/IIOP Portable Interceptor Profile]”.

======= [#50458687_pgfId-28737]##Changes to link:jaspic.htm#50458686_32725[See ApPenDIX], Issues

[#50458687_pgfId-28807]##Added new issue,
link:jaspic.htm#50458686_63065[See HttpServletResponse Buffering and
Header Commit Semantics], with resolution which was factored into the
Servlet Profile (see link:jaspic.htm#50458641_10260[See Wrapping and
UnWrapping of Requests and Responses]).

======= [#50458687_pgfId-28926]##Changes to link:jaspic.htm#50458644_76559[See aPPENDIX], API

[#50458687_pgfId-28838]##In javax.security.auth.message.MessagePolicy,
changed name of method “isManadatory” to “isMandatory”.

[#50458687_pgfId-28929]##In
javax.security.auth.message.config.AuthConfig, changed the name of
method “getOperation” to “getAuthContextID” and changed the method
definition to indicate that it returns the authentication context
identifier corresponding to the request and response objects in the
messageInfo argument.

[#50458687_pgfId-28936]## In
javax.security.auth.message.config.AuthConfigFactory, changed
description of the typical sequence of calls to reflect change of
“getOperation” to “getAuthContextID”. Also changed description to
differentiate registration and self-registration. Added comment to
definition of the setFactory method to make it clear that listeners are
NOT notified of the change to the registered factory. Added a second
form of registerConfigProvider that takes an AuthConfigProvider object
(in lieu of an implementation class and properties Map) and that
performs an in-memory registration as apposed to a persisted
registration. Added support for null registrations. Added the
isPersistent method to the AuthConfigFactory.RegistrationContext
interface.

[#50458687_pgfId-28948]##In
javax.security.auth.message.config.AuthConfigProvider, changed
description of the typical sequence of calls to reflect change of
“getOperation” to “getAuthContextID”. Changed requirement for a “public
one argument constructor” to a “public two argument constructor”, where
the 2nd argument may be used to pass an AuthConfigFactory to the
AuthConfigProvider to allow the provider to self-register with the
factory.

[#50458687_pgfId-28957]##In
javax.security.auth.message.config.ClientAuthConfig, changed method and
parameter descriptions to reflect change of “getOperation” to
“getAuthContextID”.

[#50458687_pgfId-28966]##In
javax.security.auth.message.config.ServerAuthConfig, changed method and
parameter descriptions to reflect change of “getOperation” to
“getAuthContextID”.

[#50458687_pgfId-28971]##In
javax.security.auth.message.callback.PasswordValidationCallback, added a
Subject parameter to the constructor, and a getSubject method to make
the Subject available to the CallbackHandler. Also added a sentence
describing the expected use of the PasswordValidationCallback.

[#50458687_pgfId-28978]##In
javax.security.auth.message.callback.PrivateKeyCallback, added
PrivateKeyCallback.DigestRequest so that private keys may be requested
by certificate digest (or thumbprint). Added a sentence describing the
expected use of the PrivateKeyCallback.

[#50458687_pgfId-28976]##In
javax.security.auth.message.callback.SecretKeyCallback, improved
description of the expected use of the SecretKeyCallback.

======= [#50458687_pgfId-29277]##Changes in Proposed Final Draft 2

======= [#50458687_pgfId-29363]##Changes to License

[#50458687_pgfId-29364]##Revised date to May 5, 2007

======= [#50458687_pgfId-29307]##Changes to Servlet Container Profile

[#50458687_pgfId-29311]##In link:jaspic.htm#50458641_61189[See Message
Processing Requirements]”, added reference to new section,
link:jaspic.htm#50458641_17093[See Setting the Authentication Results on
the HttpServletRequest]” to describe requirements for setting the
authentication results.

[#50458687_pgfId-29317]##Added link:jaspic.htm#50458641_17093[See
Setting the Authentication Results on the HttpServletRequest]” to
capture requirements for setting the user principal, remote user, and
authentication type on the HttpServletRequest.

======= [#50458687_pgfId-29332]##Changes to SOAP Profile

[#50458687_pgfId-29338]##Corrected reference (chapter number) to
“Message Authentication” chapter appearing in the chapter introduction.

[#50458687_pgfId-29344]##Corrected ambiguity in
link:jaspic.htm#50458643_82273[See Message Requirements]”, to make it
clear that the profile does not require that MessageInfo contain only
non-null request and response objects.

======= [#50458687_pgfId-29278]##Changes to LoginModule Bridge Profile

[#50458687_pgfId-29374]##In link:jaspic.htm#50458684_13967[See
Processing Model]”, revised the method by which a ServerAuthModule
chooses the entry name passed to the LoginContext constructor. This
change allows a single module implementation to be configured to use
different entry names, and thus different login modules.

[#50458687_pgfId-29289]##In link:jaspic.htm#50458684_47308[See Standard
Callbacks]”, added requirement that GroupPrincipalCallback be supported
when LoginContext is constructed with Subject.

[#50458687_pgfId-29294]##In link:jaspic.htm#50458684_19985[See
Subjects]”, added requirement that ServerAuthModule employ
CallerPrincipalCallback using same value as that available to
LoginModule via NameCallback.

======= [#50458687_pgfId-29403]##Changes in Final Release

======= [#50458687_pgfId-29404]##Changes to title page

[#50458687_pgfId-29405]##Corrected JCP version to 2.6

======= [#50458687_pgfId-29456]##Changes to Preface

[#50458687_pgfId-29457]##Changed Status and Audience to reflect
transition to Final Release

[#50458687_pgfId-29472]##Changed “including J2EE containers” to
“including J2EE and Java EE containers”

======= [#50458687_pgfId-29483]##Changes to Overview

[#50458687_pgfId-29481]##Changed “exchanged by J2EE containers” to
“exchanged by J2EE and Java EE containers”

======= [#50458687_pgfId-29500]##Changes to References

[#50458687_pgfId-29498]##Changed “[J2SE Specification]” to “[Java SE 5
Specification]”

======= [#50458687_pgfId-29517]##Changes to Issues

[#50458687_pgfId-29515]##Changed “introduced in J2SE 5.0” to “introduced
in Java SE 5”

======= [#50458687_pgfId-29535]##Changes in Maintenance Release A

======= [#50458687_pgfId-29536]##Changes Effecting Entire Document

[#50458687_pgfId-29537]##Changed document Identifier to Maintenance
Release A. Version identifier remains unchanged at 1.0.

======= [#50458687_pgfId-29538]##Changes to link:jaspic.htm#50458678_66195[See Message Authentication]” Chapter

[#50458687_pgfId-29539]##Clarified definition of baseline compatibility
requirements to more explicitly convey that the API is intended to have
more general applicability than the specific contexts of its use defined
within the specification.

======= [#50458687_pgfId-29579]##Changes to link:jaspic.htm#50458644_76559[See aPPENDIX], API

[#50458687_pgfId-29596]##In
javax.security.auth.message.callback.CallerPrincipalCallback, modified
callback definition to allow for principal mapping to occur during the
handling of the callback by the CallbackHandler.

======= [#50458687_pgfId-29626]##Changes in Maintenance Release B

======= [#50458687_pgfId-29627]##Changes Effecting Entire Document

[#50458687_pgfId-29628]##Changed document Identifier to Maintenance
Release B, and Version identifier changed to 1.1.

[#50458687_pgfId-29694]##Updated JCP version to 2.7

[#50458687_pgfId-29682]##Updated the license

[#50458687_pgfId-29695]##Replaced Sun logo with Oracle logo

[#50458687_pgfId-29905]##Removed paragraph tags from PDF bookmarks

======= [#50458687_pgfId-29893]##Changes to Preface

[#50458687_pgfId-29894]##Changed Status to Maintenance Release B version
1.1

[#50458687_pgfId-29900]##Added Will Hopkins, Tim Quinn, Arjan Tijms, and
Yi Wang to the list of contributors

======= [#50458687_pgfId-29857]##Changes to Servlet Container Profile

[#50458687_pgfId-29881]##In link:jaspic.htm#50458641_60699[See
Application Context Identifier]”, described use of
ServletContext.getVirtualServerName in application context identifier.

[#50458687_pgfId-29885]##In link:jaspic.htm#50458641_61189[See Message
Processing Requirements]” and link:jaspic.htm#50458641_58550[See
ServerAuth Processing]”, clarified that validateRequest must be called
on every request for which the Servlet security model applies. Also
included footnote whose text describes that the security model does not
apply to forwards and includes.

[#50458687_pgfId-29716]## In link:jaspic.htm#50458641_63712[See
validateRequest Before Service Invocation]”, added clarification to
description of processing for SEND_CONTINUE, especially to allow for
forwards to a login page within an authentication module.

[#50458687_pgfId-29920]## In link:jaspic.htm#50458641_63712[See
validateRequest Before Service Invocation]”, clarified description of
processing for SEND_FAILURE to indicate that this return status is
returned when the validation failed and the client should not continue
or retry the request.

[#50458687_pgfId-29729]##Added footnote on header of
link:jaspic.htm#50458641_30319[See validateRequest After Service
Invocation]” to clarify that “after the service invocation” effectively
means after the call to secureResponse, so as to remain distinct from
the case where a call to authenticate from within the application
results in a call to validateRequest during the service invocation.

[#50458687_pgfId-29736]##Added link:jaspic.htm#50458641_76852[See
Forwards and Includes by Server Authentication Modules]”, to make it
clear that authentication modules must be able to use a
RequestDispatcher to forward to a login page (for example).

[#50458687_pgfId-29740]##In link:jaspic.htm#50458641_17093[See Setting
the Authentication Results on the HttpServletRequest]”, amended
description to make this section suitable for describing both the case
where validateRequest is called prior to a request, and the case where
validateRequest is (presumably) being called during the processing of
the request

[#50458687_pgfId-29758]##In link:jaspic.htm#50458641_17093[See Setting
the Authentication Results on the HttpServletRequest]”, added
link:jaspic.htm#50458641_86485[See Authentication Session Registration
(Callback) Property] to define the name of the session registration
callback property. Also added description of the processing of the
property.

[#50458687_pgfId-29765]##Added link:jaspic.htm#50458641_84376[See
Sub-profile for authenticate, login, and logout of HttpServletRequest]”
to define the use of the JASPIC SPI under
HttpServletRequest.authenticate, login, and logout.

======= [#50458687_pgfId-29637]##Changes to link:jaspic.htm#50458686_32725[See ApPenDIX], Issues

[#50458687_pgfId-29666]##Added link:jaspic.htm#50458686_45082[See
Reporting New Issues]Reporting New Issues” with inks to java.net project
and JIRA issue tracker.

======= [#50458687_pgfId-29793]##Changes to link:jaspic.htm#50458644_76559[See aPPENDIX], SPI

[#50458687_pgfId-29945]##In abstract
link:jaspic.htm#50458644_ClassHead[See AuthConfigFactory]” class, made
public the static permissions that are used to protect the static
getFactory and setFactory methods, and improved documentation so users
of the SPI can know which permissions are used. Also added and
additional public providerRegistrationSecurityPermission and required
that it be used by factory implementations to protect methods like
registerConfigProvider. Removed incorrect assertion from javadoc of
getFactory, both forms of registerConfigProvider, and refresh, that
checked AuthException could be thrown (by these methods). Changed the
javadoc of these four methods to indicate that the conditions for which
they were expected to throw an AuthException should instead be handled
within their existing declarations of throwing an (unchecked)
SecurityException. Regenerated (mif) javadocs (embedded in spec) from
html javadocs, which corrected definition for layer and appContext
parameters of link:jaspic.htm#50458644_MemberHead[See
getConfigProvider(java.lang.String layer, java.lang.String appContext,
RegistrationListener145 listener)].

[#50458687_pgfId-29952]##In link:jaspic.htm#50458644_ClassHead[See
AuthConfig]”, and link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider]” interfaces, removed incorrect assertion from
javadoc of refresh method that checked AuthException could be thrown,
and changed javadoc to indicate that the conditions for which refresh
was expected to throw an AuthException should instead be handled within
its existing declaration of throwing an (unchecked) SecurityException.

[#50458687_pgfId-29593]## 

======= [#50458644_pgfId-169457]##[#50458644_76559]## aPPENDIX

=== [#50458644_pgfId-169458]##API

== [#50458644_pgfId-222522]##Overview

[#50458644_pgfId-222564]## 

[#50458644_pgfId-222525]##Package Summary

== [#50458644_pgfId-222529]##Packages

[#50458644_pgfId-222534]##
_link:javax.security.auth.message.htm#javax.security.auth.message[javax.security.auth.message]link:jaspic.htm#50458644_PackageHead[See
javax.security.auth.message]_

[#50458644_pgfId-222539]##This package defines the core interfaces of
the JSR 196 message authentication SPI.

[#50458644_pgfId-222542]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback[javax.security.auth.message.callback]link:jaspic.htm#50458644_PackageHead[See
javax.security.auth.message.callback]_

[#50458644_pgfId-222547]##This package defines callback interfaces that
may be used by a pluggable message authentication module to interact
with the message processing runtime that invoked the module.

[#50458644_pgfId-222550]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config[javax.security.auth.message.config]link:jaspic.htm#50458644_PackageHead[See
javax.security.auth.message.config]_

[#50458644_pgfId-222555]##This package defines the interfaces
implemented by JSR 196 compatible configuration systems.

[#50458644_pgfId-222558]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module[javax.security.auth.message.module]link:jaspic.htm#50458644_PackageHead[See
javax.security.auth.message.module]_

[#50458644_pgfId-222563]##This package defines the interfaces
implemented by JSR 196 compatible authentication modules.

===== [#50458644_pgfId-224094]##[#50458644_marker-224093]##Package

=== [#50458644_pgfId-224097]##[#50458644_PackageHead]##[#50458644_javax.security.auth.message]##javax.security.auth.message

======= [#50458644_pgfId-224098]##Description

[#50458644_pgfId-224099]##This package defines the core interfaces of
the JSR 196 message authentication SPI. The SPI defines the interfaces
by which pluggable message authentication modules may be configured and
invoked by message processing runtimes.

[#50458644_pgfId-224189]## 

[#50458644_pgfId-224102]##Class Summary

== [#50458644_pgfId-224106]##Interfaces

[#50458644_pgfId-224114]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See
ClientAuth]_

[#50458644_pgfId-224116]##An implementation of this interface is used to
secure service request messages, and validate received service response
messages.

[#50458644_pgfId-224122]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo]_

[#50458644_pgfId-224124]##A message processing runtime uses this
interface to pass messages and message processing state to
authentication contexts for processing by authentication modules.

[#50458644_pgfId-224127]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy]_

[#50458644_pgfId-224132]##This interface is used to represent message
authentication policy.

[#50458644_pgfId-224138]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target]_

[#50458644_pgfId-224140]##This interface is used to represent and
perform message targeting.

[#50458644_pgfId-224146]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See
ServerAuth]_

[#50458644_pgfId-224148]##An implementation of this interface is used to
validate received service request messages, and to secure service
response messages.

== [#50458644_pgfId-224150]##Classes

[#50458644_pgfId-224158]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224160]##The AuthStatus class is used to represent
return values from Authentication modules and Authentication Contexts.

[#50458644_pgfId-224166]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy]_

[#50458644_pgfId-224168]##This class defines a message authentication
policy.

[#50458644_pgfId-224171]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy]_

[#50458644_pgfId-224176]##This class defines the message protection
policies for specific Targets.

== [#50458644_pgfId-224178]##Exceptions

[#50458644_pgfId-224186]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException]_

[#50458644_pgfId-224188]##A generic authentication exception.

===== [#50458644_pgfId-224190]##javax.security.auth.message

=== [#50458644_pgfId-224194]##[#50458644_marker-224191]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.AuthException]##AuthException

[#50458644_pgfId-224195]##  

[#50458644_pgfId-224196]## _java.lang.Object_

[#50458644_pgfId-224197]## |

[#50458644_pgfId-224198]## +-- _java.lang.Throwable_

[#50458644_pgfId-224199]## |

[#50458644_pgfId-224200]## +-- _java.lang.Exception_

[#50458644_pgfId-224201]## |

[#50458644_pgfId-224202]## +-- _java.security.GeneralSecurityException_

[#50458644_pgfId-224203]## |

[#50458644_pgfId-224204]## +--
_javax.security.auth.login.LoginException_

[#50458644_pgfId-224205]## |

[#50458644_pgfId-224206]## +--
_javax.security.auth.message.AuthException_

======= [#50458644_pgfId-224207]##All Implemented Interfaces:

======= [#50458644_pgfId-224208]## _java.io.Serializable_

======= [#50458644_pgfId-224209]##Declaration

======= [#50458644_pgfId-224210]##public class _AuthException_ extends _javax.security.auth.login.LoginException_

======= [#50458644_pgfId-224211]##Description

[#50458644_pgfId-224212]##A generic authentication exception.

[#50458644_pgfId-224238]## 

[#50458644_pgfId-224215]##Member Summary

== [#50458644_pgfId-224219]##Constructors

[#50458644_pgfId-224223]## 

[#50458644_pgfId-224229]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException.AuthException()[AuthException]link:jaspic.htm#50458644_MemberHead[See
AuthException()]()_

[#50458644_pgfId-224231]## 

[#50458644_pgfId-224237]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException.AuthException(java.lang.String)[AuthException]link:jaspic.htm#50458644_MemberHead[See
AuthException(java.lang.String msg)]( _java.lang.String_ msg)_

[#50458644_pgfId-224250]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-224241]##Inherited Member Summary
a|
======= [#50458644_pgfId-224243]##Methods inherited from class _Object_

|[#50458644_pgfId-224245]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ , _wait()_ ,
_wait(long)_ , _wait(long, int)_

a|
======= [#50458644_pgfId-224247]##Methods inherited from class _Throwable_

|[#50458644_pgfId-224249]## _addSuppressed(Throwable)_ ,
_fillInStackTrace()_ , _getCause()_ , _getLocalizedMessage()_ ,
_getMessage()_ , _getStackTrace()_ , _getSuppressed()_ ,
_initCause(Throwable)_ , _printStackTrace()_ ,
_printStackTrace(PrintStream)_ , _printStackTrace(PrintWriter)_ ,
_setStackTrace(StackTraceElement[])_ , _toString()_
|===

======= [#50458644_pgfId-224251]##Constructors

[#50458644_pgfId-224255]##[#50458644_marker-224252]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthException.AuthException()]##AuthException()

[#50458644_pgfId-224256]##public _AuthException_ ()

[#50458644_pgfId-224257]##Constructs an AuthException with no detail
message. A detail message is a String that describes this particular
exception.

[#50458644_pgfId-224261]##[#50458644_marker-224258]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthException.AuthException(java.lang.String)]##AuthException(
_java.lang.String_ msg)

[#50458644_pgfId-224262]##public _AuthException_ ( _java.lang.String_
msg)

[#50458644_pgfId-224263]##Constructs an AuthException with the specified
detail message. A detail message is a String that describes this
particular exception.

======= [#50458644_pgfId-224264]##Parameters:

[#50458644_pgfId-224265]## _msg_ - The detail message.

===== [#50458644_pgfId-224266]##javax.security.auth.message

=== [#50458644_pgfId-224270]##[#50458644_marker-224267]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.AuthStatus]##AuthStatus

[#50458644_pgfId-224271]##  

[#50458644_pgfId-224272]## _java.lang.Object_

[#50458644_pgfId-224273]## |

[#50458644_pgfId-224274]## +-- _javax.security.auth.message.AuthStatus_

======= [#50458644_pgfId-224275]##Declaration

======= [#50458644_pgfId-224276]##public class _AuthStatus_

======= [#50458644_pgfId-224277]##Description

[#50458644_pgfId-224278]##The AuthStatus class is used to represent
return values from Authentication modules and Authentication Contexts.
An AuthStatus value is returned when the module processing has
established a corresponding request or response message within the
message parameters exchanged with the runtime.

[#50458644_pgfId-224360]## 

[#50458644_pgfId-224281]##Member Summary

== [#50458644_pgfId-224285]##Fields

[#50458644_pgfId-224293]##static
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224299]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.FAILURE[FAILURE]link:jaspic.htm#50458644_MemberHead[See
FAILURE]_

[#50458644_pgfId-224305]##static
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224311]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.SEND_CONTINUE[SEND_CONTINUE]link:jaspic.htm#50458644_MemberHead[See
SEND_CONTINUE]_

[#50458644_pgfId-224317]##static
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224323]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.SEND_FAILURE[SEND_FAILURE]link:jaspic.htm#50458644_MemberHead[See
SEND_FAILURE]_

[#50458644_pgfId-224329]##static
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224335]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.SEND_SUCCESS[SEND_SUCCESS]link:jaspic.htm#50458644_MemberHead[See
SEND_SUCCESS]_

[#50458644_pgfId-224341]##static
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224347]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.SUCCESS[SUCCESS]link:jaspic.htm#50458644_MemberHead[See
SUCCESS]_

== [#50458644_pgfId-224349]##Methods

[#50458644_pgfId-224353]## _java.lang.String_

[#50458644_pgfId-224359]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus.toString()[toString]link:jaspic.htm#50458644_MemberHead[See
toString()]()_

[#50458644_pgfId-224368]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-224363]##Inherited Member Summary
a|
======= [#50458644_pgfId-224365]##Methods inherited from class _Object_

|[#50458644_pgfId-224367]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ , _wait()_ ,
_wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-224369]##Fields

[#50458644_pgfId-224373]##[#50458644_marker-224370]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.FAILURE]##FAILURE

[#50458644_pgfId-224378]##public static final
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _FAILURE__

[#50458644_pgfId-224379]##Indicates that the message processing by the
authentication module was NOT successful, and that the module replaced
the application message with an error message.

[#50458644_pgfId-224383]##[#50458644_marker-224380]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.SEND_CONTINUE]##SEND_CONTINUE

[#50458644_pgfId-224388]##public static final
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _SEND_CONTINUE__

[#50458644_pgfId-224389]##Indicates the message processing by the
authentication module is NOT complete, that the module replaced the
application message with a security message, and that the runtime is to
proceed by sending the security message.

[#50458644_pgfId-224393]##[#50458644_marker-224390]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.SEND_FAILURE]##SEND_FAILURE

[#50458644_pgfId-224398]##public static final
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _SEND_FAILURE__

[#50458644_pgfId-224399]##Indicates that the message processing by the
authentication module was NOT successful, that the module replaced the
application message with an error message, and that the runtime is to
proceed by sending the error message.

[#50458644_pgfId-224403]##[#50458644_marker-224400]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.SEND_SUCCESS]##SEND_SUCCESS

[#50458644_pgfId-224408]##public static final
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _SEND_SUCCESS__

[#50458644_pgfId-224409]##Indicates that the message processing by the
authentication module was successful and that the runtime is to proceed
by sending a message returned by the authentication module.

[#50458644_pgfId-224413]##[#50458644_marker-224410]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.SUCCESS]##SUCCESS

[#50458644_pgfId-224418]##public static final
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _SUCCESS__

[#50458644_pgfId-224419]##Indicates that the message processing by the
authentication module was successful and that the runtime is to proceed
with its normal processing of the resulting message.

======= [#50458644_pgfId-224420]##Methods

[#50458644_pgfId-224424]##[#50458644_marker-224421]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.AuthStatus.toString()]##toString()

[#50458644_pgfId-224425]##public _java.lang.String_ _toString_ ()

======= [#50458644_pgfId-224426]##Overrides:

======= [#50458644_pgfId-224427]## _toString_ in class _Object_

===== [#50458644_pgfId-224428]##javax.security.auth.message

=== [#50458644_pgfId-224432]##[#50458644_marker-224429]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.ClientAuth]##ClientAuth

======= [#50458644_pgfId-224433]##All Known Subinterfaces:

======= [#50458644_pgfId-224442]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule[ClientAuthModule]link:jaspic.htm#50458644_ClassHead[See ClientAuthModule]__

======= [#50458644_pgfId-224443]##Declaration

======= [#50458644_pgfId-224444]##public interface _ClientAuth_

======= [#50458644_pgfId-224445]##Description

[#50458644_pgfId-224446]##An implementation of this interface is used to
secure service request messages, and validate received service response
messages.

======= [#50458644_pgfId-224447]##See Also:

======= [#50458644_pgfId-224452]## _link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See MessageInfo], _javax.security.auth.Subject__

[#50458644_pgfId-224506]## 

[#50458644_pgfId-224455]##Member Summary

== [#50458644_pgfId-224459]##Methods

[#50458644_pgfId-224463]## void

[#50458644_pgfId-224473]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject)__

[#50458644_pgfId-224479]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224489]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.secureRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureRequest]link:jaspic.htm#50458644_MemberHead[See
secureRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject)__

[#50458644_pgfId-224495]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-224505]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.validateResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateResponse]link:jaspic.htm#50458644_MemberHead[See
validateResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject)__

======= [#50458644_pgfId-224507]##Methods

[#50458644_pgfId-224515]##[#50458644_marker-224508]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ClientAuth.cleanSubject(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)]##cleanSubject(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject)_

[#50458644_pgfId-224520]##public void _cleanSubject_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject) +
throws AuthException_

[#50458644_pgfId-224521]##Remove implementation specific principals and
credentials from the subject.

======= [#50458644_pgfId-224522]##Parameters:

[#50458644_pgfId-224523]## _messageInfo_ - A contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-224524]## _subject_ - The Subject instance from which
the Principals and credentials are to be removed.

======= [#50458644_pgfId-224525]##Throws:

[#50458644_pgfId-224530]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If an error occurs during the Subject processing._

[#50458644_pgfId-224538]##[#50458644_marker-224531]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ClientAuth.secureRequest(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)]##secureRequest(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject)_

[#50458644_pgfId-224547]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _secureRequest_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject) +
throws AuthException__

[#50458644_pgfId-224548]##Secure a service request message before
sending it to the service.

[#50458644_pgfId-224549]##This method is called to transform the request
message acquired by calling getRequestMessage (on messageInfo) into the
mechanism-specific form to be sent by the runtime.

[#50458644_pgfId-224550]##This method conveys the outcome of its message
processing either by returning an AuthStatus value or by throwing an
AuthException.

======= [#50458644_pgfId-224551]##Parameters:

[#50458644_pgfId-224552]## _messageInfo_ - A contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-224553]## _clientSubject_ - A Subject that represents
the source of the service request, or null. It may be used by the method
implementation as the source of Principals or credentials to be used to
secure the request. If the Subject is not null, the method
implementation may add additional Principals or credentials (pertaining
to the source of the service request) to the Subject.

======= [#50458644_pgfId-224554]##Returns:

[#50458644_pgfId-224555]##An AuthStatus object representing the
completion status of the processing performed by the method. The
AuthStatus values that may be returned by this method are defined as
follows:

[#50458644_pgfId-224556]##AuthStatus.SUCCESS when the application
request message was successfully secured. The secured request message
may be obtained by calling getRequestMessage on messageInfo.

[#50458644_pgfId-224557]##AuthStatus.SEND_CONTINUE to indicate that the
application request message (within messageInfo) was replaced with a
security message that should elicit a security-specific response from
the peer security system. This status value also indicates that the
application message has not yet been secured. This status value serves
to inform the calling runtime that (to successfully complete the message
exchange) it will need to be capable of continuing the message dialog by
conducting at least one additional request/response exchange after
having received the security-specific response elicited by sending the
security message. When this status value is returned, the corresponding
invocation of _validateResponse_ must be able to obtain the original
application request message.

[#50458644_pgfId-224558]##AuthStatus.FAILURE to indicate that a failure
occured while securing the request message, and that an appropriate
failure response message is available by calling getResponseMessage on
messageInfo.

======= [#50458644_pgfId-224559]##Throws:

[#50458644_pgfId-224564]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - When the message processing failed without establishing
a failure response message (in messageInfo)._

[#50458644_pgfId-224572]##[#50458644_marker-224565]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ClientAuth.validateResponse(javax.security.auth.message.MessageInfo, javax.security.auth.Subject, javax.security.auth.Subject)]##validateResponse(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject)_

[#50458644_pgfId-224581]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _validateResponse_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject) +
throws AuthException__

[#50458644_pgfId-224582]##Validate a received service response.

[#50458644_pgfId-224583]##This method is called to transform the
mechanism-specific response message acquired by calling
getResponseMessage (on messageInfo) into the validated application
message to be returned to the message processing runtime. If the
response message is a (mechanism-specific) meta-message, the method
implementation must attempt to transform the meta-message into the next
mechanism-specific request message to be sent by the runtime.

[#50458644_pgfId-224584]##This method conveys the outcome of its message
processing either by returning an AuthStatus value or by throwing an
AuthException.

======= [#50458644_pgfId-224585]##Parameters:

[#50458644_pgfId-224586]## _messageInfo_ - A contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-224587]## _clientSubject_ - A Subject that represents
the recipient of the service response, or null. It may be used by the
method implementation as the source of Principals or credentials to be
used to validate the response. If the Subject is not null, the method
implementation may add additional Principals or credentials (pertaining
to the recipient of the service request) to the Subject.

[#50458644_pgfId-224588]## _serviceSubject_ - A Subject that represents
the source of the service response, or null. If the Subject is not null,
the method implementation may add additional Principals or credentials
(pertaining to the source of the service response) to the Subject.

======= [#50458644_pgfId-224589]##Returns:

[#50458644_pgfId-224590]##An AuthStatus object representing the
completion status of the processing performed by the method. The
AuthStatus values that may be returned by this method are defined as
follows:

[#50458644_pgfId-224591]##AuthStatus.SUCCESS when the application
response message was successfully validated. The validated message is
available by calling getResponseMessage on messageInfo.

[#50458644_pgfId-224592]##AuthStatus.SEND_CONTINUE to indicate that
response validation is incomplete, and that a continuation request was
returned as the request message within messageInfo. This status value
serves to inform the calling runtime that (to successfully complete the
message exchange) it will need to be capable of continuing the message
dialog by conducting at least one additional request/response exchange.

[#50458644_pgfId-224593]##AuthStatus.FAILURE to indicate that validation
of the response failed, and that a failure response message has been
established in messageInfo.

======= [#50458644_pgfId-224594]##Throws:

[#50458644_pgfId-224599]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - When the message processing failed without establishing
a failure response message (in messageInfo)._

===== [#50458644_pgfId-224600]##javax.security.auth.message

=== [#50458644_pgfId-224604]##[#50458644_marker-224601]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.MessageInfo]##MessageInfo

======= [#50458644_pgfId-224605]##Declaration

======= [#50458644_pgfId-224606]##public interface _MessageInfo_

======= [#50458644_pgfId-224607]##Description

[#50458644_pgfId-224608]##A message processing runtime uses this
interface to pass messages and message processing state to
authentication contexts for processing by authentication modules.

[#50458644_pgfId-224609]##This interface encapsulates a request message
object and a response message object for a message exchange. This
interface may also be used to associate additional context in the form
of key/value pairs, with the encapsulated messages.

[#50458644_pgfId-224610]##Every implementation of this interface should
provide a zero argument constructor, and a constructor which takes a
single Map argument. Additional constructors may also be provided.

======= [#50458644_pgfId-224611]##See Also:

======= [#50458644_pgfId-224612]## _java.util.Map_ < _K_ , _V_ >

[#50458644_pgfId-224662]## 

[#50458644_pgfId-224615]##Member Summary

== [#50458644_pgfId-224619]##Methods

[#50458644_pgfId-224623]## _java.util.Map_

[#50458644_pgfId-224629]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo.getMap()[getMap]link:jaspic.htm#50458644_MemberHead[See
getMap()]()_

[#50458644_pgfId-224631]## _java.lang.Object_

[#50458644_pgfId-224637]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo.getRequestMessage()[getRequestMessage]link:jaspic.htm#50458644_MemberHead[See
getRequestMessage()]()_

[#50458644_pgfId-224639]## _java.lang.Object_

[#50458644_pgfId-224645]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo.getResponseMessage()[getResponseMessage]link:jaspic.htm#50458644_MemberHead[See
getResponseMessage()]()_

[#50458644_pgfId-224647]## void

[#50458644_pgfId-224653]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo.setRequestMessage(java.lang.Object)[setRequestMessage]link:jaspic.htm#50458644_MemberHead[See
setRequestMessage(java.lang.Object request)]( _java.lang.Object_
request)_

[#50458644_pgfId-224655]## void

[#50458644_pgfId-224661]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo.setResponseMessage(java.lang.Object)[setResponseMessage]link:jaspic.htm#50458644_MemberHead[See
setResponseMessage(java.lang.Object response)]( _java.lang.Object_
response)_

======= [#50458644_pgfId-224663]##Methods

[#50458644_pgfId-224667]##[#50458644_marker-224664]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessageInfo.getMap()]##getMap()

[#50458644_pgfId-224668]##public _java.util.Map_ _getMap_ ()

[#50458644_pgfId-224669]##Get (a reference to) the Map object of this
MessageInfo. Operations performed on the acquired Map must effect the
Map within the MessageInfo.

======= [#50458644_pgfId-224670]##Returns:

[#50458644_pgfId-224671]##the Map object of this MessageInfo. This
method never returns null. If a Map has not been associated with the
MessageInfo, this method instantiates a Map, associates it with this
MessageInfo, and then returns it.

[#50458644_pgfId-224675]##[#50458644_marker-224672]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessageInfo.getRequestMessage()]##getRequestMessage()

[#50458644_pgfId-224676]##public _java.lang.Object_ _getRequestMessage_
()

[#50458644_pgfId-224677]##Get the request message object from this
MessageInfo.

======= [#50458644_pgfId-224678]##Returns:

[#50458644_pgfId-224679]##An object representing the request message, or
null if no request message is set within the MessageInfo.

[#50458644_pgfId-224683]##[#50458644_marker-224680]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessageInfo.getResponseMessage()]##getResponseMessage()

[#50458644_pgfId-224684]##public _java.lang.Object_ _getResponseMessage_
()

[#50458644_pgfId-224685]##Get the response message object from this
MessageInfo.

======= [#50458644_pgfId-224686]##Returns:

[#50458644_pgfId-224687]##an object representing the response message,
or null if no response message is set within the MessageInfo.

[#50458644_pgfId-224691]##[#50458644_marker-224688]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessageInfo.setRequestMessage(java.lang.Object)]##setRequestMessage(
_java.lang.Object_ request)

[#50458644_pgfId-224692]##public void _setRequestMessage_ (
_java.lang.Object_ request)

[#50458644_pgfId-224693]##Set the request message object in this
MessageInfo.

======= [#50458644_pgfId-224694]##Parameters:

[#50458644_pgfId-224695]## _request_ - An object representing the
request message.

[#50458644_pgfId-224699]##[#50458644_marker-224696]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessageInfo.setResponseMessage(java.lang.Object)]##setResponseMessage(
_java.lang.Object_ response)

[#50458644_pgfId-224700]##public void _setResponseMessage_ (
_java.lang.Object_ response)

[#50458644_pgfId-224701]##Set the response message object in this
MessageInfo.

======= [#50458644_pgfId-224702]##Parameters:

[#50458644_pgfId-224703]## _response_ - An object representing the
response message.

===== [#50458644_pgfId-224704]##javax.security.auth.message

=== [#50458644_pgfId-224708]##[#50458644_marker-224705]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.MessagePolicy]##MessagePolicy

[#50458644_pgfId-224709]##  

[#50458644_pgfId-224710]## _java.lang.Object_

[#50458644_pgfId-224711]## |

[#50458644_pgfId-224712]## +--
_javax.security.auth.message.MessagePolicy_

======= [#50458644_pgfId-224713]##Declaration

======= [#50458644_pgfId-224714]##public class _MessagePolicy_

======= [#50458644_pgfId-224715]##Description

[#50458644_pgfId-224716]##This class defines a message authentication
policy.

[#50458644_pgfId-224717]##A ClientAuthContext uses this class to
communicate (at module initialization time) request and response message
protection policies to its ClientAuthModule objects. A ServerAuthContext
uses this class to communicate request and response message protection
policies to its ServerAuthModule objects.

======= [#50458644_pgfId-224718]##See Also:

======= [#50458644_pgfId-224731]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule[ClientAuthModule]link:jaspic.htm#50458644_ClassHead[See ClientAuthModule], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule[ServerAuthModule]link:jaspic.htm#50458644_ClassHead[See ServerAuthModule]____

[#50458644_pgfId-224809]## 

[#50458644_pgfId-224738]##Member Summary

== [#50458644_pgfId-224742]##Nested Classes

[#50458644_pgfId-224746]##static

[#50458644_pgfId-224752]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy]_

[#50458644_pgfId-224754]##static

[#50458644_pgfId-224760]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target]_

[#50458644_pgfId-224762]##static class

[#50458644_pgfId-224768]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy]_

== [#50458644_pgfId-224770]##Constructors

[#50458644_pgfId-224774]## 

[#50458644_pgfId-224784]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.MessagePolicy(javax.security.auth.message.MessagePolicy.TargetPolicy\%5B\%5D,%20boolean)[MessagePolicy]link:jaspic.htm#50458644_MemberHead[See
MessagePolicy(MessagePolicy.TargetPolicy90[] targetPolicies, boolean
mandatory)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy][] targetPolicies, boolean mandatory)__

== [#50458644_pgfId-224786]##Methods

[#50458644_pgfId-224790]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy][]_

[#50458644_pgfId-224800]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.getTargetPolicies()[getTargetPolicies]link:jaspic.htm#50458644_MemberHead[See
getTargetPolicies()]()_

[#50458644_pgfId-224802]## boolean

[#50458644_pgfId-224808]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.isMandatory()[isMandatory]link:jaspic.htm#50458644_MemberHead[See
isMandatory()]()_

[#50458644_pgfId-224817]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-224812]##Inherited Member Summary
a|
======= [#50458644_pgfId-224814]##Methods inherited from class _Object_

|[#50458644_pgfId-224816]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-224818]##Constructors

[#50458644_pgfId-224826]##[#50458644_marker-224819]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.MessagePolicy(javax.security.auth.message.MessagePolicy.TargetPolicy\[\], boolean)]##MessagePolicy(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy][] targetPolicies, boolean mandatory)_

[#50458644_pgfId-224831]##public _MessagePolicy_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy][] targetPolicies, boolean mandatory)_

[#50458644_pgfId-224832]##Create a MessagePolicy instance with an array
of target policies.

======= [#50458644_pgfId-224833]##Parameters:

[#50458644_pgfId-224834]## _targetPolicies_ - an array of target
policies.

[#50458644_pgfId-224835]## _mandatory_ - A boolean value indicating
whether the MessagePolicy is mandatory or optional.

======= [#50458644_pgfId-224836]##Throws:

[#50458644_pgfId-224837]## _java.lang.IllegalArgumentException_ - if the
specified targetPolicies is null.

======= [#50458644_pgfId-224838]##Methods

[#50458644_pgfId-224842]##[#50458644_marker-224839]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.getTargetPolicies()]##getTargetPolicies()

[#50458644_pgfId-224847]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.TargetPolicy][] _getTargetPolicies_ ()_

[#50458644_pgfId-224848]##Get the target policies that comprise the
authentication policy.

======= [#50458644_pgfId-224849]##Returns:

[#50458644_pgfId-224850]##An array of target authentication policies,
where each element describes an authentication policy and the parts of
the message to which the authentication policy applies. This method
returns null to indicate that no security operations should be performed
on the messages to which the policy applies. This method never returns a
zero-length array.

[#50458644_pgfId-224851]##When this method returns an array of target
policies, the order of elements in the array represents the order that
the corresponding message transformations or validations described by
the target policies are to be performed by the authentication module.

[#50458644_pgfId-224855]##[#50458644_marker-224852]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.isMandatory()]##isMandatory()

[#50458644_pgfId-224856]##public boolean _isMandatory_ ()

[#50458644_pgfId-224857]##Get the MessagePolicy modifier.

======= [#50458644_pgfId-224858]##Returns:

[#50458644_pgfId-224859]##A boolean indicating whether the MessagePolicy
is optional(false) or required(true).

===== [#50458644_pgfId-224860]##javax.security.auth.message

=== [#50458644_pgfId-224864]##[#50458644_marker-224861]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.MessagePolicy.ProtectionPolicy]##MessagePolicy.ProtectionPolicy

======= [#50458644_pgfId-224865]##Enclosing Class:

======= [#50458644_pgfId-224870]## _link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See MessagePolicy]_

======= [#50458644_pgfId-224871]##Declaration

======= [#50458644_pgfId-224872]##public static interface _MessagePolicy.ProtectionPolicy_

======= [#50458644_pgfId-224873]##Description

[#50458644_pgfId-224874]##This interface is used to represent message
authentication policy.

[#50458644_pgfId-224875]##The internal state of a ProtectionPolicy
object defines the message authentication requirements to be applied to
the associated Target.

[#50458644_pgfId-224921]## 

[#50458644_pgfId-224878]##Member Summary

== [#50458644_pgfId-224882]##Fields

[#50458644_pgfId-224886]##static _java.lang.String_

[#50458644_pgfId-224892]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_CONTENT[AUTHENTICATE_CONTENT]link:jaspic.htm#50458644_MemberHead[See
AUTHENTICATE_CONTENT]_

[#50458644_pgfId-224894]##static _java.lang.String_

[#50458644_pgfId-224900]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_RECIPIENT[AUTHENTICATE_RECIPIENT]link:jaspic.htm#50458644_MemberHead[See
AUTHENTICATE_RECIPIENT]_

[#50458644_pgfId-224902]##static _java.lang.String_

[#50458644_pgfId-224908]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_SENDER[AUTHENTICATE_SENDER]link:jaspic.htm#50458644_MemberHead[See
AUTHENTICATE_SENDER]_

== [#50458644_pgfId-224910]##Methods

[#50458644_pgfId-224914]## _java.lang.String_

[#50458644_pgfId-224920]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy.getID()[getID]link:jaspic.htm#50458644_MemberHead[See
getID()]()_

======= [#50458644_pgfId-224922]##Fields

[#50458644_pgfId-224926]##[#50458644_marker-224923]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_CONTENT]##AUTHENTICATE_CONTENT

[#50458644_pgfId-224927]##public static final _java.lang.String_
_AUTHENTICATE_CONTENT_

[#50458644_pgfId-224928]##The identifer for a ProtectionPolicy that
indicates that the origin of data within the message is to be
authenticated (that is, the message is to be protected such that its
recipients can establish who defined the message content).

[#50458644_pgfId-224932]##[#50458644_marker-224929]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_RECIPIENT]##AUTHENTICATE_RECIPIENT

[#50458644_pgfId-224933]##public static final _java.lang.String_
_AUTHENTICATE_RECIPIENT_

[#50458644_pgfId-224934]##The identifer for a ProtectionPolicy that
indicates that the message recipient is to be authenticated.

[#50458644_pgfId-224938]##[#50458644_marker-224935]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.ProtectionPolicy.AUTHENTICATE_SENDER]##AUTHENTICATE_SENDER

[#50458644_pgfId-224939]##public static final _java.lang.String_
_AUTHENTICATE_SENDER_

[#50458644_pgfId-224940]##The identifer for a ProtectionPolicy that
indicates that the sending entity is to be authenticated.

======= [#50458644_pgfId-224941]##Methods

[#50458644_pgfId-224945]##[#50458644_marker-224942]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.ProtectionPolicy.getID()]##getID()

[#50458644_pgfId-224946]##public _java.lang.String_ _getID_ ()

[#50458644_pgfId-224947]##Get the ProtectionPolicy identifier. An
identifier may represent a conceptual protection policy (as is the case
with the static identifiers defined within this interface) or it may
identify a procedural policy expression or plan that may be more
difficult to categorize in terms of a conceptual identifier.

======= [#50458644_pgfId-224948]##Returns:

[#50458644_pgfId-224949]##A String containing a policy identifier. This
interface defines some policy identifier constants. Configuration
systems may define and employ other policy identifiers values.

===== [#50458644_pgfId-224950]##javax.security.auth.message

=== [#50458644_pgfId-224954]##[#50458644_marker-224951]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.MessagePolicy.Target]##MessagePolicy.Target

======= [#50458644_pgfId-224955]##Enclosing Class:

======= [#50458644_pgfId-224960]## _link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See MessagePolicy]_

======= [#50458644_pgfId-224961]##Declaration

======= [#50458644_pgfId-224962]##public static interface _MessagePolicy.Target_

======= [#50458644_pgfId-224963]##Description

[#50458644_pgfId-224964]##This interface is used to represent and
perform message targeting. Targets are used by message authentication
modules to operate on the corresponding content within messages.

[#50458644_pgfId-224965]##The internal state of a Target indicates
whether it applies to the request or response message of a MessageInfo
and to which components it applies within the identified message.

[#50458644_pgfId-225011]## 

[#50458644_pgfId-224968]##Member Summary

== [#50458644_pgfId-224972]##Methods

[#50458644_pgfId-224976]## _java.lang.Object_

[#50458644_pgfId-224986]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target.get(javax.security.auth.message.MessageInfo)[get]link:jaspic.htm#50458644_MemberHead[See
get(MessageInfo82 messageInfo)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)__

[#50458644_pgfId-224988]## void

[#50458644_pgfId-224998]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target.put(javax.security.auth.message.MessageInfo,%20java.lang.Object)[put]link:jaspic.htm#50458644_MemberHead[See
put(MessageInfo82 messageInfo, java.lang.Object data)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _java.lang.Object_ data)__

[#50458644_pgfId-225000]## void

[#50458644_pgfId-225010]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target.remove(javax.security.auth.message.MessageInfo)[remove]link:jaspic.htm#50458644_MemberHead[See
remove(MessageInfo82 messageInfo)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)__

======= [#50458644_pgfId-225012]##Methods

[#50458644_pgfId-225020]##[#50458644_marker-225013]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.Target.get(javax.security.auth.message.MessageInfo)]##get(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-225025]##public _java.lang.Object_ _get_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-225026]##Get the Object identified by the Target from
the MessageInfo.

======= [#50458644_pgfId-225027]##Parameters:

[#50458644_pgfId-225028]## _messageInfo_ - The MessageInfo containing
the request or response message from which the target is to be obtained.

======= [#50458644_pgfId-225029]##Returns:

[#50458644_pgfId-225030]##An Object representing the target, or null
when the target could not be found in the MessageInfo.

[#50458644_pgfId-225038]##[#50458644_marker-225031]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.Target.put(javax.security.auth.message.MessageInfo, java.lang.Object)]##put(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _java.lang.Object_ data)_

[#50458644_pgfId-225043]##public void _put_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _java.lang.Object_ data)_

[#50458644_pgfId-225044]##Put the Object into the MessageInfo at the
location identified by the target.

======= [#50458644_pgfId-225045]##Parameters:

[#50458644_pgfId-225046]## _messageInfo_ - The MessageInfo containing
the request or response message into which the object is to be put.

[#50458644_pgfId-225054]##[#50458644_marker-225047]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.Target.remove(javax.security.auth.message.MessageInfo)]##remove(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-225059]##public void _remove_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-225060]##Remove the Object identified by the Target
from the MessageInfo.

======= [#50458644_pgfId-225061]##Parameters:

[#50458644_pgfId-225062]## _messageInfo_ - The MessageInfo containing
the request or response message from which the target is to be removed.

===== [#50458644_pgfId-225063]##javax.security.auth.message

=== [#50458644_pgfId-225067]##[#50458644_marker-225064]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.MessagePolicy.TargetPolicy]##MessagePolicy.TargetPolicy

[#50458644_pgfId-225068]##  

[#50458644_pgfId-225069]## _java.lang.Object_

[#50458644_pgfId-225070]## |

[#50458644_pgfId-225071]## +--
_javax.security.auth.message.MessagePolicy.TargetPolicy_

======= [#50458644_pgfId-225072]##Enclosing Class:

======= [#50458644_pgfId-225077]## _link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See MessagePolicy]_

======= [#50458644_pgfId-225078]##Declaration

======= [#50458644_pgfId-225079]##public static class _MessagePolicy.TargetPolicy_

======= [#50458644_pgfId-225080]##Description

[#50458644_pgfId-225081]##This class defines the message protection
policies for specific Targets.

[#50458644_pgfId-225082]##This class is used to associate a message
protection policy with targets within a message. Message targets are
represented using an implementation of the _Target_ interface matched to
the message types in MessageInfo. The message protection policy is
identified by an implementation of the _ProtectionPolicy_ interface.

======= [#50458644_pgfId-225083]##See Also:

======= [#50458644_pgfId-225092]## _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule[ClientAuthModule]link:jaspic.htm#50458644_ClassHead[See ClientAuthModule], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule[ServerAuthModule]link:jaspic.htm#50458644_ClassHead[See ServerAuthModule]__

[#50458644_pgfId-225146]## 

[#50458644_pgfId-225095]##Member Summary

== [#50458644_pgfId-225099]##Constructors

[#50458644_pgfId-225103]## 

[#50458644_pgfId-225113]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy.MessagePolicy.TargetPolicy(javax.security.auth.message.MessagePolicy.Target\%5B\%5D,%20javax.security.auth.message.MessagePolicy.ProtectionPolicy)[MessagePolicy.TargetPolicy]link:jaspic.htm#50458644_MemberHead[See
MessagePolicy.TargetPolicy(MessagePolicy.Target88[] targets,
MessagePolicy.ProtectionPolicy86 protectionPolicy)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target][] targets,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy] protectionPolicy)___

== [#50458644_pgfId-225119]##Methods

[#50458644_pgfId-225123]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy]_

[#50458644_pgfId-225133]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy.getProtectionPolicy()[getProtectionPolicy]link:jaspic.htm#50458644_MemberHead[See
getProtectionPolicy()]()_

[#50458644_pgfId-225135]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target][]_

[#50458644_pgfId-225145]##
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.TargetPolicy.getTargets()[getTargets]link:jaspic.htm#50458644_MemberHead[See
getTargets()]()_

[#50458644_pgfId-225154]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-225149]##Inherited Member Summary
a|
======= [#50458644_pgfId-225151]##Methods inherited from class _Object_

|[#50458644_pgfId-225153]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-225155]##Constructors

[#50458644_pgfId-225163]##[#50458644_marker-225156]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.TargetPolicy.MessagePolicy.TargetPolicy(javax.security.auth.message.MessagePolicy.Target\[\], javax.security.auth.message.MessagePolicy.ProtectionPolicy)]##MessagePolicy.TargetPolicy(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target][] targets,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy] protectionPolicy)__

[#50458644_pgfId-225172]##public _MessagePolicy.TargetPolicy_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target][] targets,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy] protectionPolicy)__

[#50458644_pgfId-225177]##Create a TargetPolicy instance with an array
of Targets and with a ProtectionPolicy.

======= [#50458644_pgfId-225178]##Parameters:

[#50458644_pgfId-225179]## _targets_ - An array of Targets. This
argument may be null.

[#50458644_pgfId-225180]## _protectionPolicy_ - The object that
describes the message authentication policy that applies to the targets.

======= [#50458644_pgfId-225181]##Throws:

[#50458644_pgfId-225182]## _java.lang.IllegalArgumentException_ - if the
specified targets or protectionPolicy is null.

======= [#50458644_pgfId-225183]##Methods

[#50458644_pgfId-225187]##[#50458644_marker-225184]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.TargetPolicy.getProtectionPolicy()]##getProtectionPolicy()

[#50458644_pgfId-225192]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.ProtectionPolicy[MessagePolicy.ProtectionPolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.ProtectionPolicy] _getProtectionPolicy_ ()_

[#50458644_pgfId-225193]##Get the ProtectionPolicy that applies to the
targets.

======= [#50458644_pgfId-225194]##Returns:

[#50458644_pgfId-225195]##A ProtectionPolicy object that identifies the
message authentication requirements that apply to the targets.

[#50458644_pgfId-225199]##[#50458644_marker-225196]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.MessagePolicy.TargetPolicy.getTargets()]##getTargets()

[#50458644_pgfId-225204]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy.Target[MessagePolicy.Target]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy.Target][] _getTargets_ ()_

[#50458644_pgfId-225205]##Get the array of layer-specific target
descriptors that identify the one or more message parts to which the
specified message protection policy applies.

======= [#50458644_pgfId-225206]##Returns:

[#50458644_pgfId-225207]##An array of _Target_ that identify targets
within a message. This method returns null when the specified policy
applies to the whole message (excluding any metadata added to the
message to satisfy the policy). This method never returns a zero-length
array.

===== [#50458644_pgfId-225208]##javax.security.auth.message

=== [#50458644_pgfId-225212]##[#50458644_marker-225209]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.ServerAuth]##ServerAuth

======= [#50458644_pgfId-225213]##All Known Subinterfaces:

======= [#50458644_pgfId-225222]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule[ServerAuthModule]link:jaspic.htm#50458644_ClassHead[See ServerAuthModule]__

======= [#50458644_pgfId-225223]##Declaration

======= [#50458644_pgfId-225224]##public interface _ServerAuth_

======= [#50458644_pgfId-225225]##Description

[#50458644_pgfId-225226]##An implementation of this interface is used to
validate received service request messages, and to secure service
response messages.

======= [#50458644_pgfId-225227]##See Also:

======= [#50458644_pgfId-225232]## _link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See MessageInfo], _javax.security.auth.Subject__

[#50458644_pgfId-225286]## 

[#50458644_pgfId-225235]##Member Summary

== [#50458644_pgfId-225239]##Methods

[#50458644_pgfId-225243]## void

[#50458644_pgfId-225253]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject)__

[#50458644_pgfId-225259]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-225269]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.secureResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureResponse]link:jaspic.htm#50458644_MemberHead[See
secureResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
serviceSubject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_
serviceSubject)__

[#50458644_pgfId-225275]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus]_

[#50458644_pgfId-225285]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.validateRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateRequest]link:jaspic.htm#50458644_MemberHead[See
validateRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject)__

======= [#50458644_pgfId-225287]##Methods

[#50458644_pgfId-225295]##[#50458644_marker-225288]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ServerAuth.cleanSubject(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)]##cleanSubject(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject)_

[#50458644_pgfId-225300]##public void _cleanSubject_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ subject) +
throws AuthException_

[#50458644_pgfId-225301]##Remove method specific principals and
credentials from the subject.

======= [#50458644_pgfId-225302]##Parameters:

[#50458644_pgfId-225303]## _messageInfo_ - a contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-225304]## _subject_ - the Subject instance from which
the Principals and credentials are to be removed.

======= [#50458644_pgfId-225305]##Throws:

[#50458644_pgfId-225310]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If an error occurs during the Subject processing._

[#50458644_pgfId-225318]##[#50458644_marker-225311]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ServerAuth.secureResponse(javax.security.auth.message.MessageInfo, javax.security.auth.Subject)]##secureResponse(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ serviceSubject)_

[#50458644_pgfId-225327]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _secureResponse_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_
serviceSubject) +
throws AuthException__

[#50458644_pgfId-225328]##Secure a service response before sending it to
the client. This method is called to transform the response message
acquired by calling getResponseMessage (on messageInfo) into the
mechanism-specific form to be sent by the runtime.

[#50458644_pgfId-225329]##This method conveys the outcome of its message
processing either by returning an AuthStatus value or by throwing an
AuthException.

======= [#50458644_pgfId-225330]##Parameters:

[#50458644_pgfId-225331]## _messageInfo_ - A contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-225332]## _serviceSubject_ - A Subject that represents
the source of the service response, or null. It may be used by the
method implementation to retrieve Principals and credentials necessary
to secure the response. If the Subject is not null, the method
implementation may add additional Principals or credentials (pertaining
to the source of the service response) to the Subject.

======= [#50458644_pgfId-225333]##Returns:

[#50458644_pgfId-225334]##An AuthStatus object representing the
completion status of the processing performed by the method. The
AuthStatus values that may be returned by this method are defined as
follows:

[#50458644_pgfId-225335]##AuthStatus.SEND_SUCCESS when the application
response message was successfully secured. The secured response message
may be obtained by calling getResponseMessage on messageInfo.

[#50458644_pgfId-225336]##AuthStatus.SEND_CONTINUE to indicate that the
application response message (within messageInfo) was replaced with a
security message that should elicit a security-specific response (in the
form of a request) from the peer. This status value serves to inform the
calling runtime that (to successfully complete the message exchange) it
will need to be capable of continuing the message dialog by processing
at least one additional request/response exchange (after having sent the
response message returned in messageInfo). When this status value is
returned, the application response must be saved by the authentication
module such that it can be recovered when the module’s validateRequest
message is called to process the elicited response.

[#50458644_pgfId-225337]##AuthStatus.SEND_FAILURE to indicate that a
failure occurred while securing the response message and that an
appropriate failure response message is available by calling
getResponseMeessage on messageInfo.

======= [#50458644_pgfId-225338]##Throws:

[#50458644_pgfId-225343]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - When the message processing failed without establishing
a failure response message (in messageInfo)._

[#50458644_pgfId-225351]##[#50458644_marker-225344]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.ServerAuth.validateRequest(javax.security.auth.message.MessageInfo, javax.security.auth.Subject, javax.security.auth.Subject)]##validateRequest(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject)_

[#50458644_pgfId-225360]##public
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthStatus[AuthStatus]link:jaspic.htm#50458644_ClassHead[See
AuthStatus] _validateRequest_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo, _javax.security.auth.Subject_ clientSubject,
_javax.security.auth.Subject_ serviceSubject) +
throws AuthException__

[#50458644_pgfId-225361]##Authenticate a received service request. This
method is called to transform the mechanism-specific request message
acquired by calling getRequestMessage (on messageInfo) into the
validated application message to be returned to the message processing
runtime. If the received message is a (mechanism-specific) meta-message,
the method implementation must attempt to transform the meta-message
into a corresponding mechanism-specific response message, or to the
validated application request message. The runtime will bind a validated
application message into the the corresponding service invocation.

[#50458644_pgfId-225362]##This method conveys the outcome of its message
processing either by returning an AuthStatus value or by throwing an
AuthException.

======= [#50458644_pgfId-225363]##Parameters:

[#50458644_pgfId-225364]## _messageInfo_ - A contextual object that
encapsulates the client request and server response objects, and that
may be used to save state across a sequence of calls made to the methods
of this interface for the purpose of completing a secure message
exchange.

[#50458644_pgfId-225365]## _clientSubject_ - A Subject that represents
the source of the service request. It is used by the method
implementation to store Principals and credentials validated in the
request.

[#50458644_pgfId-225366]## _serviceSubject_ - A Subject that represents
the recipient of the service request, or null. It may be used by the
method implementation as the source of Principals or credentials to be
used to validate the request. If the Subject is not null, the method
implementation may add additional Principals or credentials (pertaining
to the recipient of the service request) to the Subject.

======= [#50458644_pgfId-225367]##Returns:

[#50458644_pgfId-225368]##An AuthStatus object representing the
completion status of the processing performed by the method. The
AuthStatus values that may be returned by this method are defined as
follows:

[#50458644_pgfId-225369]##AuthStatus.SUCCESS when the application
request message was successfully validated. The validated request
message is available by calling getRequestMessage on messageInfo.

[#50458644_pgfId-225370]##AuthStatus.SEND_SUCCESS to indicate that
validation/processing of the request message successfully produced the
secured application response message (in messageInfo). The secured
response message is available by calling getResponseMessage on
messageInfo.

[#50458644_pgfId-225371]##AuthStatus.SEND_CONTINUE to indicate that
message validation is incomplete, and that a preliminary response was
returned as the response message in messageInfo. When this status value
is returned to challenge an application request message, the challenged
request must be saved by the authentication module such that it can be
recovered when the module’s validateRequest message is called to process
the request returned for the challenge.

[#50458644_pgfId-225372]##AuthStatus.SEND_FAILURE to indicate that
message validation failed and that an appropriate failure response
message is available by calling getResponseMessage on messageInfo.

======= [#50458644_pgfId-225373]##Throws:

[#50458644_pgfId-225378]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - When the message processing failed without establishing
a failure response message (in messageInfo)._

===== [#50458644_pgfId-227132]##[#50458644_marker-227131]##Package

=== [#50458644_pgfId-227135]##[#50458644_PackageHead]##[#50458644_javax.security.auth.message.callback]##javax.security.auth.message.callback

======= [#50458644_pgfId-227136]##Description

[#50458644_pgfId-227137]##This package defines callback interfaces that
may be used by a pluggable message authentication module to interact
with the message processing runtime that invoked the module.

[#50458644_pgfId-227263]## 

[#50458644_pgfId-227140]##Class Summary

== [#50458644_pgfId-227144]##Interfaces

[#50458644_pgfId-227149]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request]_

[#50458644_pgfId-227154]##Marker interface for private key request
types.

[#50458644_pgfId-227157]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request]_

[#50458644_pgfId-227162]##Marker interface for secret key request types.

== [#50458644_pgfId-227164]##Classes

[#50458644_pgfId-227169]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback[CallerPrincipalCallback]link:jaspic.htm#50458644_ClassHead[See
CallerPrincipalCallback]_

[#50458644_pgfId-227174]##Callback for setting the container’s caller
(or Remote user) principal.

[#50458644_pgfId-227180]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CertStoreCallback[CertStoreCallback]link:jaspic.htm#50458644_ClassHead[See
CertStoreCallback]_

[#50458644_pgfId-227182]##Callback for CertStore.

[#50458644_pgfId-227187]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.GroupPrincipalCallback[GroupPrincipalCallback]link:jaspic.htm#50458644_ClassHead[See
GroupPrincipalCallback]_

[#50458644_pgfId-227190]##Callback establishing group principals within
the argument subject.

[#50458644_pgfId-227193]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback[PasswordValidationCallback]link:jaspic.htm#50458644_ClassHead[See
PasswordValidationCallback]_

[#50458644_pgfId-227198]##Callback for PasswordValidation.

[#50458644_pgfId-227204]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback]_

[#50458644_pgfId-227206]##Callback for acquiring a Public Key
Infrastructure (PKI) private key and its corresponding certificate
chain.

[#50458644_pgfId-227209]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest[PrivateKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.AliasRequest]_

[#50458644_pgfId-227214]##Request type for private keys that are
identified using an alias.

[#50458644_pgfId-227217]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest[PrivateKeyCallback.DigestRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.DigestRequest]_

[#50458644_pgfId-227222]##Request type for private keys that are
identified using a certificate digest or thumbprint.

[#50458644_pgfId-227225]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest[PrivateKeyCallback.IssuerSerialNumRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.IssuerSerialNumRequest]_

[#50458644_pgfId-227230]##Request type for private keys that are
identified using an issuer/serial number.

[#50458644_pgfId-227233]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest[PrivateKeyCallback.SubjectKeyIDRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.SubjectKeyIDRequest]_

[#50458644_pgfId-227238]##Request type for private keys that are
identified using a SubjectKeyID

[#50458644_pgfId-227244]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback[SecretKeyCallback]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback]_

[#50458644_pgfId-227246]##Callback for acquiring a shared secret from a
key repository.

[#50458644_pgfId-227249]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.AliasRequest[SecretKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.AliasRequest]_

[#50458644_pgfId-227254]##Request type for secret keys that are
identified using an alias.

[#50458644_pgfId-227260]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.TrustStoreCallback[TrustStoreCallback]link:jaspic.htm#50458644_ClassHead[See
TrustStoreCallback]_

[#50458644_pgfId-227262]##Callback for trusted certificate KeyStore.

===== [#50458644_pgfId-227264]##javax.security.auth.message.callback

=== [#50458644_pgfId-227268]##[#50458644_marker-227265]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback]##CallerPrincipalCallback

[#50458644_pgfId-227269]##  

[#50458644_pgfId-227270]## _java.lang.Object_

[#50458644_pgfId-227271]## |

[#50458644_pgfId-227272]## +--
_javax.security.auth.message.callback.CallerPrincipalCallback_

======= [#50458644_pgfId-227273]##All Implemented Interfaces:

======= [#50458644_pgfId-227274]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227275]##Declaration

======= [#50458644_pgfId-227276]##public class _CallerPrincipalCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227277]##Description

[#50458644_pgfId-227278]##Callback for setting the container’s caller
(or Remote user) principal. This callback is intended to be called by a
_serverAuthModule_ during its _validateRequest_ processing.

[#50458644_pgfId-227332]## 

[#50458644_pgfId-227281]##Member Summary

== [#50458644_pgfId-227285]##Constructors

[#50458644_pgfId-227289]## 

[#50458644_pgfId-227295]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback.CallerPrincipalCallback(javax.security.auth.Subject,%20java.security.Principal)[CallerPrincipalCallback]link:jaspic.htm#50458644_MemberHead[See
CallerPrincipalCallback(javax.security.auth.Subject s,
java.security.Principal p)]( _javax.security.auth.Subject_ s,
_java.security.Principal_ p)_

[#50458644_pgfId-227297]## 

[#50458644_pgfId-227303]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback.CallerPrincipalCallback(javax.security.auth.Subject,%20java.lang.String)[CallerPrincipalCallback]link:jaspic.htm#50458644_MemberHead[See
CallerPrincipalCallback(javax.security.auth.Subject s, java.lang.String
n)]( _javax.security.auth.Subject_ s, _java.lang.String_ n)_

== [#50458644_pgfId-227305]##Methods

[#50458644_pgfId-227309]## _java.lang.String_

[#50458644_pgfId-227315]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback.getName()[getName]link:jaspic.htm#50458644_MemberHead[See
getName()]()_

[#50458644_pgfId-227317]## _java.security.Principal_

[#50458644_pgfId-227323]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback.getPrincipal()[getPrincipal]link:jaspic.htm#50458644_MemberHead[See
getPrincipal()]()_

[#50458644_pgfId-227325]## _javax.security.auth.Subject_

[#50458644_pgfId-227331]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CallerPrincipalCallback.getSubject()[getSubject]link:jaspic.htm#50458644_MemberHead[See
getSubject()]()_

[#50458644_pgfId-227340]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227335]##Inherited Member Summary
a|
======= [#50458644_pgfId-227337]##Methods inherited from class _Object_

|[#50458644_pgfId-227339]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227341]##Constructors

[#50458644_pgfId-227345]##[#50458644_marker-227342]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback.CallerPrincipalCallback(javax.security.auth.Subject, java.security.Principal)]##CallerPrincipalCallback(
_javax.security.auth.Subject_ s, _java.security.Principal_ p)

[#50458644_pgfId-227346]##public _CallerPrincipalCallback_ (
_javax.security.auth.Subject_ s, _java.security.Principal_ p)

[#50458644_pgfId-227347]##Create a CallerPrincipalCallback to set the
container’s representation of the caller principal

======= [#50458644_pgfId-227348]##Parameters:

[#50458644_pgfId-227349]## _s_ - The Subject in which the container will
distinguish the caller identity.

[#50458644_pgfId-227350]## _p_ - The Principal that will be
distinguished as the caller principal. This value may be null.

[#50458644_pgfId-227351]##The CallbackHandler must use the argument
Principal to establish the caller principal associated with the
invocation being processed by the container. When the argument Principal
is null, the handler must establish the container’s representation of
the unauthenticated caller principal. The handler may perform principal
mapping of non-null argument Principal values, but it must be possible
to configure the handler such that it establishes the non-null argument
Principal as the caller principal.

[#50458644_pgfId-227355]##[#50458644_marker-227352]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback.CallerPrincipalCallback(javax.security.auth.Subject, java.lang.String)]##CallerPrincipalCallback(
_javax.security.auth.Subject_ s, _java.lang.String_ n)

[#50458644_pgfId-227356]##public _CallerPrincipalCallback_ (
_javax.security.auth.Subject_ s, _java.lang.String_ n)

[#50458644_pgfId-227357]##Create a CallerPrincipalCallback to set the
container’s representation of the caller principal.

======= [#50458644_pgfId-227358]##Parameters:

[#50458644_pgfId-227359]## _s_ - The Subject in which the container will
distinguish the caller identity.

[#50458644_pgfId-227360]## _n_ - The String value that will be returned
when getName() is called on the principal established as the caller
principal or null.

[#50458644_pgfId-227361]##The CallbackHandler must use the n argument to
establish the caller principal associated with the invocation being
processed by the container. When the n argument is null, the handler
must establish the container’s representation of the unauthenticated
caller principal (which may or may not be equal to null, depending on
the requirements of the container type ). The handler may perform
principal mapping of non-null values of n, but it must be possible to
configure the handler such that it establishes the non-null argument
value as the value returned when getName is called on the established
principal.

======= [#50458644_pgfId-227362]##Methods

[#50458644_pgfId-227366]##[#50458644_marker-227363]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback.getName()]##getName()

[#50458644_pgfId-227367]##public _java.lang.String_ _getName_ ()

[#50458644_pgfId-227368]##Get the caller principal name.

======= [#50458644_pgfId-227369]##Returns:

[#50458644_pgfId-227370]##The principal name or null.

[#50458644_pgfId-227371]##When the values returned by this method and
the getPrincipal methods are null, the handler must establish the
container’s representation of the unauthenticated caller principal
within the Subject.

[#50458644_pgfId-227375]##[#50458644_marker-227372]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback.getPrincipal()]##getPrincipal()

[#50458644_pgfId-227376]##public _java.security.Principal_
_getPrincipal_ ()

[#50458644_pgfId-227377]##Get the caller principal.

======= [#50458644_pgfId-227378]##Returns:

[#50458644_pgfId-227379]##The principal or null.

[#50458644_pgfId-227380]##When the values returned by this method and
the getName methods are null, the handler must establish the container’s
representation of the unauthenticated caller principal within the
Subject.

[#50458644_pgfId-227384]##[#50458644_marker-227381]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CallerPrincipalCallback.getSubject()]##getSubject()

[#50458644_pgfId-227385]##public _javax.security.auth.Subject_
_getSubject_ ()

[#50458644_pgfId-227386]##Get the Subject in which the handler will
distinguish the caller principal

======= [#50458644_pgfId-227387]##Returns:

[#50458644_pgfId-227388]##The subject.

===== [#50458644_pgfId-227389]##javax.security.auth.message.callback

=== [#50458644_pgfId-227393]##[#50458644_marker-227390]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.CertStoreCallback]##CertStoreCallback

[#50458644_pgfId-227394]##  

[#50458644_pgfId-227395]## _java.lang.Object_

[#50458644_pgfId-227396]## |

[#50458644_pgfId-227397]## +--
_javax.security.auth.message.callback.CertStoreCallback_

======= [#50458644_pgfId-227398]##All Implemented Interfaces:

======= [#50458644_pgfId-227399]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227400]##Declaration

======= [#50458644_pgfId-227401]##public class _CertStoreCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227402]##Description

[#50458644_pgfId-227403]##Callback for CertStore.

[#50458644_pgfId-227404]##A CertStore is a generic repository for
certificates. CertStores may be searched to locate public key
certificates, as well as to put together certificate chains. Such a
search may be necessary when the caller needs to verify a signature.

[#50458644_pgfId-227442]## 

[#50458644_pgfId-227407]##Member Summary

== [#50458644_pgfId-227411]##Constructors

[#50458644_pgfId-227415]## 

[#50458644_pgfId-227421]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CertStoreCallback.CertStoreCallback()[CertStoreCallback]link:jaspic.htm#50458644_MemberHead[See
CertStoreCallback()]()_

== [#50458644_pgfId-227423]##Methods

[#50458644_pgfId-227427]## _java.security.cert.CertStore_

[#50458644_pgfId-227433]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CertStoreCallback.getCertStore()[getCertStore]link:jaspic.htm#50458644_MemberHead[See
getCertStore()]()_

[#50458644_pgfId-227435]## void

[#50458644_pgfId-227441]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.CertStoreCallback.setCertStore(java.security.cert.CertStore)[setCertStore]link:jaspic.htm#50458644_MemberHead[See
setCertStore(java.security.cert.CertStore certStore)](
_java.security.cert.CertStore_ certStore)_

[#50458644_pgfId-227450]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227445]##Inherited Member Summary
a|
======= [#50458644_pgfId-227447]##Methods inherited from class _Object_

|[#50458644_pgfId-227449]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227451]##Constructors

[#50458644_pgfId-227455]##[#50458644_marker-227452]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CertStoreCallback.CertStoreCallback()]##CertStoreCallback()

[#50458644_pgfId-227456]##public _CertStoreCallback_ ()

[#50458644_pgfId-227457]##Create a CertStoreCallback.

======= [#50458644_pgfId-227458]##Methods

[#50458644_pgfId-227462]##[#50458644_marker-227459]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CertStoreCallback.getCertStore()]##getCertStore()

[#50458644_pgfId-227463]##public _java.security.cert.CertStore_
_getCertStore_ ()

[#50458644_pgfId-227464]##Used by the CertStore user to obtain the
CertStore set within the Callback.

======= [#50458644_pgfId-227465]##Returns:

[#50458644_pgfId-227466]##The CertStore, or null.

[#50458644_pgfId-227470]##[#50458644_marker-227467]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.CertStoreCallback.setCertStore(java.security.cert.CertStore)]##setCertStore(
_java.security.cert.CertStore_ certStore)

[#50458644_pgfId-227471]##public void _setCertStore_ (
_java.security.cert.CertStore_ certStore)

[#50458644_pgfId-227472]##Used by the CallbackHandler to set the
CertStore within the Callback.

======= [#50458644_pgfId-227473]##Parameters:

[#50458644_pgfId-227474]## _certStore_ - The certificate store, which
may be null

===== [#50458644_pgfId-227475]##javax.security.auth.message.callback

=== [#50458644_pgfId-227479]##[#50458644_marker-227476]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.GroupPrincipalCallback]##GroupPrincipalCallback

[#50458644_pgfId-227480]##  

[#50458644_pgfId-227481]## _java.lang.Object_

[#50458644_pgfId-227482]## |

[#50458644_pgfId-227483]## +--
_javax.security.auth.message.callback.GroupPrincipalCallback_

======= [#50458644_pgfId-227484]##All Implemented Interfaces:

======= [#50458644_pgfId-227485]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227486]##Declaration

======= [#50458644_pgfId-227487]##public class _GroupPrincipalCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227488]##Description

[#50458644_pgfId-227489]##Callback establishing group principals within
the argument subject. This callback is intended to be called by a
_serverAuthModule_ during its _validateRequest_ processing.

[#50458644_pgfId-227527]## 

[#50458644_pgfId-227492]##Member Summary

== [#50458644_pgfId-227496]##Constructors

[#50458644_pgfId-227500]## 

[#50458644_pgfId-227506]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.GroupPrincipalCallback.GroupPrincipalCallback(javax.security.auth.Subject,%20java.lang.String\%5B\%5D)[GroupPrincipalCallback]link:jaspic.htm#50458644_MemberHead[See
GroupPrincipalCallback(javax.security.auth.Subject s, java.lang.String[]
g)]( _javax.security.auth.Subject_ s, _java.lang.String_ [] g)_

== [#50458644_pgfId-227508]##Methods

{empty}[#50458644_pgfId-227512]## _java.lang.String_ []

[#50458644_pgfId-227518]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.GroupPrincipalCallback.getGroups()[getGroups]link:jaspic.htm#50458644_MemberHead[See
getGroups()]()_

[#50458644_pgfId-227520]## _javax.security.auth.Subject_

[#50458644_pgfId-227526]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.GroupPrincipalCallback.getSubject()[getSubject]link:jaspic.htm#50458644_MemberHead[See
getSubject()]()_

[#50458644_pgfId-227535]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227530]##Inherited Member Summary
a|
======= [#50458644_pgfId-227532]##Methods inherited from class _Object_

|[#50458644_pgfId-227534]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227536]##Constructors

[#50458644_pgfId-227540]##[#50458644_marker-227537]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.GroupPrincipalCallback.GroupPrincipalCallback(javax.security.auth.Subject, java.lang.String\[\])]##GroupPrincipalCallback(
_javax.security.auth.Subject_ s, _java.lang.String_ [] g)

[#50458644_pgfId-227541]##public _GroupPrincipalCallback_ (
_javax.security.auth.Subject_ s, _java.lang.String_ [] g)

[#50458644_pgfId-227542]##Create a GroupPrincipalCallback to establish
the container’s representation of the corresponding group principals
within the Subject.

======= [#50458644_pgfId-227543]##Parameters:

[#50458644_pgfId-227544]## _s_ - The Subject in which the container will
create group principals.

[#50458644_pgfId-227545]## _g_ - An array of Strings, where each element
contains the name of a group that will be used to create a corresponding
group principal within the Subject.

[#50458644_pgfId-227546]##When a null value is passed to the g argument,
the handler will establish the container’s representation of no group
principals within the Subject. Otherwise, the handler’s processing of
this callback is additive, yielding the union (without duplicates) of
the principals existing within the Subject, and those created with the
names occuring within the argument array. The CallbackHandler will
define the type of the created principals.

======= [#50458644_pgfId-227547]##Methods

[#50458644_pgfId-227551]##[#50458644_marker-227548]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.GroupPrincipalCallback.getGroups()]##getGroups()

[#50458644_pgfId-227552]##public _java.lang.String_ [] _getGroups_ ()

[#50458644_pgfId-227553]##Get the array of group names.

======= [#50458644_pgfId-227554]##Returns:

[#50458644_pgfId-227555]##Null, or an array containing 0 or more String
group names.

[#50458644_pgfId-227556]##When the return value is null, the handler
will establish the container’s representation of no group principals
within the Subject. Otherwise, the handler’s processing of this callback
is additive, yielding the union (without duplicates) of the principals
created with the names in the returned array and those existing within
the Subject.

[#50458644_pgfId-227560]##[#50458644_marker-227557]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.GroupPrincipalCallback.getSubject()]##getSubject()

[#50458644_pgfId-227561]##public _javax.security.auth.Subject_
_getSubject_ ()

[#50458644_pgfId-227562]##Get the Subject in which the handler will
establish the group principals.

======= [#50458644_pgfId-227563]##Returns:

[#50458644_pgfId-227564]##The subject.

===== [#50458644_pgfId-227565]##javax.security.auth.message.callback

=== [#50458644_pgfId-227569]##[#50458644_marker-227566]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback]##PasswordValidationCallback

[#50458644_pgfId-227570]##  

[#50458644_pgfId-227571]## _java.lang.Object_

[#50458644_pgfId-227572]## |

[#50458644_pgfId-227573]## +--
_javax.security.auth.message.callback.PasswordValidationCallback_

======= [#50458644_pgfId-227574]##All Implemented Interfaces:

======= [#50458644_pgfId-227575]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227576]##Declaration

======= [#50458644_pgfId-227577]##public class _PasswordValidationCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227578]##Description

[#50458644_pgfId-227579]##Callback for PasswordValidation. This callback
may be used by an authentication module to employ the password
validation facilities of its containing runtime. This Callback would
typically be called by a _ServerAuthModule_ during _validateRequest_
processing.

[#50458644_pgfId-227649]## 

[#50458644_pgfId-227582]##Member Summary

== [#50458644_pgfId-227586]##Constructors

[#50458644_pgfId-227590]## 

[#50458644_pgfId-227596]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.PasswordValidationCallback(javax.security.auth.Subject,%20java.lang.String,%20char\%5B\%5D)[PasswordValidationCallback]link:jaspic.htm#50458644_MemberHead[See
PasswordValidationCallback(javax.security.auth.Subject subject,
java.lang.String username, char[] password)](
_javax.security.auth.Subject_ subject, _java.lang.String_ username,
char[] password)_

== [#50458644_pgfId-227598]##Methods

[#50458644_pgfId-227602]## void

[#50458644_pgfId-227608]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.clearPassword()[clearPassword]link:jaspic.htm#50458644_MemberHead[See
clearPassword()]()_

{empty}[#50458644_pgfId-227610]## char[]

[#50458644_pgfId-227616]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.getPassword()[getPassword]link:jaspic.htm#50458644_MemberHead[See
getPassword()]()_

[#50458644_pgfId-227618]## boolean

[#50458644_pgfId-227624]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.getResult()[getResult]link:jaspic.htm#50458644_MemberHead[See
getResult()]()_

[#50458644_pgfId-227626]## _javax.security.auth.Subject_

[#50458644_pgfId-227632]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.getSubject()[getSubject]link:jaspic.htm#50458644_MemberHead[See
getSubject()]()_

[#50458644_pgfId-227634]## _java.lang.String_

[#50458644_pgfId-227640]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.getUsername()[getUsername]link:jaspic.htm#50458644_MemberHead[See
getUsername()]()_

[#50458644_pgfId-227642]## void

[#50458644_pgfId-227648]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PasswordValidationCallback.setResult(boolean)[setResult]link:jaspic.htm#50458644_MemberHead[See
setResult(boolean result)](boolean result)_

[#50458644_pgfId-227657]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227652]##Inherited Member Summary
a|
======= [#50458644_pgfId-227654]##Methods inherited from class _Object_

|[#50458644_pgfId-227656]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227658]##Constructors

[#50458644_pgfId-227662]##[#50458644_marker-227659]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.PasswordValidationCallback(javax.security.auth.Subject, java.lang.String, char\[\])]##PasswordValidationCallback(
_javax.security.auth.Subject_ subject, _java.lang.String_ username,
char[] password)

[#50458644_pgfId-227663]##public _PasswordValidationCallback_ (
_javax.security.auth.Subject_ subject, _java.lang.String_ username,
char[] password)

[#50458644_pgfId-227664]##Create a PasswordValidationCallback.

======= [#50458644_pgfId-227665]##Parameters:

[#50458644_pgfId-227666]## _subject_ - The subject for authentication

[#50458644_pgfId-227667]## _username_ - The username to authenticate

[#50458644_pgfId-227668]## _password_ - tTe user’s password, which may
be null.

======= [#50458644_pgfId-227669]##Methods

[#50458644_pgfId-227673]##[#50458644_marker-227670]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.clearPassword()]##clearPassword()

[#50458644_pgfId-227674]##public void _clearPassword_ ()

[#50458644_pgfId-227675]##Clear the password.

[#50458644_pgfId-227679]##[#50458644_marker-227676]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.getPassword()]##getPassword()

[#50458644_pgfId-227680]##public char[] _getPassword_ ()

[#50458644_pgfId-227681]##Get the password.

[#50458644_pgfId-227682]##Note that this method returns a reference to
the password. If a clone of the array is created it is the caller’s
responsibility to zero out the password information after it is no
longer needed.

======= [#50458644_pgfId-227683]##Returns:

[#50458644_pgfId-227684]##The password, which may be null.

[#50458644_pgfId-227688]##[#50458644_marker-227685]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.getResult()]##getResult()

[#50458644_pgfId-227689]##public boolean _getResult_ ()

[#50458644_pgfId-227690]##Get the authentication result.

======= [#50458644_pgfId-227691]##Returns:

[#50458644_pgfId-227692]##True if authentication succeeded, false
otherwise

[#50458644_pgfId-227696]##[#50458644_marker-227693]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.getSubject()]##getSubject()

[#50458644_pgfId-227697]##public _javax.security.auth.Subject_
_getSubject_ ()

[#50458644_pgfId-227698]##Get the subject.

======= [#50458644_pgfId-227699]##Returns:

[#50458644_pgfId-227700]##The subject.

[#50458644_pgfId-227704]##[#50458644_marker-227701]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.getUsername()]##getUsername()

[#50458644_pgfId-227705]##public _java.lang.String_ _getUsername_ ()

[#50458644_pgfId-227706]##Get the username.

======= [#50458644_pgfId-227707]##Returns:

[#50458644_pgfId-227708]##The username.

[#50458644_pgfId-227712]##[#50458644_marker-227709]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PasswordValidationCallback.setResult(boolean)]##setResult(boolean
result)

[#50458644_pgfId-227713]##public void _setResult_ (boolean result)

[#50458644_pgfId-227714]##Set the authentication result.

======= [#50458644_pgfId-227715]##Parameters:

[#50458644_pgfId-227716]## _result_ - True if authentication succeeded,
false otherwise

===== [#50458644_pgfId-227717]##javax.security.auth.message.callback

=== [#50458644_pgfId-227721]##[#50458644_marker-227718]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback]##PrivateKeyCallback

[#50458644_pgfId-227722]##  

[#50458644_pgfId-227723]## _java.lang.Object_

[#50458644_pgfId-227724]## |

[#50458644_pgfId-227725]## +--
_javax.security.auth.message.callback.PrivateKeyCallback_

======= [#50458644_pgfId-227726]##All Implemented Interfaces:

======= [#50458644_pgfId-227727]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227728]##Declaration

======= [#50458644_pgfId-227729]##public class _PrivateKeyCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-227730]##Description

[#50458644_pgfId-227731]##Callback for acquiring a Public Key
Infrastructure (PKI) private key and its corresponding certificate
chain. This Callback may be used by client or server authentication
modules to obtain private keys or private key references, from key
repositories available to the CallbackHandler that processes the
Callback.

[#50458644_pgfId-227837]## 

[#50458644_pgfId-227734]##Member Summary

== [#50458644_pgfId-227738]##Nested Classes

[#50458644_pgfId-227742]##static class

[#50458644_pgfId-227748]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest[PrivateKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.AliasRequest]_

[#50458644_pgfId-227750]##static class

[#50458644_pgfId-227756]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest[PrivateKeyCallback.DigestRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.DigestRequest]_

[#50458644_pgfId-227758]##static class

[#50458644_pgfId-227764]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest[PrivateKeyCallback.IssuerSerialNumRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.IssuerSerialNumRequest]_

[#50458644_pgfId-227766]##static

[#50458644_pgfId-227772]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request]_

[#50458644_pgfId-227774]##static class

[#50458644_pgfId-227780]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest[PrivateKeyCallback.SubjectKeyIDRequest]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.SubjectKeyIDRequest]_

== [#50458644_pgfId-227782]##Constructors

[#50458644_pgfId-227786]## 

[#50458644_pgfId-227796]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.PrivateKeyCallback(javax.security.auth.message.callback.PrivateKeyCallback.Request)[PrivateKeyCallback]link:jaspic.htm#50458644_MemberHead[See
PrivateKeyCallback(PrivateKeyCallback.Request115 request)](
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request] request)__

== [#50458644_pgfId-227798]##Methods

{empty}[#50458644_pgfId-227802]## _java.security.cert.Certificate_ []

[#50458644_pgfId-227808]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.getChain()[getChain]link:jaspic.htm#50458644_MemberHead[See
getChain()]()_

[#50458644_pgfId-227810]## _java.security.PrivateKey_

[#50458644_pgfId-227816]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.getKey()[getKey]link:jaspic.htm#50458644_MemberHead[See
getKey()]()_

[#50458644_pgfId-227818]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request]_

[#50458644_pgfId-227828]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.getRequest()[getRequest]link:jaspic.htm#50458644_MemberHead[See
getRequest()]()_

[#50458644_pgfId-227830]## void

[#50458644_pgfId-227836]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.setKey(java.security.PrivateKey,%20java.security.cert.Certificate\%5B\%5D)[setKey]link:jaspic.htm#50458644_MemberHead[See
setKey(java.security.PrivateKey key, java.security.cert.Certificate[]
chain)]( _java.security.PrivateKey_ key,
_java.security.cert.Certificate_ [] chain)_

[#50458644_pgfId-227845]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227840]##Inherited Member Summary
a|
======= [#50458644_pgfId-227842]##Methods inherited from class _Object_

|[#50458644_pgfId-227844]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227846]##Constructors

[#50458644_pgfId-227854]##[#50458644_marker-227847]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.PrivateKeyCallback(javax.security.auth.message.callback.PrivateKeyCallback.Request)]##PrivateKeyCallback(
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request] request)_

[#50458644_pgfId-227859]##public _PrivateKeyCallback_ (
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request] request)_

[#50458644_pgfId-227860]##Constructs this PrivateKeyCallback with a
private key Request object.

[#50458644_pgfId-227861]##The _request_ object identifies the private
key to be returned. The corresponding certificate chain for the private
key is also returned.

[#50458644_pgfId-227862]##If the _request_ object is null, the handler
of the callback relies on its own default.

======= [#50458644_pgfId-227863]##Parameters:

[#50458644_pgfId-227864]## _request_ - Identifier for the private key,
or null.

======= [#50458644_pgfId-227865]##Methods

[#50458644_pgfId-227869]##[#50458644_marker-227866]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.getChain()]##getChain()

[#50458644_pgfId-227870]##public _java.security.cert.Certificate_ []
_getChain_ ()

[#50458644_pgfId-227871]##Used to obtain the certicicate chain set
within the Callback.

======= [#50458644_pgfId-227872]##Returns:

[#50458644_pgfId-227873]##The certificate chain, or null if the chain
could not be found.

[#50458644_pgfId-227877]##[#50458644_marker-227874]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.getKey()]##getKey()

[#50458644_pgfId-227878]##public _java.security.PrivateKey_ _getKey_ ()

[#50458644_pgfId-227879]##Used to obtain the private key set within the
Callback.

======= [#50458644_pgfId-227880]##Returns:

[#50458644_pgfId-227881]##The private key, or null if the key could not
be found.

[#50458644_pgfId-227885]##[#50458644_marker-227882]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.getRequest()]##getRequest()

[#50458644_pgfId-227890]##public
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
PrivateKeyCallback.Request] _getRequest_ ()_

[#50458644_pgfId-227891]##Used by the CallbackHandler to get the Request
object that identifies the private key to be returned.

======= [#50458644_pgfId-227892]##Returns:

[#50458644_pgfId-227893]##The Request object which identifies the
private key to be returned, or null. If null, the handler of the
callback relies on its own default.

[#50458644_pgfId-227897]##[#50458644_marker-227894]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.setKey(java.security.PrivateKey, java.security.cert.Certificate\[\])]##setKey(
_java.security.PrivateKey_ key, _java.security.cert.Certificate_ []
chain)

[#50458644_pgfId-227898]##public void _setKey_ (
_java.security.PrivateKey_ key, _java.security.cert.Certificate_ []
chain)

[#50458644_pgfId-227899]##Used by the CallbackHandler to set the
requested private key and the corresponding certificate chain within the
Callback.

[#50458644_pgfId-227900]##If the requested private key or chain could
not be found, then both values must be set to null.

======= [#50458644_pgfId-227901]##Parameters:

[#50458644_pgfId-227902]## _key_ - The private key, or null.

[#50458644_pgfId-227903]## _chain_ - The corresponding certificate
chain, or null.

===== [#50458644_pgfId-227904]##javax.security.auth.message.callback

=== [#50458644_pgfId-227908]##[#50458644_marker-227905]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest]##PrivateKeyCallback.AliasRequest

[#50458644_pgfId-227909]##  

[#50458644_pgfId-227910]## _java.lang.Object_

[#50458644_pgfId-227911]## |

[#50458644_pgfId-227912]## +--
_javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest_

======= [#50458644_pgfId-227913]##All Implemented Interfaces:

======= [#50458644_pgfId-227918]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-227919]##Enclosing Class:

======= [#50458644_pgfId-227924]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback]_

======= [#50458644_pgfId-227925]##Declaration

======= [#50458644_pgfId-227930]##public static class _PrivateKeyCallback.AliasRequest_ implements _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-227931]##Description

[#50458644_pgfId-227932]##Request type for private keys that are
identified using an alias.

[#50458644_pgfId-227962]## 

[#50458644_pgfId-227935]##Member Summary

== [#50458644_pgfId-227939]##Constructors

[#50458644_pgfId-227943]## 

[#50458644_pgfId-227949]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest.PrivateKeyCallback.AliasRequest(java.lang.String)[PrivateKeyCallback.AliasRequest]link:jaspic.htm#50458644_MemberHead[See
PrivateKeyCallback.AliasRequest(java.lang.String alias)](
_java.lang.String_ alias)_

== [#50458644_pgfId-227951]##Methods

[#50458644_pgfId-227955]## _java.lang.String_

[#50458644_pgfId-227961]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest.getAlias()[getAlias]link:jaspic.htm#50458644_MemberHead[See
getAlias()]()_

[#50458644_pgfId-227970]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-227965]##Inherited Member Summary
a|
======= [#50458644_pgfId-227967]##Methods inherited from class _Object_

|[#50458644_pgfId-227969]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-227971]##Constructors

[#50458644_pgfId-227975]##[#50458644_marker-227972]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest.PrivateKeyCallback.AliasRequest(java.lang.String)]##PrivateKeyCallback.AliasRequest(
_java.lang.String_ alias)

[#50458644_pgfId-227976]##public _PrivateKeyCallback.AliasRequest_ (
_java.lang.String_ alias)

[#50458644_pgfId-227977]##Construct an AliasRequest with an alias.

[#50458644_pgfId-227978]##The alias is used to directly identify the
private key to be returned. The corresponding certificate chain for the
private key is also returned.

[#50458644_pgfId-227979]##If the alias is null, the handler of the
callback relies on its own default.

======= [#50458644_pgfId-227980]##Parameters:

[#50458644_pgfId-227981]## _alias_ - Name identifier for the private
key, or null.

======= [#50458644_pgfId-227982]##Methods

[#50458644_pgfId-227986]##[#50458644_marker-227983]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest.getAlias()]##getAlias()

[#50458644_pgfId-227987]##public _java.lang.String_ _getAlias_ ()

[#50458644_pgfId-227988]##Get the alias.

======= [#50458644_pgfId-227989]##Returns:

[#50458644_pgfId-227990]##The alias, or null.

===== [#50458644_pgfId-227991]##javax.security.auth.message.callback

=== [#50458644_pgfId-227995]##[#50458644_marker-227992]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest]##PrivateKeyCallback.DigestRequest

[#50458644_pgfId-227996]##  

[#50458644_pgfId-227997]## _java.lang.Object_

[#50458644_pgfId-227998]## |

[#50458644_pgfId-227999]## +--
_javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest_

======= [#50458644_pgfId-228000]##All Implemented Interfaces:

======= [#50458644_pgfId-228005]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228006]##Enclosing Class:

======= [#50458644_pgfId-228011]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback]_

======= [#50458644_pgfId-228012]##Declaration

======= [#50458644_pgfId-228017]##public static class _PrivateKeyCallback.DigestRequest_ implements _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228018]##Description

[#50458644_pgfId-228019]##Request type for private keys that are
identified using a certificate digest or thumbprint.

[#50458644_pgfId-228057]## 

[#50458644_pgfId-228022]##Member Summary

== [#50458644_pgfId-228026]##Constructors

[#50458644_pgfId-228030]## 

[#50458644_pgfId-228036]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.PrivateKeyCallback.DigestRequest(byte\%5B\%5D,%20java.lang.String)[PrivateKeyCallback.DigestRequest]link:jaspic.htm#50458644_MemberHead[See
PrivateKeyCallback.DigestRequest(byte[] digest, java.lang.String
algorithm)](byte[] digest, _java.lang.String_ algorithm)_

== [#50458644_pgfId-228038]##Methods

[#50458644_pgfId-228042]## _java.lang.String_

[#50458644_pgfId-228048]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.getAlgorithm()[getAlgorithm]link:jaspic.htm#50458644_MemberHead[See
getAlgorithm()]()_

{empty}[#50458644_pgfId-228050]## byte[]

[#50458644_pgfId-228056]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.getDigest()[getDigest]link:jaspic.htm#50458644_MemberHead[See
getDigest()]()_

[#50458644_pgfId-228065]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228060]##Inherited Member Summary
a|
======= [#50458644_pgfId-228062]##Methods inherited from class _Object_

|[#50458644_pgfId-228064]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228066]##Constructors

[#50458644_pgfId-228070]##[#50458644_marker-228067]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.PrivateKeyCallback.DigestRequest(byte\[\], java.lang.String)]##PrivateKeyCallback.DigestRequest(byte[]
digest, _java.lang.String_ algorithm)

[#50458644_pgfId-228071]##public _PrivateKeyCallback.DigestRequest_
(byte[] digest, _java.lang.String_ algorithm)

[#50458644_pgfId-228072]##Constructs a DigestRequest with a digest value
and algorithm identifier.

[#50458644_pgfId-228073]##The digest of the certificate whose private
key is returned must match the provided digest. The certificate digest
is computed by applying the specified algorithm to the bytes of the
certificate. For example:
_MessageDigest.getInstance(algorithm).digest(cert.getEncoded())_ . The
corresponding certificate chain for the private key is also returned. If
the digest or algorithm parameters are null, the handler of the callback
relies on its own defaults.

======= [#50458644_pgfId-228074]##Parameters:

[#50458644_pgfId-228075]## _digest_ - The digest value to use to select
the corresponding certificate and private key (or null).

[#50458644_pgfId-228076]## _algorithm_ - A string value identifying the
digest algorithm. The value passed to this parameter may be null. If it
is not null, it must conform to the requirements for the algorithm
parameter of _java.security.MessageDigest.getInstance()_ .

======= [#50458644_pgfId-228077]##Methods

[#50458644_pgfId-228081]##[#50458644_marker-228078]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.getAlgorithm()]##getAlgorithm()

[#50458644_pgfId-228082]##public _java.lang.String_ _getAlgorithm_ ()

[#50458644_pgfId-228083]##Get the algorithm identifier.

======= [#50458644_pgfId-228084]##Returns:

[#50458644_pgfId-228085]##The identifer of the algorithm used to compute
the digest.

[#50458644_pgfId-228089]##[#50458644_marker-228086]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest.getDigest()]##getDigest()

[#50458644_pgfId-228090]##public byte[] _getDigest_ ()

[#50458644_pgfId-228091]##Get the digest value.

======= [#50458644_pgfId-228092]##Returns:

[#50458644_pgfId-228093]##The digest value which must match the digest
of the certificate corresponding to the returned private key.

===== [#50458644_pgfId-228094]##javax.security.auth.message.callback

=== [#50458644_pgfId-228098]##[#50458644_marker-228095]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest]##PrivateKeyCallback.IssuerSerialNumRequest

[#50458644_pgfId-228099]##  

[#50458644_pgfId-228100]## _java.lang.Object_

[#50458644_pgfId-228101]## |

[#50458644_pgfId-228102]## +--
_javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest_

======= [#50458644_pgfId-228103]##All Implemented Interfaces:

======= [#50458644_pgfId-228108]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228109]##Enclosing Class:

======= [#50458644_pgfId-228114]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback]_

======= [#50458644_pgfId-228115]##Declaration

======= [#50458644_pgfId-228116]##public static class _PrivateKeyCallback.IssuerSerialNumRequest_ implements _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228121]##Description

[#50458644_pgfId-228122]##Request type for private keys that are
identified using an issuer/serial number.

[#50458644_pgfId-228160]## 

[#50458644_pgfId-228125]##Member Summary

== [#50458644_pgfId-228129]##Constructors

[#50458644_pgfId-228133]## 

[#50458644_pgfId-228139]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.PrivateKeyCallback.IssuerSerialNumRequest(javax.security.auth.x500.X500Principal,%20java.math.BigInteger)[PrivateKeyCallback.IssuerSerialNumRequest]link:jaspic.htm#50458644_MemberHead[See
PrivateKeyCallback.IssuerSerialNumRequest(javax.security.auth.x500.X500Principal
issuer, java.math.BigInteger serialNumber)](
_javax.security.auth.x500.X500Principal_ issuer, _java.math.BigInteger_
serialNumber)_

== [#50458644_pgfId-228141]##Methods

[#50458644_pgfId-228145]## _javax.security.auth.x500.X500Principal_

[#50458644_pgfId-228151]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.getIssuer()[getIssuer]link:jaspic.htm#50458644_MemberHead[See
getIssuer()]()_

[#50458644_pgfId-228153]## _java.math.BigInteger_

[#50458644_pgfId-228159]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.getSerialNum()[getSerialNum]link:jaspic.htm#50458644_MemberHead[See
getSerialNum()]()_

[#50458644_pgfId-228168]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228163]##Inherited Member Summary
a|
======= [#50458644_pgfId-228165]##Methods inherited from class _Object_

|[#50458644_pgfId-228167]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228169]##Constructors

[#50458644_pgfId-228173]##[#50458644_marker-228170]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.PrivateKeyCallback.IssuerSerialNumRequest(javax.security.auth.x500.X500Principal, java.math.BigInteger)]##PrivateKeyCallback.IssuerSerialNumRequest(
_javax.security.auth.x500.X500Principal_ issuer, _java.math.BigInteger_
serialNumber)

[#50458644_pgfId-228174]##public
_PrivateKeyCallback.IssuerSerialNumRequest_ (
_javax.security.auth.x500.X500Principal_ issuer, _java.math.BigInteger_
serialNumber)

[#50458644_pgfId-228175]##Constructs a IssuerSerialNumRequest with an
issuer/serial number.

[#50458644_pgfId-228176]##The issuer/serial number is used to identify a
public key certificate. The corresponding private key is returned in the
callback. The corresponding certificate chain for the private key is
also returned. If the issuer/serialNumber parameters are null, the
handler of the callback relies on its own defaults.

======= [#50458644_pgfId-228177]##Parameters:

[#50458644_pgfId-228178]## _issuer_ - The X500Principal name of the
certificate issuer, or null.

[#50458644_pgfId-228179]## _serialNumber_ - The serial number of the
certificate, or null.

======= [#50458644_pgfId-228180]##Methods

[#50458644_pgfId-228184]##[#50458644_marker-228181]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.getIssuer()]##getIssuer()

[#50458644_pgfId-228185]##public
_javax.security.auth.x500.X500Principal_ _getIssuer_ ()

[#50458644_pgfId-228186]##Get the issuer.

======= [#50458644_pgfId-228187]##Returns:

[#50458644_pgfId-228188]##The issuer, or null.

[#50458644_pgfId-228192]##[#50458644_marker-228189]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest.getSerialNum()]##getSerialNum()

[#50458644_pgfId-228193]##public _java.math.BigInteger_ _getSerialNum_
()

[#50458644_pgfId-228194]##Get the serial number.

======= [#50458644_pgfId-228195]##Returns:

[#50458644_pgfId-228196]##The serial number, or null.

===== [#50458644_pgfId-228197]##javax.security.auth.message.callback

=== [#50458644_pgfId-228201]##[#50458644_marker-228198]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.Request]##PrivateKeyCallback.Request

======= [#50458644_pgfId-228202]##All Known Implementing Classes:

======= [#50458644_pgfId-228207]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.AliasRequest[PrivateKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.AliasRequest], _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.DigestRequest[PrivateKeyCallback.DigestRequest]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.DigestRequest], _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.IssuerSerialNumRequest[PrivateKeyCallback.IssuerSerialNumRequest]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.IssuerSerialNumRequest], _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest[PrivateKeyCallback.SubjectKeyIDRequest]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.SubjectKeyIDRequest]____

======= [#50458644_pgfId-228220]##Enclosing Class:

======= [#50458644_pgfId-228225]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback]_

======= [#50458644_pgfId-228226]##Declaration

======= [#50458644_pgfId-228227]##public static interface _PrivateKeyCallback.Request_

======= [#50458644_pgfId-228228]##Description

[#50458644_pgfId-228229]##Marker interface for private key request
types.

===== [#50458644_pgfId-228230]##javax.security.auth.message.callback

=== [#50458644_pgfId-228234]##[#50458644_marker-228231]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest]##PrivateKeyCallback.SubjectKeyIDRequest

[#50458644_pgfId-228235]##  

[#50458644_pgfId-228236]## _java.lang.Object_

[#50458644_pgfId-228237]## |

[#50458644_pgfId-228238]## +--
_javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest_

======= [#50458644_pgfId-228239]##All Implemented Interfaces:

======= [#50458644_pgfId-228244]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228245]##Enclosing Class:

======= [#50458644_pgfId-228250]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback[PrivateKeyCallback]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback]_

======= [#50458644_pgfId-228251]##Declaration

======= [#50458644_pgfId-228252]##public static class _PrivateKeyCallback.SubjectKeyIDRequest_ implements _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.Request[PrivateKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See PrivateKeyCallback.Request]_

======= [#50458644_pgfId-228257]##Description

[#50458644_pgfId-228258]##Request type for private keys that are
identified using a SubjectKeyID

[#50458644_pgfId-228288]## 

[#50458644_pgfId-228261]##Member Summary

== [#50458644_pgfId-228265]##Constructors

[#50458644_pgfId-228269]## 

[#50458644_pgfId-228275]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest.PrivateKeyCallback.SubjectKeyIDRequest(byte\%5B\%5D)[PrivateKeyCallback.SubjectKeyIDRequest]link:jaspic.htm#50458644_MemberHead[See
PrivateKeyCallback.SubjectKeyIDRequest(byte[] subjectKeyID)](byte[]
subjectKeyID)_

== [#50458644_pgfId-228277]##Methods

{empty}[#50458644_pgfId-228281]## byte[]

[#50458644_pgfId-228287]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest.getSubjectKeyID()[getSubjectKeyID]link:jaspic.htm#50458644_MemberHead[See
getSubjectKeyID()]()_

[#50458644_pgfId-228296]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228291]##Inherited Member Summary
a|
======= [#50458644_pgfId-228293]##Methods inherited from class _Object_

|[#50458644_pgfId-228295]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228297]##Constructors

[#50458644_pgfId-228301]##[#50458644_marker-228298]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest.PrivateKeyCallback.SubjectKeyIDRequest(byte\[\])]##PrivateKeyCallback.SubjectKeyIDRequest(byte[]
subjectKeyID)

[#50458644_pgfId-228302]##public
_PrivateKeyCallback.SubjectKeyIDRequest_ (byte[] subjectKeyID)

[#50458644_pgfId-228303]##Construct a SubjectKeyIDRequest with an
subjectKeyID.

[#50458644_pgfId-228304]##The subjectKeyID is used to directly identify
the private key to be returned. The corresponding certificate chain for
the private key is also returned.

[#50458644_pgfId-228305]##If the subjectKeyID is null, the handler of
the callback relies on its own default.

======= [#50458644_pgfId-228306]##Parameters:

[#50458644_pgfId-228307]## _subjectKeyID_ - Identifier for the private
key, or null.

======= [#50458644_pgfId-228308]##Methods

[#50458644_pgfId-228312]##[#50458644_marker-228309]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.PrivateKeyCallback.SubjectKeyIDRequest.getSubjectKeyID()]##getSubjectKeyID()

[#50458644_pgfId-228313]##public byte[] _getSubjectKeyID_ ()

[#50458644_pgfId-228314]##Get the subjectKeyID.

======= [#50458644_pgfId-228315]##Returns:

[#50458644_pgfId-228316]##The subjectKeyID, or null.

===== [#50458644_pgfId-228317]##javax.security.auth.message.callback

=== [#50458644_pgfId-228321]##[#50458644_marker-228318]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback]##SecretKeyCallback

[#50458644_pgfId-228322]##  

[#50458644_pgfId-228323]## _java.lang.Object_

[#50458644_pgfId-228324]## |

[#50458644_pgfId-228325]## +--
_javax.security.auth.message.callback.SecretKeyCallback_

======= [#50458644_pgfId-228326]##All Implemented Interfaces:

======= [#50458644_pgfId-228327]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-228328]##Declaration

======= [#50458644_pgfId-228329]##public class _SecretKeyCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-228330]##Description

[#50458644_pgfId-228331]##Callback for acquiring a shared secret from a
key repository. This Callback may be used by client or server
authentication modules to obtain shared secrets (for example, passwords)
without relying on a user during the Callback processing. This Callback
is typically empoyed by _ClientAuthModules_ invoked from intermediate
components that need to acquire a password to authenticate to their
target service.

[#50458644_pgfId-228405]## 

[#50458644_pgfId-228334]##Member Summary

== [#50458644_pgfId-228338]##Nested Classes

[#50458644_pgfId-228342]##static class

[#50458644_pgfId-228348]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.AliasRequest[SecretKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.AliasRequest]_

[#50458644_pgfId-228350]##static

[#50458644_pgfId-228356]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request]_

== [#50458644_pgfId-228358]##Constructors

[#50458644_pgfId-228362]## 

[#50458644_pgfId-228372]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.SecretKeyCallback(javax.security.auth.message.callback.SecretKeyCallback.Request)[SecretKeyCallback]link:jaspic.htm#50458644_MemberHead[See
SecretKeyCallback(SecretKeyCallback.Request122 request)](
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request] request)__

== [#50458644_pgfId-228374]##Methods

[#50458644_pgfId-228378]## _javax.crypto.SecretKey_

[#50458644_pgfId-228384]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.getKey()[getKey]link:jaspic.htm#50458644_MemberHead[See
getKey()]()_

[#50458644_pgfId-228386]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request]_

[#50458644_pgfId-228396]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.getRequest()[getRequest]link:jaspic.htm#50458644_MemberHead[See
getRequest()]()_

[#50458644_pgfId-228398]## void

[#50458644_pgfId-228404]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.setKey(javax.crypto.SecretKey)[setKey]link:jaspic.htm#50458644_MemberHead[See
setKey(javax.crypto.SecretKey key)]( _javax.crypto.SecretKey_ key)_

[#50458644_pgfId-228413]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228408]##Inherited Member Summary
a|
======= [#50458644_pgfId-228410]##Methods inherited from class _Object_

|[#50458644_pgfId-228412]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228414]##Constructors

[#50458644_pgfId-228422]##[#50458644_marker-228415]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.SecretKeyCallback(javax.security.auth.message.callback.SecretKeyCallback.Request)]##SecretKeyCallback(
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request] request)_

[#50458644_pgfId-228427]##public _SecretKeyCallback_ (
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request] request)_

[#50458644_pgfId-228428]##Constructs this SecretKeyCallback with a
secret key Request object.

[#50458644_pgfId-228429]##The _request_ object identifies the secret key
to be returned. If the alias is null, the handler of the callback relies
on its own default.

======= [#50458644_pgfId-228430]##Parameters:

[#50458644_pgfId-228431]## _request_ - Request object identifying the
secret key, or null.

======= [#50458644_pgfId-228432]##Methods

[#50458644_pgfId-228436]##[#50458644_marker-228433]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.getKey()]##getKey()

[#50458644_pgfId-228437]##public _javax.crypto.SecretKey_ _getKey_ ()

[#50458644_pgfId-228438]##Used to obtain the secret key set within the
Callback.

======= [#50458644_pgfId-228439]##Returns:

[#50458644_pgfId-228440]##The secret key, or null if no key was found.

[#50458644_pgfId-228444]##[#50458644_marker-228441]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.getRequest()]##getRequest()

[#50458644_pgfId-228449]##public
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See
SecretKeyCallback.Request] _getRequest_ ()_

[#50458644_pgfId-228450]##Used by the CallbackHandler to get the Request
object which identifies the secret key to be returned.

======= [#50458644_pgfId-228451]##Returns:

[#50458644_pgfId-228452]##The Request object which identifies the
private key to be returned, or null. If null, the handler of the
callback relies on its own default.

[#50458644_pgfId-228456]##[#50458644_marker-228453]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.setKey(javax.crypto.SecretKey)]##setKey(
_javax.crypto.SecretKey_ key)

[#50458644_pgfId-228457]##public void _setKey_ (
_javax.crypto.SecretKey_ key)

[#50458644_pgfId-228458]##Used by the CallbackHandler to set the
requested secret key within the Callback.

======= [#50458644_pgfId-228459]##Parameters:

[#50458644_pgfId-228460]## _key_ - The secret key, or null if no key was
found.

===== [#50458644_pgfId-228461]##javax.security.auth.message.callback

=== [#50458644_pgfId-228465]##[#50458644_marker-228462]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.AliasRequest]##SecretKeyCallback.AliasRequest

[#50458644_pgfId-228466]##  

[#50458644_pgfId-228467]## _java.lang.Object_

[#50458644_pgfId-228468]## |

[#50458644_pgfId-228469]## +--
_javax.security.auth.message.callback.SecretKeyCallback.AliasRequest_

======= [#50458644_pgfId-228470]##All Implemented Interfaces:

======= [#50458644_pgfId-228475]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See SecretKeyCallback.Request]_

======= [#50458644_pgfId-228476]##Enclosing Class:

======= [#50458644_pgfId-228481]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback[SecretKeyCallback]link:jaspic.htm#50458644_ClassHead[See SecretKeyCallback]_

======= [#50458644_pgfId-228482]##Declaration

======= [#50458644_pgfId-228487]##public static class _SecretKeyCallback.AliasRequest_ implements _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.Request[SecretKeyCallback.Request]link:jaspic.htm#50458644_ClassHead[See SecretKeyCallback.Request]_

======= [#50458644_pgfId-228488]##Description

[#50458644_pgfId-228489]##Request type for secret keys that are
identified using an alias.

[#50458644_pgfId-228519]## 

[#50458644_pgfId-228492]##Member Summary

== [#50458644_pgfId-228496]##Constructors

[#50458644_pgfId-228500]## 

[#50458644_pgfId-228506]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.AliasRequest.SecretKeyCallback.AliasRequest(java.lang.String)[SecretKeyCallback.AliasRequest]link:jaspic.htm#50458644_MemberHead[See
SecretKeyCallback.AliasRequest(java.lang.String alias)](
_java.lang.String_ alias)_

== [#50458644_pgfId-228508]##Methods

[#50458644_pgfId-228512]## _java.lang.String_

[#50458644_pgfId-228518]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.AliasRequest.getAlias()[getAlias]link:jaspic.htm#50458644_MemberHead[See
getAlias()]()_

[#50458644_pgfId-228527]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228522]##Inherited Member Summary
a|
======= [#50458644_pgfId-228524]##Methods inherited from class _Object_

|[#50458644_pgfId-228526]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228528]##Constructors

[#50458644_pgfId-228532]##[#50458644_marker-228529]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.AliasRequest.SecretKeyCallback.AliasRequest(java.lang.String)]##SecretKeyCallback.AliasRequest(
_java.lang.String_ alias)

[#50458644_pgfId-228533]##public _SecretKeyCallback.AliasRequest_ (
_java.lang.String_ alias)

[#50458644_pgfId-228534]##Construct an AliasRequest with an alias.

[#50458644_pgfId-228535]##The alias is used to directly identify the
secret key to be returned.

[#50458644_pgfId-228536]##If the alias is null, the handler of the
callback relies on its own default.

======= [#50458644_pgfId-228537]##Parameters:

[#50458644_pgfId-228538]## _alias_ - Name identifier for the secret key,
or null.

======= [#50458644_pgfId-228539]##Methods

[#50458644_pgfId-228543]##[#50458644_marker-228540]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.AliasRequest.getAlias()]##getAlias()

[#50458644_pgfId-228544]##public _java.lang.String_ _getAlias_ ()

[#50458644_pgfId-228545]##Get the alias.

======= [#50458644_pgfId-228546]##Returns:

[#50458644_pgfId-228547]##The alias, or null.

===== [#50458644_pgfId-228548]##javax.security.auth.message.callback

=== [#50458644_pgfId-228552]##[#50458644_marker-228549]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.SecretKeyCallback.Request]##SecretKeyCallback.Request

======= [#50458644_pgfId-228553]##All Known Implementing Classes:

======= [#50458644_pgfId-228558]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback.AliasRequest[SecretKeyCallback.AliasRequest]link:jaspic.htm#50458644_ClassHead[See SecretKeyCallback.AliasRequest]_

======= [#50458644_pgfId-228559]##Enclosing Class:

======= [#50458644_pgfId-228564]## _link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.SecretKeyCallback[SecretKeyCallback]link:jaspic.htm#50458644_ClassHead[See SecretKeyCallback]_

======= [#50458644_pgfId-228565]##Declaration

======= [#50458644_pgfId-228566]##public static interface _SecretKeyCallback.Request_

======= [#50458644_pgfId-228567]##Description

[#50458644_pgfId-228568]##Marker interface for secret key request types.

===== [#50458644_pgfId-228569]##javax.security.auth.message.callback

=== [#50458644_pgfId-228573]##[#50458644_marker-228570]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.callback.TrustStoreCallback]##TrustStoreCallback

[#50458644_pgfId-228574]##  

[#50458644_pgfId-228575]## _java.lang.Object_

[#50458644_pgfId-228576]## |

[#50458644_pgfId-228577]## +--
_javax.security.auth.message.callback.TrustStoreCallback_

======= [#50458644_pgfId-228578]##All Implemented Interfaces:

======= [#50458644_pgfId-228579]## _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-228580]##Declaration

======= [#50458644_pgfId-228581]##public class _TrustStoreCallback_ implements _javax.security.auth.callback.Callback_

======= [#50458644_pgfId-228582]##Description

[#50458644_pgfId-228583]##Callback for trusted certificate KeyStore.

[#50458644_pgfId-228584]##A trusted certificate KeyStore may be used to
determine whether a given certificate chain can be trusted.

[#50458644_pgfId-228622]## 

[#50458644_pgfId-228587]##Member Summary

== [#50458644_pgfId-228591]##Constructors

[#50458644_pgfId-228595]## 

[#50458644_pgfId-228601]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.TrustStoreCallback.TrustStoreCallback()[TrustStoreCallback]link:jaspic.htm#50458644_MemberHead[See
TrustStoreCallback()]()_

== [#50458644_pgfId-228603]##Methods

[#50458644_pgfId-228607]## _java.security.KeyStore_

[#50458644_pgfId-228613]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.TrustStoreCallback.getTrustStore()[getTrustStore]link:jaspic.htm#50458644_MemberHead[See
getTrustStore()]()_

[#50458644_pgfId-228615]## void

[#50458644_pgfId-228621]##
_link:javax.security.auth.message.callback.htm#javax.security.auth.message.callback.TrustStoreCallback.setTrustStore(java.security.KeyStore)[setTrustStore]link:jaspic.htm#50458644_MemberHead[See
setTrustStore(java.security.KeyStore trustStore)](
_java.security.KeyStore_ trustStore)_

[#50458644_pgfId-228630]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-228625]##Inherited Member Summary
a|
======= [#50458644_pgfId-228627]##Methods inherited from class _Object_

|[#50458644_pgfId-228629]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-228631]##Constructors

[#50458644_pgfId-228635]##[#50458644_marker-228632]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.TrustStoreCallback.TrustStoreCallback()]##TrustStoreCallback()

[#50458644_pgfId-228636]##public _TrustStoreCallback_ ()

[#50458644_pgfId-228637]##Create a TrustStoreCallback.

======= [#50458644_pgfId-228638]##Methods

[#50458644_pgfId-228642]##[#50458644_marker-228639]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.TrustStoreCallback.getTrustStore()]##getTrustStore()

[#50458644_pgfId-228643]##public _java.security.KeyStore_
_getTrustStore_ ()

[#50458644_pgfId-228644]##Used by the TrustStore user to obtain the
TrustStore set within the Callback.

======= [#50458644_pgfId-228645]##Returns:

[#50458644_pgfId-228646]##The trusted certificate KeyStore. The KeyStore
is guaranteed to already be loaded.

[#50458644_pgfId-228650]##[#50458644_marker-228647]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.callback.TrustStoreCallback.setTrustStore(java.security.KeyStore)]##setTrustStore(
_java.security.KeyStore_ trustStore)

[#50458644_pgfId-228651]##public void _setTrustStore_ (
_java.security.KeyStore_ trustStore)

[#50458644_pgfId-228652]##Used by the CallbackHandler to set the trusted
certificate keystore within the Callback.

======= [#50458644_pgfId-228653]##Parameters:

[#50458644_pgfId-228654]## _trustStore_ - The trusted certificate
KeyStore, which must already be loaded.

===== [#50458644_pgfId-230241]##[#50458644_marker-230240]##Package

=== [#50458644_pgfId-230244]##[#50458644_PackageHead]##[#50458644_javax.security.auth.message.config]##javax.security.auth.message.config

======= [#50458644_pgfId-230245]##Description

[#50458644_pgfId-230246]##This package defines the interfaces
implemented by JSR 196 compatible configuration systems.

[#50458644_pgfId-230332]## 

[#50458644_pgfId-230249]##Class Summary

== [#50458644_pgfId-230253]##Interfaces

[#50458644_pgfId-230261]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See
AuthConfig]_

[#50458644_pgfId-230263]##This interface defines the common
functionality implemented by Authentication context configuration
objects.

[#50458644_pgfId-230266]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext[AuthConfigFactory.RegistrationContext]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory.RegistrationContext]_

[#50458644_pgfId-230271]##Represents the layer identifier, application
context identifier, and description components of an AuthConfigProvider
registration at the factory.

[#50458644_pgfId-230277]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider]_

[#50458644_pgfId-230279]##This interface is implemented by objects that
can be used to obtain authentication context configuration objects, that
is, _ClientAuthConfig_ or _ServerAuthConfig_ objects.

[#50458644_pgfId-230285]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ClientAuthConfig]_

[#50458644_pgfId-230287]##This interface encapsulates the configuration
of ClientAuthContext objects for a message layer and application context
(for example, the messaging context of a specific application, or set of
applications).

[#50458644_pgfId-230293]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See
ClientAuthContext]_

[#50458644_pgfId-230295]##This ClientAuthContext class encapsulates
ClientAuthModules that are used to secure service requests made by a
client, and to validate any responses received to those requests.

[#50458644_pgfId-230301]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener]_

[#50458644_pgfId-230303]##An implementation of this interface may be
associated with an AuthConfigProvider registration at an
AuthConfigFactory at the time the AuthConfigProvider is obtained for use
from the factory.

[#50458644_pgfId-230309]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ServerAuthConfig]_

[#50458644_pgfId-230311]##This interface describes a configuration of
ServerAuthConfiguration objects for a message layer and application
context (for example, the messaging context of a specific application,
or set of applications).

[#50458644_pgfId-230317]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See
ServerAuthContext]_

[#50458644_pgfId-230319]##This ServerAuthContext class encapsulates
ServerAuthModules that are used to validate service requests received
from clients, and to secure any response returned for those requests.

== [#50458644_pgfId-230321]##Classes

[#50458644_pgfId-230329]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory]_

[#50458644_pgfId-230331]##This class is used to obtain
_AuthConfigProvider_ objects that can be used to obtain authentication
context configuration objects, that is, _ClientAuthConfig_ and
_ServerAuthConfig_ objects.

===== [#50458644_pgfId-230333]##javax.security.auth.message.config

=== [#50458644_pgfId-230337]##[#50458644_marker-230334]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.AuthConfig]##AuthConfig

======= [#50458644_pgfId-230338]##All Known Subinterfaces:

======= [#50458644_pgfId-230347]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See ClientAuthConfig], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See ServerAuthConfig]__

======= [#50458644_pgfId-230348]##Declaration

======= [#50458644_pgfId-230349]##public interface _AuthConfig_

======= [#50458644_pgfId-230350]##Description

[#50458644_pgfId-230351]##This interface defines the common
functionality implemented by Authentication context configuration
objects.

======= [#50458644_pgfId-230352]##See Also:

======= [#50458644_pgfId-230361]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext]__

[#50458644_pgfId-230415]## 

[#50458644_pgfId-230364]##Member Summary

== [#50458644_pgfId-230368]##Methods

[#50458644_pgfId-230372]## _java.lang.String_

[#50458644_pgfId-230378]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAppContext()[getAppContext]link:jaspic.htm#50458644_MemberHead[See
getAppContext()]()_

[#50458644_pgfId-230380]## _java.lang.String_

[#50458644_pgfId-230390]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAuthContextID(javax.security.auth.message.MessageInfo)[getAuthContextID]link:jaspic.htm#50458644_MemberHead[See
getAuthContextID(MessageInfo82 messageInfo)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)__

[#50458644_pgfId-230392]## _java.lang.String_

[#50458644_pgfId-230398]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getMessageLayer()[getMessageLayer]link:jaspic.htm#50458644_MemberHead[See
getMessageLayer()]()_

[#50458644_pgfId-230400]## boolean

[#50458644_pgfId-230406]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.isProtected()[isProtected]link:jaspic.htm#50458644_MemberHead[See
isProtected()]()_

[#50458644_pgfId-230408]## void

[#50458644_pgfId-230414]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.refresh()[refresh]link:jaspic.htm#50458644_MemberHead[See
refresh()]()_

======= [#50458644_pgfId-230416]##Methods

[#50458644_pgfId-230420]##[#50458644_marker-230417]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfig.getAppContext()]##getAppContext()

[#50458644_pgfId-230421]##public _java.lang.String_ _getAppContext_ ()

[#50458644_pgfId-230422]##Get the application context identifier of this
authentication context configuration object.

======= [#50458644_pgfId-230423]##Returns:

[#50458644_pgfId-230424]##The String identifying the application context
of this configuration object, or null if the configuration object
pertains to an unspecified application context.

[#50458644_pgfId-230432]##[#50458644_marker-230425]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfig.getAuthContextID(javax.security.auth.message.MessageInfo)]##getAuthContextID(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-230437]##public _java.lang.String_ _getAuthContextID_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessageInfo[MessageInfo]link:jaspic.htm#50458644_ClassHead[See
MessageInfo] messageInfo)_

[#50458644_pgfId-230438]##Get the authentication context identifier
corresponding to the request and response objects encapsulated in
messageInfo.

======= [#50458644_pgfId-230439]##Parameters:

[#50458644_pgfId-230440]## _messageInfo_ - A contextual Object that
encapsulates the client request and server response objects.

======= [#50458644_pgfId-230441]##Returns:

[#50458644_pgfId-230442]##The authentication context identifier
corresponding to the encapsulated request and response objects, or null.

======= [#50458644_pgfId-230443]##Throws:

[#50458644_pgfId-230444]## _java.lang.IllegalArgumentException_ - If the
type of the message objects incorporated in messageInfo are not
compatible with the message types supported by this authentication
context configuration object.

[#50458644_pgfId-230448]##[#50458644_marker-230445]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfig.getMessageLayer()]##getMessageLayer()

[#50458644_pgfId-230449]##public _java.lang.String_ _getMessageLayer_ ()

[#50458644_pgfId-230450]##Get the message layer name of this
authentication context configuration object.

======= [#50458644_pgfId-230451]##Returns:

[#50458644_pgfId-230452]##The message layer name of this configuration
object, or null if the configuration object pertains to an unspecified
message layer.

[#50458644_pgfId-230456]##[#50458644_marker-230453]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfig.isProtected()]##isProtected()

[#50458644_pgfId-230457]##public boolean _isProtected_ ()

[#50458644_pgfId-230458]##Used to determine whether the authentication
context configuration object encapsulates any protected authentication
contexts.

======= [#50458644_pgfId-230459]##Returns:

[#50458644_pgfId-230460]##True if the configuration object encapsulates
at least one protected authentication context. Otherwise, this method
returns false.

[#50458644_pgfId-230464]##[#50458644_marker-230461]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfig.refresh()]##refresh()

[#50458644_pgfId-230465]##public void _refresh_ ()

[#50458644_pgfId-230466]##Causes a dynamic authentication context
configuration object to update the internal state that it uses to
process calls to its _getAuthContext_ method.

======= [#50458644_pgfId-230467]##Throws:

[#50458644_pgfId-230468]## _java.lang.SecurityException_ - If the caller
does not have permission to refresh the configuration object, or if an
error occurred during the update.

===== [#50458644_pgfId-230469]##javax.security.auth.message.config

=== [#50458644_pgfId-230473]##[#50458644_marker-230470]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory]##AuthConfigFactory

[#50458644_pgfId-230474]##  

[#50458644_pgfId-230475]## _java.lang.Object_

[#50458644_pgfId-230476]## |

[#50458644_pgfId-230477]## +--
_javax.security.auth.message.config.AuthConfigFactory_

======= [#50458644_pgfId-230478]##Declaration

======= [#50458644_pgfId-230479]##public abstract class _AuthConfigFactory_

======= [#50458644_pgfId-230480]##Description

[#50458644_pgfId-230481]##This class is used to obtain
_AuthConfigProvider_ objects that can be used to obtain authentication
context configuration objects, that is, _ClientAuthConfig_ and
_ServerAuthConfig_ objects.

[#50458644_pgfId-230482]##Authentication context configuration objects
are used to obtain authentication context objects. Authentication
context objects, that is, _ClientAuthContext_ and _ServerAuthContex_
objects, encapsulate authentication modules. Authentication modules are
pluggable components that perform security-related processing of request
and response messages.

[#50458644_pgfId-230483]##Callers do not operate on modules directly.
Instead they rely on an authentication context to manage the invocation
of modules. A caller obtains an authentication context by calling the
_getAuthContext_ method on a _ClientAuthConfig_ or _ServerAuthConfig_
obtained from an AuthConfigProvider.

[#50458644_pgfId-230484]##The following represents a typical sequence of
calls for obtaining a client authentication context, and then using it
to secure a request.

======= [#50458644_pgfId-230485]##AuthConfigFactory factory = AuthConfigFactory.getFactory();

[#50458644_pgfId-230486]##AuthConfigProvider provider =
factory.getConfigProvider(layer,appID,listener);

[#50458644_pgfId-230487]##ClientAuthConfig config =
provider.getClientAuthConfig(layer,appID,cbh)

[#50458644_pgfId-230488]##String authContextID =
config.getAuthContextID(messageInfo);

[#50458644_pgfId-230489]##ClientAuthContext context =
config.getAuthContext(authContextID,subject,properties);

[#50458644_pgfId-230490]##context.secureRequest(messageInfo,subject);

[#50458644_pgfId-230491]##A system-wide AuthConfigFactory implementation
can be set by invoking _setFactory_ , and retrieved using _getFactory_ .

[#50458644_pgfId-230492]##Every implementation of this abstract class
must offer a public, zero argument constructor. This constructor must
support the construction and registration (including self-registration)
of AuthConfigProviders from a persistent declarative representation. For
example, a factory implementation class could interpret the contents of
a file containing a sequence of configuration entries, with one entry
per AuthConfigProvider, and with each entry representing:

[#50458644_pgfId-230493]##The fully qualified name of the provider
implementation class (or null)

[#50458644_pgfId-230494]##The list of provider initialization properties
(which could be empty)

[#50458644_pgfId-230495]##Any provider initialization properties must be
specified in a form that can be passed to the provider constructor
within a Map of key, value pairs, and where all keys and values within
the Map are of type String.

[#50458644_pgfId-230496]##The entry syntax must also provide for the
optional inclusion of information sufficient to define a
RegistrationContext. This information would only be present when the
factory will register the provider. For example, each entry could
provide for the inclusion of one or more RegistrationContext objects of
the following form:

[#50458644_pgfId-230497]##The message layer name (or null)

[#50458644_pgfId-230498]##The application context identifier (or null)

[#50458644_pgfId-230499]##The registration description (or null)

[#50458644_pgfId-230500]##When a RegistrationContext is not included,
the factory must make it convenient for the provider to self-register
with the factory during the provider construction (see
_registerConfigProvider(AuthConfigProvider provider, ...)_ ).

[#50458644_pgfId-230501]##An AuthConfigFactory implementation is free to
choose is own persistent declarative syntax as long as it conforms to
the requirements defined by this class.

======= [#50458644_pgfId-230502]##See Also:

======= [#50458644_pgfId-230515]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See ClientAuthConfig], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See ServerAuthConfig], _java.util.Properties_____

[#50458644_pgfId-230725]## 

[#50458644_pgfId-230522]##Member Summary

== [#50458644_pgfId-230526]##Nested Classes

[#50458644_pgfId-230530]##static

[#50458644_pgfId-230536]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext[AuthConfigFactory.RegistrationContext]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory.RegistrationContext]_

== [#50458644_pgfId-230538]##Fields

[#50458644_pgfId-230542]##static _java.lang.String_

[#50458644_pgfId-230548]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.DEFAULT_FACTORY_SECURITY_PROPERTY[DEFAULT_FACTORY_SECURITY_PROPERTY]link:jaspic.htm#50458644_MemberHead[See
DEFAULT_FACTORY_SECURITY_PROPERTY]_

[#50458644_pgfId-230550]##static _java.lang.String_

[#50458644_pgfId-230556]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.GET_FACTORY_PERMISSION_NAME[GET_FACTORY_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
GET_FACTORY_PERMISSION_NAME]_

[#50458644_pgfId-230558]##static _java.security.SecurityPermission_

[#50458644_pgfId-230564]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getFactorySecurityPermission[getFactorySecurityPermission]link:jaspic.htm#50458644_MemberHead[See
getFactorySecurityPermission]_

[#50458644_pgfId-230566]##static _java.lang.String_

[#50458644_pgfId-230572]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.PROVIDER_REGISTRATION_PERMISSION_NAME[PROVIDER_REGISTRATION_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
PROVIDER_REGISTRATION_PERMISSION_NAME]_

[#50458644_pgfId-230574]##static _java.security.SecurityPermission_

[#50458644_pgfId-230580]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

[#50458644_pgfId-230582]##static _java.lang.String_

[#50458644_pgfId-230588]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.SET_FACTORY_PERMISSION_NAME[SET_FACTORY_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
SET_FACTORY_PERMISSION_NAME]_

[#50458644_pgfId-230590]##static _java.security.SecurityPermission_

[#50458644_pgfId-230596]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.setFactorySecurityPermission[setFactorySecurityPermission]link:jaspic.htm#50458644_MemberHead[See
setFactorySecurityPermission]_

== [#50458644_pgfId-230598]##Constructors

[#50458644_pgfId-230602]## 

[#50458644_pgfId-230608]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.AuthConfigFactory()[AuthConfigFactory]link:jaspic.htm#50458644_MemberHead[See
AuthConfigFactory()]()_

== [#50458644_pgfId-230610]##Methods

{empty}[#50458644_pgfId-230614]##abstract _java.lang.String_ []

[#50458644_pgfId-230624]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.detachListener(javax.security.auth.message.config.RegistrationListener,%20java.lang.String,%20java.lang.String)[detachListener]link:jaspic.htm#50458644_MemberHead[See
detachListener(RegistrationListener145 listener, java.lang.String layer,
java.lang.String appContext)](
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener, _java.lang.String_ layer,
_java.lang.String_ appContext)__

[#50458644_pgfId-230626]##abstract
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider]_

[#50458644_pgfId-230636]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getConfigProvider(java.lang.String,%20java.lang.String,%20javax.security.auth.message.config.RegistrationListener)[getConfigProvider]link:jaspic.htm#50458644_MemberHead[See
getConfigProvider(java.lang.String layer, java.lang.String appContext,
RegistrationListener145 listener)]( _java.lang.String_ layer,
_java.lang.String_ appContext,
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener)__

[#50458644_pgfId-230642]##static
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory]_

[#50458644_pgfId-230652]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getFactory()[getFactory]link:jaspic.htm#50458644_MemberHead[See
getFactory()]()_

[#50458644_pgfId-230654]##abstract
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext[AuthConfigFactory.RegistrationContext]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory.RegistrationContext]_

[#50458644_pgfId-230664]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getRegistrationContext(java.lang.String)[getRegistrationContext]link:jaspic.htm#50458644_MemberHead[See
getRegistrationContext(java.lang.String registrationID)](
_java.lang.String_ registrationID)_

{empty}[#50458644_pgfId-230666]##abstract _java.lang.String_ []

[#50458644_pgfId-230676]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getRegistrationIDs(javax.security.auth.message.config.AuthConfigProvider)[getRegistrationIDs]link:jaspic.htm#50458644_MemberHead[See
getRegistrationIDs(AuthConfigProvider139 provider)](
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider)__

[#50458644_pgfId-230678]##abstract void

[#50458644_pgfId-230684]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.refresh()[refresh]link:jaspic.htm#50458644_MemberHead[See
refresh()]()_

[#50458644_pgfId-230686]##abstract _java.lang.String_

[#50458644_pgfId-230696]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.registerConfigProvider(javax.security.auth.message.config.AuthConfigProvider,%20java.lang.String,%20java.lang.String,%20java.lang.String)[registerConfigProvider]link:jaspic.htm#50458644_MemberHead[See
registerConfigProvider(AuthConfigProvider139 provider, java.lang.String
layer, java.lang.String appContext, java.lang.String description)](
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider, _java.lang.String_ layer,
_java.lang.String_ appContext, _java.lang.String_ description)__

[#50458644_pgfId-230698]##abstract _java.lang.String_

[#50458644_pgfId-230704]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.registerConfigProvider(java.lang.String,%20java.util.Map,%20java.lang.String,%20java.lang.String,%20java.lang.String)[registerConfigProvider]link:jaspic.htm#50458644_MemberHead[See
registerConfigProvider(java.lang.String className, java.util.Map
properties, java.lang.String layer, java.lang.String appContext,
java.lang.String description)]( _java.lang.String_ className,
_java.util.Map_ properties, _java.lang.String_ layer, _java.lang.String_
appContext, _java.lang.String_ description)_

[#50458644_pgfId-230706]##abstract boolean

[#50458644_pgfId-230712]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.removeRegistration(java.lang.String)[removeRegistration]link:jaspic.htm#50458644_MemberHead[See
removeRegistration(java.lang.String registrationID)]( _java.lang.String_
registrationID)_

[#50458644_pgfId-230714]##static void

[#50458644_pgfId-230724]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.setFactory(javax.security.auth.message.config.AuthConfigFactory)[setFactory]link:jaspic.htm#50458644_MemberHead[See
setFactory(AuthConfigFactory128 factory)](
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory] factory)__

[#50458644_pgfId-230733]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-230728]##Inherited Member Summary
a|
======= [#50458644_pgfId-230730]##Methods inherited from class _Object_

|[#50458644_pgfId-230732]## _clone()_ , _equals(Object)_ , _finalize()_
, _getClass()_ , _hashCode()_ , _notify()_ , _notifyAll()_ ,
_toString()_ , _wait()_ , _wait(long)_ , _wait(long, int)_
|===

======= [#50458644_pgfId-230734]##Fields

[#50458644_pgfId-232375]##[#50458644_marker-230735]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.DEFAULT_FACTORY_SECURITY_PROPERTY]##DEFAULT_FACTORY_SECURITY_PROPERTY

[#50458644_pgfId-232376]##public static final _java.lang.String_
_DEFAULT_FACTORY_SECURITY_PROPERTY_

[#50458644_pgfId-232377]##The name of the Security property used to
define the default AuthConfigFactory implementation class.

[#50458644_pgfId-232381]##[#50458644_marker-232378]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.GET_FACTORY_PERMISSION_NAME]##GET_FACTORY_PERMISSION_NAME

[#50458644_pgfId-232382]##public static final _java.lang.String_
_GET_FACTORY_PERMISSION_NAME_

[#50458644_pgfId-232383]##The name of the SecurityPermission required to
call getFactory

[#50458644_pgfId-232387]##[#50458644_marker-232384]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.getFactorySecurityPermission]##getFactorySecurityPermission

[#50458644_pgfId-232388]##public static final
_java.security.SecurityPermission_ _getFactorySecurityPermission_

[#50458644_pgfId-232393]##The SecurityPermission, with name
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.GET_FACTORY_PERMISSION_NAME[GET_FACTORY_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
GET_FACTORY_PERMISSION_NAME], that is used to authorize access to the
getFactory method._

[#50458644_pgfId-232397]##[#50458644_marker-232394]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.PROVIDER_REGISTRATION_PERMISSION_NAME]##PROVIDER_REGISTRATION_PERMISSION_NAME

[#50458644_pgfId-232398]##public static final _java.lang.String_
_PROVIDER_REGISTRATION_PERMISSION_NAME_

[#50458644_pgfId-232399]##The name of the SecurityPermission to be used
to authorize access to the update methods of the factory implementation
class.

[#50458644_pgfId-232403]##[#50458644_marker-232400]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission]##providerRegistrationSecurityPermission

[#50458644_pgfId-232404]##public static final
_java.security.SecurityPermission_
_providerRegistrationSecurityPermission_

[#50458644_pgfId-232405]##An instance of the SecurityPermission (with
name
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.PROVIDER_REGISTRATION_PERMISSION_NAME[PROVIDER_REGISTRATION_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
PROVIDER_REGISTRATION_PERMISSION_NAME]) for use in authorizing access to
the update methods of the factory implementation class._

[#50458644_pgfId-232413]##[#50458644_marker-232410]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.SET_FACTORY_PERMISSION_NAME]##SET_FACTORY_PERMISSION_NAME

[#50458644_pgfId-232414]##public static final _java.lang.String_
_SET_FACTORY_PERMISSION_NAME_

[#50458644_pgfId-232415]##The name of the SecurityPermission required to
call setFactory

[#50458644_pgfId-232419]##[#50458644_marker-232416]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.setFactorySecurityPermission]##setFactorySecurityPermission

[#50458644_pgfId-232420]##public static final
_java.security.SecurityPermission_ _setFactorySecurityPermission_

[#50458644_pgfId-232425]##The SecurityPermission, with name
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.SET_FACTORY_PERMISSION_NAME[SET_FACTORY_PERMISSION_NAME]link:jaspic.htm#50458644_MemberHead[See
SET_FACTORY_PERMISSION_NAME], that is used to authorize access to the
setFactory method._

======= [#50458644_pgfId-230789]##Constructors

[#50458644_pgfId-230793]##[#50458644_marker-230790]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.AuthConfigFactory()]##AuthConfigFactory()

[#50458644_pgfId-230794]##public _AuthConfigFactory_ ()

======= [#50458644_pgfId-230795]##Methods

[#50458644_pgfId-230803]##[#50458644_marker-230796]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.detachListener(javax.security.auth.message.config.RegistrationListener, java.lang.String, java.lang.String)]##detachListener(
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener, _java.lang.String_ layer,
_java.lang.String_ appContext)_

[#50458644_pgfId-230808]##public abstract _java.lang.String_ []
_detachListener_ (
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener, _java.lang.String_ layer,
_java.lang.String_ appContext)_

[#50458644_pgfId-230809]##Disassociate the listener from all the
provider registrations whose layer and appContext values are matched by
the corresponding arguments to this method.

[#50458644_pgfId-230810]##Factories should periodically notify Listeners
to effectively detach listeners that are no longer in use.

[#50458644_pgfId-230811]##When a SecurityManager is enabled, and before
making any changes to the factory, this method must confirm that the
calling access control context has been granted the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

======= [#50458644_pgfId-230816]##Parameters:

[#50458644_pgfId-230817]## _listener_ - The RegistrationListener to be
detached.

[#50458644_pgfId-230818]## _layer_ - A String identifying the message
layer or null.

[#50458644_pgfId-230819]## _appContext_ - A String value identifying the
application context or null.

======= [#50458644_pgfId-230820]##Returns:

[#50458644_pgfId-230821]##An array of String values where each value
identifies a provider registration from which the listener was removed.
This method never returns null; it returns an empty array if the
listener was not removed from any registrations.

======= [#50458644_pgfId-230822]##Throws:

[#50458644_pgfId-230823]## _java.lang.SecurityException_ - If the caller
does not have permission to detach the listener from the factory.

[#50458644_pgfId-230827]##[#50458644_marker-230824]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.getConfigProvider(java.lang.String, java.lang.String, javax.security.auth.message.config.RegistrationListener)]##getConfigProvider(
_java.lang.String_ layer, _java.lang.String_ appContext,
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener)_

[#50458644_pgfId-230836]##public abstract
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] _getConfigProvider_ ( _java.lang.String_ layer,
_java.lang.String_ appContext,
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener[RegistrationListener]link:jaspic.htm#50458644_ClassHead[See
RegistrationListener] listener)__

[#50458644_pgfId-230841]##Get a registered AuthConfigProvider from the
factory. Get the provider of ServerAuthConfig and ClientAuthConfig
objects registered for the identified message layer and application
context.

[#50458644_pgfId-230842]##All factories shall employ the following
precedence rules to select the registered AuthConfigProvider that
matches the layer and appContext arguments:

[#50458644_pgfId-230843]##The provider specifically registered for the
values passed as the layer and appContext arguments shall be selected.

[#50458644_pgfId-232447]##If no provider is selected according to the
preceding rule, the provider specifically registered for the value
passed as the appContext argument and for all (that is, null) layers
shall be selected.

[#50458644_pgfId-232448]##If no provider is selected according to the
preceding rules, the provider specifically registered for the value
passed as the layer argument and for all (that is, null) appContexts
shall be selected.

[#50458644_pgfId-230846]##If no provider is selected according to the
preceding rules, the provider registered for all (that is, null) layers
and for all (that is, null) appContexts shall be selected.

[#50458644_pgfId-230847]##If no provider is selected according to the
preceding rules, the factory shall terminate its search for a registered
provider.

[#50458644_pgfId-230848]##The above precedence rules apply equivalently
to registrations created with a null or non-null _className_ argument.

======= [#50458644_pgfId-230849]##Parameters:

[#50458644_pgfId-232460]## _layer_ - A String identifying the message
layer for which the registered AuthConfigProvider is to be returned. The
value of this argument may be null.

[#50458644_pgfId-230851]## _appContext_ - A String that identifies the
application messaging context for which the registered
AuthConfigProvider is to be returned. The value of this argument may be
null.

[#50458644_pgfId-230852]## _listener_ - The RegistrationListener whose
_notify_ method is to be invoked if the corresponding registration is
unregistered or replaced. The value of this argument may be null.

======= [#50458644_pgfId-230853]##Returns:

[#50458644_pgfId-230854]##The implementation of the AuthConfigProvider
interface registered at the factory for the layer and appContext, or
null if no AuthConfigProvider is selected. An argument listener is
attached even if the return value is null.

[#50458644_pgfId-230858]##[#50458644_marker-230855]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.getFactory()]##getFactory()

[#50458644_pgfId-230863]##public static
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory] _getFactory_ ()_

[#50458644_pgfId-230864]##Get the system-wide AuthConfigFactory
implementation.

[#50458644_pgfId-230865]##If a non-null system-wide factory instance is
defined at the time of the call, for example, with _setFactory_ , it
will be returned. Otherwise, an attempt will be made to construct an
instance of the default AuthConfigFactory implementation class. The
fully qualified class name of the default factory implementation class
is obtained from the value of the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.DEFAULT_FACTORY_SECURITY_PROPERTY[DEFAULT_FACTORY_SECURITY_PROPERTY]link:jaspic.htm#50458644_MemberHead[See
DEFAULT_FACTORY_SECURITY_PROPERTY] security property. When an instance
of the default factory implementation class is successfully constructed
by this method, this method will set it as the system-wide factory
instance._

[#50458644_pgfId-230870]##The absolute pathname of the Java security
properties file is JAVA_HOME/lib/security/java.security, where JAVA_HOME
refers to the directory where the JDK was installed.

[#50458644_pgfId-230875]##When a SecurityManager is enabled, the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.getFactorySecurityPermission[getFactorySecurityPermission]link:jaspic.htm#50458644_MemberHead[See
getFactorySecurityPermission] will be required to call this method. If
at the time of the call, a system-wide factory instance has not already
been defined, then the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.setFactorySecurityPermission[setFactorySecurityPermission]link:jaspic.htm#50458644_MemberHead[See
setFactorySecurityPermission] will also be required.__

======= [#50458644_pgfId-230880]##Returns:

[#50458644_pgfId-230881]##The non-null system-wide AuthConfigFactory
instance set at the time of the call, or if that value was null, the
value of the system-wide factory instance established by this method.
This method returns null when the system-wide factory was not defined
when this method was called and no default factory name was defined via
the security property.

======= [#50458644_pgfId-230882]##Throws:

[#50458644_pgfId-230883]## _java.lang.SecurityException_ - If the caller
does not have permission to retrieve the factory, or set it as the
system-wide instance. Also thrown if an exception was thrown during the
class loading, or construction of the default AuthConfigFactory
implementation class; in which case the SecurityException will contain
the root Exception as its cause.

[#50458644_pgfId-230887]##[#50458644_marker-230884]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.getRegistrationContext(java.lang.String)]##getRegistrationContext(
_java.lang.String_ registrationID)

[#50458644_pgfId-230892]##public abstract
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext[AuthConfigFactory.RegistrationContext]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory.RegistrationContext] _getRegistrationContext_ (
_java.lang.String_ registrationID)_

[#50458644_pgfId-230893]##Get the the registration context for the
identified registration.

======= [#50458644_pgfId-230894]##Parameters:

[#50458644_pgfId-230895]## _registrationID_ - A String that identifies a
provider registration at the factory

======= [#50458644_pgfId-230896]##Returns:

[#50458644_pgfId-230897]##A RegistrationContext or null. When a Non-null
value is returned, it is a copy of the registration context
corresponding to the registration. Null is returned when the
registration identifier does not correspond to an active registration

[#50458644_pgfId-230905]##[#50458644_marker-230898]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.getRegistrationIDs(javax.security.auth.message.config.AuthConfigProvider)]##getRegistrationIDs(
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider)_

[#50458644_pgfId-230910]##public abstract _java.lang.String_ []
_getRegistrationIDs_ (
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider)_

[#50458644_pgfId-230911]##Get the registration identifiers for all
registrations of the provider instance at the factory.

======= [#50458644_pgfId-230912]##Parameters:

[#50458644_pgfId-230913]## _provider_ - The AuthConfigurationProvider
whose registration identifiers are to be returned. This argument may be
null, in which case it indicates that the IDs of all active
registrations within the factory are to be returned.

======= [#50458644_pgfId-230914]##Returns:

[#50458644_pgfId-230915]##An array of String values where each value
identifies a provider registration at the factory. This method never
returns null; it returns an empty array when there are no registrations
at the factory for the identified provider.

[#50458644_pgfId-230919]##[#50458644_marker-230916]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.refresh()]##refresh()

[#50458644_pgfId-230920]##public abstract void _refresh_ ()

[#50458644_pgfId-230921]##Cause the factory to reprocess its persistent
declarative representation of provider registrations.

[#50458644_pgfId-230922]##A factory should only replace an existing
registration when a change of provider implementation class or
initialization properties has occurred.

[#50458644_pgfId-230923]##When a SecurityManager is enabled, and before
the point where this method could have caused any changes to the
factory, this method must confirm that the calling access control
context has been granted the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

======= [#50458644_pgfId-230928]##Throws:

[#50458644_pgfId-230929]## _java.lang.SecurityException_ - If the caller
does not have permission to refresh the factory, or if an error occurred
during the reinitialization.

[#50458644_pgfId-230933]##[#50458644_marker-230930]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.registerConfigProvider(java.lang.String, java.util.Map, java.lang.String, java.lang.String, java.lang.String)]##registerConfigProvider(
_java.lang.String_ className, _java.util.Map_ properties,
_java.lang.String_ layer, _java.lang.String_ appContext,
_java.lang.String_ description)

[#50458644_pgfId-230934]##public abstract _java.lang.String_
_registerConfigProvider_ ( _java.lang.String_ className, _java.util.Map_
properties, _java.lang.String_ layer, _java.lang.String_ appContext,
_java.lang.String_ description)

[#50458644_pgfId-230935]##Registers within the factory and records
within the factory’s persistent declarative representation of provider
registrations a provider of ServerAuthConfig and/or ClientAuthConfig
objects for a message layer and application context identifier. This
method typically constructs an instance of the provider before
registering it with the factory. Factories may extend or modify the
persisted registrations of existing provider instances, if those
instances were registered with ClassName and properties arguments
equivalent to those passed in the current call.

[#50458644_pgfId-230936]##This method employs the two argument
constructor required to be supported by every implementation of the
AuthConfigProvider interface, and this method must pass a null value for
the factory argument of the constructor. _AuthConfigProviderImpl
AuthConfigProviderImpl(Map properties, AuthConfigFactory factory)_ .

[#50458644_pgfId-230937]##At most one registration may exist within the
factory for a given combination of message layer and appContext. Any
pre-existing registration with identical values for layer and appContext
is replaced by a subsequent registration. When replacement occurs, the
registration identifier, layer, and appContext identifier remain
unchanged, and the AuthConfigProvider (with initialization properties)
and description are replaced.

[#50458644_pgfId-230938]##Within the lifetime of its Java process, a
factory must assign unique registration identifiers to registrations,
and must never assign a previously used registration identifier to a
registration whose message layer and or appContext identifier differ
from the previous use.

[#50458644_pgfId-230939]##Programmatic registrations performed by using
this method must update (according to the replacement rules described
above) the persistent declarative representation of provider
registrations employed by the factory constructor.

[#50458644_pgfId-230940]##When a SecurityManager is enabled, before
loading the argument provider, and before making any changes to the
factory, this method must confirm that the calling access control
context has been granted the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

======= [#50458644_pgfId-230945]##Parameters:

[#50458644_pgfId-230946]## _className_ - The fully qualified name of an
AuthConfigProvider implementation class (or null). Calling this method
with a null value for this parameter shall cause _getConfigProvider_ to
return null when it is called with layer and appContext values for which
the resulting registration is the best match.

[#50458644_pgfId-230947]## _properties_ - A Map object containing the
initialization properties to be passed to the properties argument of the
provider constructor. This argument may be null. When this argument is
not null, all the values and keys occurring in the Map must be of type
String.

[#50458644_pgfId-230948]## _layer_ - A String identifying the message
layer for which the provider will be registered at the factory. A null
value may be passed as an argument for this parameter, in which case the
provider is registered at all layers.

[#50458644_pgfId-230949]## _appContext_ - A String value that may be
used by a runtime to request a configuration object from this provider.
A null value may be passed as an argument for this parameter, in which
case the provider is registered for all configuration ids (at the
indicated layers).

[#50458644_pgfId-230950]## _description_ - A text String describing the
provider. This value may be null.

======= [#50458644_pgfId-230951]##Returns:

[#50458644_pgfId-230952]##A String identifier assigned by the factory to
the provider registration, and that may be used to remove the
registration from the factory.

======= [#50458644_pgfId-230953]##Throws:

[#50458644_pgfId-230954]## _java.lang.SecurityException_ - If the caller
does not have permission to register a provider at the factory, or if
the the provider construction (given a non-null _className_ ) or
registration fails.

[#50458644_pgfId-230962]##[#50458644_marker-230955]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.registerConfigProvider(javax.security.auth.message.config.AuthConfigProvider, java.lang.String, java.lang.String, java.lang.String)]##registerConfigProvider(
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider, _java.lang.String_ layer,
_java.lang.String_ appContext, _java.lang.String_ description)_

[#50458644_pgfId-230967]##public abstract _java.lang.String_
_registerConfigProvider_ (
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See
AuthConfigProvider] provider, _java.lang.String_ layer,
_java.lang.String_ appContext, _java.lang.String_ description)_

[#50458644_pgfId-230968]##Registers within the (in-memory) factory, a
provider of ServerAuthConfig and/or ClientAuthConfig objects for a
message layer and application context identifier. This method does NOT
effect the factory’s persistent declarative representation of provider
registrations, and is intended to be used by providers to perform
self-Registration.

[#50458644_pgfId-230969]##At most one registration may exist within the
factory for a given combination of message layer and appContext. Any
pre-existing registration with identical values for layer and appContext
is replaced by a subsequent registration. When replacement occurs, the
registration identifier, layer, and appContext identifier remain
unchanged, and the AuthConfigProvider (with initialization properties)
and description are replaced.

[#50458644_pgfId-230970]##Within the lifetime of its Java process, a
factory must assign unique registration identifiers to registrations,
and must never assign a previously used registration identifier to a
registration whose message layer and or appContext identifier differ
from the previous use.

[#50458644_pgfId-230971]##When a SecurityManager is enabled, and before
making any changes to the factory, this method must confirm that the
calling access control context has been granted the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

======= [#50458644_pgfId-230976]##Parameters:

[#50458644_pgfId-230977]## _provider_ - The AuthConfigProvider to be
registered at the factory (or null). Calling this method with a null
value for this parameter shall cause _getConfigProvider_ to return null
when it is called with layer and appContext values for which the
resulting registration is the best match.

[#50458644_pgfId-230978]## _layer_ - A String identifying the message
layer for which the provider will be registered at the factory. A null
value may be passed as an argument for this parameter, in which case the
provider is registered at all layers.

[#50458644_pgfId-230979]## _appContext_ - A String value that may be
used by a runtime to request a configuration object from this provider.
A null value may be passed as an argument for this parameter, in which
case the provider is registered for all configuration ids (at the
indicated layers).

[#50458644_pgfId-230980]## _description_ - A text String describing the
provider. This value may be null.

======= [#50458644_pgfId-230981]##Returns:

[#50458644_pgfId-230982]##A String identifier assigned by the factory to
the provider registration, and that may be used to remove the
registration from the factory.

======= [#50458644_pgfId-230983]##Throws:

[#50458644_pgfId-230984]## _java.lang.SecurityException_ - If the caller
does not have permission to register a provider at the factory, or if
the provider registration fails.

[#50458644_pgfId-230988]##[#50458644_marker-230985]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.removeRegistration(java.lang.String)]##removeRegistration(
_java.lang.String_ registrationID)

[#50458644_pgfId-230989]##public abstract boolean _removeRegistration_ (
_java.lang.String_ registrationID)

[#50458644_pgfId-230990]##Remove the identified provider registration
from the factory (and from the persistent declarative representation of
provider registrations, if appropriate) and invoke any listeners
associated with the removed registration.

[#50458644_pgfId-230991]##When a SecurityManager is enabled, and before
making any changes to the factory, this method must confirm that the
calling access control context has been granted the
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.providerRegistrationSecurityPermission[providerRegistrationSecurityPermission]link:jaspic.htm#50458644_MemberHead[See
providerRegistrationSecurityPermission]_

======= [#50458644_pgfId-230996]##Parameters:

[#50458644_pgfId-230997]## _registrationID_ - A String that identifies a
provider registration at the factory

======= [#50458644_pgfId-230998]##Returns:

[#50458644_pgfId-230999]##True if there was a registration with the
specified identifier and it was removed. Return false if the
registrationID was invalid.

======= [#50458644_pgfId-231000]##Throws:

[#50458644_pgfId-231001]## _java.lang.SecurityException_ - If the caller
does not have permission to unregister the provider at the factory.

[#50458644_pgfId-231009]##[#50458644_marker-231002]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.setFactory(javax.security.auth.message.config.AuthConfigFactory)]##setFactory(
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory] factory)_

[#50458644_pgfId-231014]##public static void _setFactory_ (
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See
AuthConfigFactory] factory)_

[#50458644_pgfId-231015]##Set the system-wide AuthConfigFactory
implementation.

[#50458644_pgfId-231016]##If an implementation was set previously, it
will be replaced.

[#50458644_pgfId-231017]##Listeners are not notified of a change to the
registered factory.

======= [#50458644_pgfId-231018]##Parameters:

[#50458644_pgfId-231019]## _factory_ - The AuthConfigFactory instance,
which may be null.

======= [#50458644_pgfId-231020]##Throws:

[#50458644_pgfId-231021]## _java.lang.SecurityException_ - If the caller
does not have permission to set the factory.

===== [#50458644_pgfId-231022]##javax.security.auth.message.config

=== [#50458644_pgfId-231026]##[#50458644_marker-231023]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.RegistrationContext]##AuthConfigFactory.RegistrationContext

======= [#50458644_pgfId-231027]##Enclosing Class:

======= [#50458644_pgfId-231032]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See AuthConfigFactory]_

======= [#50458644_pgfId-231033]##Declaration

======= [#50458644_pgfId-231034]##public static interface _AuthConfigFactory.RegistrationContext_

======= [#50458644_pgfId-231035]##Description

[#50458644_pgfId-231036]##Represents the layer identifier, application
context identifier, and description components of an AuthConfigProvider
registration at the factory.

[#50458644_pgfId-231078]## 

[#50458644_pgfId-231039]##Member Summary

== [#50458644_pgfId-231043]##Methods

[#50458644_pgfId-231047]## _java.lang.String_

[#50458644_pgfId-231053]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getAppContext()[getAppContext]link:jaspic.htm#50458644_MemberHead[See
getAppContext()]()_

[#50458644_pgfId-231055]## _java.lang.String_

[#50458644_pgfId-231061]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getDescription()[getDescription]link:jaspic.htm#50458644_MemberHead[See
getDescription()]()_

[#50458644_pgfId-231063]## _java.lang.String_

[#50458644_pgfId-231069]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getMessageLayer()[getMessageLayer]link:jaspic.htm#50458644_MemberHead[See
getMessageLayer()]()_

[#50458644_pgfId-231071]## boolean

[#50458644_pgfId-231077]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.isPersistent()[isPersistent]link:jaspic.htm#50458644_MemberHead[See
isPersistent()]()_

======= [#50458644_pgfId-231079]##Methods

[#50458644_pgfId-231083]##[#50458644_marker-231080]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getAppContext()]##getAppContext()

[#50458644_pgfId-231084]##public _java.lang.String_ _getAppContext_ ()

[#50458644_pgfId-231085]##Get the application context identifier from
the registration context

======= [#50458644_pgfId-231086]##Returns:

[#50458644_pgfId-231087]##A String identifying the application context
for which the AuthConfigProvider was registered. The returned value may
be null.

[#50458644_pgfId-231091]##[#50458644_marker-231088]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getDescription()]##getDescription()

[#50458644_pgfId-231092]##public _java.lang.String_ _getDescription_ ()

[#50458644_pgfId-231093]##Get the description from the registration
context

======= [#50458644_pgfId-231094]##Returns:

[#50458644_pgfId-231095]##The description String from the registration,
or null if no description string was included in the registration.

[#50458644_pgfId-231099]##[#50458644_marker-231096]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.getMessageLayer()]##getMessageLayer()

[#50458644_pgfId-231100]##public _java.lang.String_ _getMessageLayer_ ()

[#50458644_pgfId-231101]##Get the layer name from the registration
context

======= [#50458644_pgfId-231102]##Returns:

[#50458644_pgfId-231103]##A String identifying the message layer for
which the AuthConfigProvider was registered. The returned value may be
null.

[#50458644_pgfId-231107]##[#50458644_marker-231104]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigFactory.RegistrationContext.isPersistent()]##isPersistent()

[#50458644_pgfId-231108]##public boolean _isPersistent_ ()

[#50458644_pgfId-231109]##Get the persisted status from the registration
context.

======= [#50458644_pgfId-231110]##Returns:

[#50458644_pgfId-231111]##A boolean indicating whether the registration
is the result of a className based registration, or an instance-based
(for example, self-) registration. Only registrations performed using
the five argument _registerConfigProvider_ method are persistent.

===== [#50458644_pgfId-231112]##javax.security.auth.message.config

=== [#50458644_pgfId-231116]##[#50458644_marker-231113]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.AuthConfigProvider]##AuthConfigProvider

======= [#50458644_pgfId-231117]##Declaration

======= [#50458644_pgfId-231118]##public interface _AuthConfigProvider_

======= [#50458644_pgfId-231119]##Description

[#50458644_pgfId-231120]##This interface is implemented by objects that
can be used to obtain authentication context configuration objects, that
is, _ClientAuthConfig_ or _ServerAuthConfig_ objects.

[#50458644_pgfId-231121]##Authentication context configuration objects
serve as sources of the authentication context objects, that is,
_ClientAuthContext_ or _ServerAuthContext_ objects, for a specific
message layer and messaging context.

[#50458644_pgfId-231122]##Authentication context objects encapsulate the
initialization, configuration, and invocation of authentication modules,
that is, _ClientAuthModule_ or _ServerAuthModule_ objects, for a
specific message exchange within a specific message layer and messaging
context.

[#50458644_pgfId-231123]##Callers do not directly operate on
authentication modules. Instead, they rely on a ClientAuthContext or
ServerAuthContext to manage the invocation of modules. A caller obtains
an instance of ClientAuthContext or ServerAuthContext by calling the
respective _getAuthContext_ method on a _ClientAuthConfig_ or
_ServerAuthConfig_ object obtained from an AuthConfigProvider.

[#50458644_pgfId-231124]##The following represents a typical sequence of
calls for obtaining a client authentication context object, and then
using it to secure a request.

======= [#50458644_pgfId-231125]##AuthConfigProvider provider;

[#50458644_pgfId-231126]##ClientAuthConfig config =
provider.getClientAuthConfig(layer,appID,cbh);

[#50458644_pgfId-231127]##String authContextID =
config.getAuthContextID(messageInfo);

[#50458644_pgfId-231128]##ClientAuthContext context =
config.getAuthContext(authContextID,subject,properties);

[#50458644_pgfId-231129]##context.secureRequest(messageInfo,subject);

[#50458644_pgfId-231130]##Every implementation of this interface must
offer a public, two argument constructor with the following signature:

[#50458644_pgfId-231131]##

[#50458644_pgfId-231132]## public AuthConfigProviderImpl(Map properties,
AuthConfigFactory factory);

[#50458644_pgfId-231133]##

[#50458644_pgfId-231134]## 

[#50458644_pgfId-231135]##where the properties argument may be null, and
where all values and keys occurring in a non-null properties argument
must be of type String. When the factory argument is not null, it
indicates that the provider is to self-register at the factory by
calling the following method on the factory:

[#50458644_pgfId-231136]##

[#50458644_pgfId-231137]## public String

[#50458644_pgfId-231138]## registerConfigProvider(AuthConfigProvider
provider, String layer,

[#50458644_pgfId-231139]## String appContext, String description);

[#50458644_pgfId-231140]##

[#50458644_pgfId-231141]##

======= [#50458644_pgfId-231142]##See Also:

======= [#50458644_pgfId-231155]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext], _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigFactory[AuthConfigFactory]link:jaspic.htm#50458644_ClassHead[See AuthConfigFactory]___

[#50458644_pgfId-231197]## 

[#50458644_pgfId-231158]##Member Summary

== [#50458644_pgfId-231162]##Methods

[#50458644_pgfId-231170]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ClientAuthConfig]_

[#50458644_pgfId-231176]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider.getClientAuthConfig(java.lang.String,%20java.lang.String,%20javax.security.auth.callback.CallbackHandler)[getClientAuthConfig]link:jaspic.htm#50458644_MemberHead[See
getClientAuthConfig(java.lang.String layer, java.lang.String appContext,
javax.security.auth.callback.CallbackHandler handler)](
_java.lang.String_ layer, _java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler)_

[#50458644_pgfId-231182]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ServerAuthConfig]_

[#50458644_pgfId-231188]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider.getServerAuthConfig(java.lang.String,%20java.lang.String,%20javax.security.auth.callback.CallbackHandler)[getServerAuthConfig]link:jaspic.htm#50458644_MemberHead[See
getServerAuthConfig(java.lang.String layer, java.lang.String appContext,
javax.security.auth.callback.CallbackHandler handler)](
_java.lang.String_ layer, _java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler)_

[#50458644_pgfId-231190]## void

[#50458644_pgfId-231196]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider.refresh()[refresh]link:jaspic.htm#50458644_MemberHead[See
refresh()]()_

======= [#50458644_pgfId-231198]##Methods

[#50458644_pgfId-231202]##[#50458644_marker-231199]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigProvider.getClientAuthConfig(java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler)]##getClientAuthConfig(
_java.lang.String_ layer, _java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler)

[#50458644_pgfId-231207]##public
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ClientAuthConfig] _getClientAuthConfig_ ( _java.lang.String_ layer,
_java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler) +
throws AuthException_

[#50458644_pgfId-231208]##Get an instance of ClientAuthConfig from this
provider.

[#50458644_pgfId-231209]##The implementation of this method returns a
ClientAuthConfig instance that describes the configuration of
ClientAuthModules at a given message layer, and for use in an identified
application context.

======= [#50458644_pgfId-231210]##Parameters:

[#50458644_pgfId-231211]## _layer_ - A String identifying the message
layer for the returned ClientAuthConfig object. This argument must not
be null.

[#50458644_pgfId-231212]## _appContext_ - A String that identifies the
messaging context for the returned ClientAuthConfig object. This
argument must not be null.

[#50458644_pgfId-231213]## _handler_ - A CallbackHandler to be passed to
the ClientAuthModules encapsulated by ClientAuthContext objects derived
from the returned ClientAuthConfig. This argument may be null, in which
case the implementation may assign a default handler to the
configuration. The CallbackHandler assigned to the configuration must
support the Callback objects required to be supported by the profile of
this specification being followed by the messaging runtime. The
CallbackHandler instance must be initialized with any application
context needed to process the required callbacks on behalf of the
corresponding application.

======= [#50458644_pgfId-231214]##Returns:

[#50458644_pgfId-231215]##A ClientAuthConfig Object that describes the
configuration of ClientAuthModules at the message layer and messaging
context identified by the layer and appContext arguments. This method
does not return null.

======= [#50458644_pgfId-231216]##Throws:

[#50458644_pgfId-231221]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If this provider does not support the assignment of a
default CallbackHandler to the returned ClientAuthConfig._

[#50458644_pgfId-231222]## _java.lang.SecurityException_ - If the caller
does not have permission to retrieve the configuration.

[#50458644_pgfId-231226]##[#50458644_marker-231223]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigProvider.getServerAuthConfig(java.lang.String, java.lang.String, javax.security.auth.callback.CallbackHandler)]##getServerAuthConfig(
_java.lang.String_ layer, _java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler)

[#50458644_pgfId-231231]##public
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See
ServerAuthConfig] _getServerAuthConfig_ ( _java.lang.String_ layer,
_java.lang.String_ appContext,
_javax.security.auth.callback.CallbackHandler_ handler) +
throws AuthException_

[#50458644_pgfId-231232]##Get an instance of ServerAuthConfig from this
provider.

[#50458644_pgfId-231233]##The implementation of this method returns a
ServerAuthConfig instance that describes the configuration of
ServerAuthModules at a given message layer, and for a particular
application context.

======= [#50458644_pgfId-231234]##Parameters:

[#50458644_pgfId-231235]## _layer_ - A String identifying the message
layer for the returned ServerAuthConfig object. This argument must not
be null.

[#50458644_pgfId-231236]## _appContext_ - A String that identifies the
messaging context for the returned ServerAuthConfig object. This
argument must not be null.

[#50458644_pgfId-231237]## _handler_ - A CallbackHandler to be passed to
the ServerAuthModules encapsulated by ServerAuthContext objects derived
from the returned ServerAuthConfig. This argument may be null, in which
case the implementation may assign a default handler to the
configuration. The CallbackHandler assigned to the configuration must
support the Callback objects required to be supported by the profile of
this specification being followed by the messaging runtime. The
CallbackHandler instance must be initialized with any application
context needed to process the required callbacks on behalf of the
corresponding application.

======= [#50458644_pgfId-231238]##Returns:

[#50458644_pgfId-231239]##A ServerAuthConfig Object that describes the
configuration of ServerAuthModules at a given message layer, and for a
particular application context. This method does not return null.

======= [#50458644_pgfId-231240]##Throws:

[#50458644_pgfId-231245]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If this provider does not support the assignment of a
default CallbackHandler to the returned ServerAuthConfig._

[#50458644_pgfId-231246]## _java.lang.SecurityException_ - If the caller
does not have permission to retrieve the configuration.

[#50458644_pgfId-231250]##[#50458644_marker-231247]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.AuthConfigProvider.refresh()]##refresh()

[#50458644_pgfId-231251]##public void _refresh_ ()

[#50458644_pgfId-231252]##Causes a dynamic configuration provider to
update its internal state such that any resulting change to its state is
reflected in the corresponding authentication context configuration
objects previously created by the provider within the current process
context.

======= [#50458644_pgfId-231253]##Throws:

[#50458644_pgfId-231254]## _java.lang.SecurityException_ - If the caller
does not have permission to refresh the provider, or if an error
occurred during the refresh.

===== [#50458644_pgfId-231255]##javax.security.auth.message.config

=== [#50458644_pgfId-231259]##[#50458644_marker-231256]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.ClientAuthConfig]##ClientAuthConfig

======= [#50458644_pgfId-231260]##All Superinterfaces:

======= [#50458644_pgfId-231265]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

======= [#50458644_pgfId-231266]##Declaration

======= [#50458644_pgfId-231271]##public interface _ClientAuthConfig extends_ _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

======= [#50458644_pgfId-231272]##Description

[#50458644_pgfId-231273]##This interface encapsulates the configuration
of ClientAuthContext objects for a message layer and application context
(for example, the messaging context of a specific application, or set of
applications).

[#50458644_pgfId-231274]##Implementations of this interface are returned
by an AuthConfigProvider.

[#50458644_pgfId-231275]##Callers interact with a ClientAuthConfig to
obtain ClientAuthContext objects suitable for processing a given message
exchange at the layer and within the application context of the
ClientAuthConfig. Each ClientAuthContext object is responsible for
instantiating, initializing, and invoking the one or more
ClientAuthModules encapsulated in the ClientAuthContext.

[#50458644_pgfId-231276]##After having acquired a ClientAuthContext, a
caller operates on the context to cause it to invoke the encapsulated
ClientAuthModules to secure client requests and to validate server
responses.

======= [#50458644_pgfId-231277]##See Also:

======= [#50458644_pgfId-231282]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See AuthConfigProvider]_

[#50458644_pgfId-231304]## 

[#50458644_pgfId-231285]##Member Summary

== [#50458644_pgfId-231289]##Methods

[#50458644_pgfId-231297]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See
ClientAuthContext]_

[#50458644_pgfId-231303]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig.getAuthContext(java.lang.String,%20javax.security.auth.Subject,%20java.util.Map)[getAuthContext]link:jaspic.htm#50458644_MemberHead[See
getAuthContext(java.lang.String authContextID,
javax.security.auth.Subject clientSubject, java.util.Map properties)](
_java.lang.String_ authContextID, _javax.security.auth.Subject_
clientSubject, _java.util.Map_ properties)_

[#50458644_pgfId-231336]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-231307]##Inherited Member Summary
a|
======= [#50458644_pgfId-231313]##Methods inherited from interface _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

|[#50458644_pgfId-231331]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAppContext()[getAppContext()]link:jaspic.htm#50458644_MemberHead[See
getAppContext()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAuthContextID(javax.security.auth.message.MessageInfo)[getAuthContextID(MessageInfo)]link:jaspic.htm#50458644_MemberHead[See
getAuthContextID(MessageInfo82 messageInfo)],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getMessageLayer()[getMessageLayer()]link:jaspic.htm#50458644_MemberHead[See
getMessageLayer()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.isProtected()[isProtected()]link:jaspic.htm#50458644_MemberHead[See
isProtected()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.refresh()[refresh()]link:jaspic.htm#50458644_MemberHead[See
refresh()]_____
|===

======= [#50458644_pgfId-231337]##Methods

[#50458644_pgfId-231341]##[#50458644_marker-231338]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.ClientAuthConfig.getAuthContext(java.lang.String, javax.security.auth.Subject, java.util.Map)]##getAuthContext(
_java.lang.String_ authContextID, _javax.security.auth.Subject_
clientSubject, _java.util.Map_ properties)

[#50458644_pgfId-231346]##public
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See
ClientAuthContext] _getAuthContext_ ( _java.lang.String_ authContextID,
_javax.security.auth.Subject_ clientSubject, _java.util.Map_
properties) +
throws AuthException_

[#50458644_pgfId-231347]##Get a ClientAuthContext instance from this
ClientAuthConfig.

[#50458644_pgfId-231348]##The implementation of this method returns a
ClientAuthContext instance that encapsulates the ClientAuthModules used
to secure and validate requests/responses associated with the given
_authContextID_ .

[#50458644_pgfId-231349]##Specifically, this method accesses this
ClientAuthConfig object with the argument _authContextID_ to determine
the ClientAuthModules that are to be encapsulated in the returned
ClientAuthContext instance.

[#50458644_pgfId-231350]##The ClientAuthConfig object establishes the
request and response MessagePolicy objects that are passed to the
encapsulated modules when they are initialized by the returned
ClientAuthContext instance. It is the modules’ responsibility to enforce
these policies when invoked.

======= [#50458644_pgfId-231351]##Parameters:

[#50458644_pgfId-231352]## _authContextID_ - An String identifier used
to index the provided _config_ , or null. This value must be identical
to the value returned by the _getAuthContextID_ method for all
_MessageInfo_ objects passed to the _secureRequest_ method of the
returned ClientAuthContext.

[#50458644_pgfId-231353]## _clientSubject_ - A Subject that represents
the source of the service request to be secured by the acquired
authentication context. The principals and credentials of the Subject
may be used to select or acquire the authentication context. If the
Subject is not null, additional Principals or credentials (pertaining to
the source of the request) may be added to the Subject. A null value may
be passed for this parameter.

[#50458644_pgfId-231354]## _properties_ - A Map object that may be used
by the caller to augment the properties that will be passed to the
encapsulated modules at module initialization. The null value may be
passed for this parameter.

======= [#50458644_pgfId-231355]##Returns:

[#50458644_pgfId-231356]##A ClientAuthContext instance that encapsulates
the ClientAuthModules used to secure and validate requests/responses
associated with the given _authContextID_ , or null (indicating that no
modules are configured).

======= [#50458644_pgfId-231357]##Throws:

[#50458644_pgfId-231362]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If this method fails._

===== [#50458644_pgfId-231363]##javax.security.auth.message.config

=== [#50458644_pgfId-231367]##[#50458644_marker-231364]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.ClientAuthContext]##ClientAuthContext

======= [#50458644_pgfId-231368]##All Superinterfaces:

======= [#50458644_pgfId-231373]## _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

======= [#50458644_pgfId-231374]##Declaration

======= [#50458644_pgfId-231379]##public interface _ClientAuthContext extends_ _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

======= [#50458644_pgfId-231380]##Description

[#50458644_pgfId-231381]##This ClientAuthContext class encapsulates
ClientAuthModules that are used to secure service requests made by a
client, and to validate any responses received to those requests. A
caller typically uses this class in the following manner:

======= [#50458644_pgfId-231382]##Retrieve an instance of this class by using ClientAuthConfig.getAuthContext.

[#50458644_pgfId-231383]##Invoke _secureRequest_ . +
ClientAuthContext implementation invokes secureRequest of one or more
encapsulated ClientAuthModules. Modules might attach credentials to
request (for example, a user name and password), and/or secure the
request (for example, sign and encrypt the request).

[#50458644_pgfId-231384]##Send request and receive response.

[#50458644_pgfId-231385]##Invoke _validateResponse_ . +
ClientAuthContext implementation invokes validateResponse of one or more
encapsulated ClientAuthModules. Modules verify or decrypt response as
necessary.

[#50458644_pgfId-231386]##Invoke _cleanSubject_ method (as necessary) to
clean up any authentication state in Subject.

[#50458644_pgfId-231387]##A ClientAuthContext instance may be used
concurrently by multiple callers.

[#50458644_pgfId-231388]##Implementations of this interface are
responsible for constructing and initializing the encapsulated modules.
The initialization step includes passing the relevant request and
response MessagePolicy objects to the encapsulated modules. The
MessagePolicy objects are obtained by the ClientAuthConfig instance used
to obtain the ClientAuthContext object. See
_ClientAuthConfig.getAuthContext_ for more information.

[#50458644_pgfId-231389]##Implementations of this interface are
instantiated by their associated configuration object such that they
know which modules to invoke, in what order, and how results returned by
preceding modules are to influence subsequent module invocations.

[#50458644_pgfId-231390]##Calls to the inherited methods of this
interface delegate to the corresponding methods of the encapsulated
authentication modules.

======= [#50458644_pgfId-231391]##See Also:

======= [#50458644_pgfId-231400]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthConfig[ClientAuthConfig]link:jaspic.htm#50458644_ClassHead[See ClientAuthConfig], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule[ClientAuthModule]link:jaspic.htm#50458644_ClassHead[See ClientAuthModule]__

[#50458644_pgfId-231424]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-231403]##Inherited Member Summary
a|
======= [#50458644_pgfId-231409]##Methods inherited from interface _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

|[#50458644_pgfId-231419]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.secureRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureRequest(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
secureRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.validateResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateResponse(MessageInfo,
Subject, Subject)]link:jaspic.htm#50458644_MemberHead[See
validateResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)]___
|===

===== [#50458644_pgfId-231425]##javax.security.auth.message.config

=== [#50458644_pgfId-231429]##[#50458644_marker-231426]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.RegistrationListener]##RegistrationListener

======= [#50458644_pgfId-231430]##Declaration

======= [#50458644_pgfId-231431]##public interface _RegistrationListener_

======= [#50458644_pgfId-231432]##Description

[#50458644_pgfId-231433]##An implementation of this interface may be
associated with an AuthConfigProvider registration at an
AuthConfigFactory at the time the AuthConfigProvider is obtained for use
from the factory. The AuthConfigFactory will invoke the notify method of
the RegistrationListener if the corresponding provider registration is
unregistered or replaced at the factory.

[#50458644_pgfId-231451]## 

[#50458644_pgfId-231436]##Member Summary

== [#50458644_pgfId-231440]##Methods

[#50458644_pgfId-231444]## void

[#50458644_pgfId-231450]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.RegistrationListener.notify(java.lang.String,%20java.lang.String)[notify]link:jaspic.htm#50458644_MemberHead[See
notify(java.lang.String layer, java.lang.String appContext)](
_java.lang.String_ layer, _java.lang.String_ appContext)_

======= [#50458644_pgfId-231452]##Methods

[#50458644_pgfId-231456]##[#50458644_marker-231453]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.RegistrationListener.notify(java.lang.String, java.lang.String)]##notify(
_java.lang.String_ layer, _java.lang.String_ appContext)

[#50458644_pgfId-231457]##public void _notify_ ( _java.lang.String_
layer, _java.lang.String_ appContext)

[#50458644_pgfId-231458]##Notify the listener that a registration with
which it was associated was replaced or unregistered.

[#50458644_pgfId-231459]##When a RegistrationListener is associated with
a provider registration within the factory, the factory must call its
_notify_ method when the corresponding registration is unregistered or
replaced.

======= [#50458644_pgfId-231460]##Parameters:

[#50458644_pgfId-231461]## _layer_ - A String identifying the one or
more message layers corresponding to the registration for which the
listerner is being notified.

[#50458644_pgfId-231462]## _appContext_ - A String value identifying the
application contexts corresponding to the registration for which the
listener is being notified. The factory detaches the listener from the
corresponding registration once the listener has been notified for the
registration. The _detachListerner_ method must be called to detach
listeners that are no longer in use.

===== [#50458644_pgfId-231463]##javax.security.auth.message.config

=== [#50458644_pgfId-231467]##[#50458644_marker-231464]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.ServerAuthConfig]##ServerAuthConfig

======= [#50458644_pgfId-231468]##All Superinterfaces:

======= [#50458644_pgfId-231473]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

======= [#50458644_pgfId-231474]##Declaration

======= [#50458644_pgfId-231479]##public interface _ServerAuthConfig extends_ _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

======= [#50458644_pgfId-231480]##Description

[#50458644_pgfId-231481]##This interface describes a configuration of
ServerAuthConfiguration objects for a message layer and application
context (for example, the messaging context of a specific application,
or set of applications).

[#50458644_pgfId-231482]##Implementations of this interface are returned
by an AnthConfigProvider.

[#50458644_pgfId-231483]##Callers interact with a ServerAuthConfig to
obtain ServerAuthContext objects suitable for processing a given message
exchange at the layer and within the application context of the
ServerAuthConfig. Each ServerAuthContext object is responsible for
instantiating, initializing, and invoking the one or more
ServerAuthModules encapsulated in the ServerAuthContext.

[#50458644_pgfId-231484]##After having acquired a ServerAuthContext, a
caller operates on the context to cause it to invoke the encapsulated
ServerAuthModules to validate service requests and to secure service
responses.

======= [#50458644_pgfId-231485]##See Also:

======= [#50458644_pgfId-231490]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfigProvider[AuthConfigProvider]link:jaspic.htm#50458644_ClassHead[See AuthConfigProvider]_

[#50458644_pgfId-231512]## 

[#50458644_pgfId-231493]##Member Summary

== [#50458644_pgfId-231497]##Methods

[#50458644_pgfId-231505]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See
ServerAuthContext]_

[#50458644_pgfId-231511]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig.getAuthContext(java.lang.String,%20javax.security.auth.Subject,%20java.util.Map)[getAuthContext]link:jaspic.htm#50458644_MemberHead[See
getAuthContext(java.lang.String authContextID,
javax.security.auth.Subject serviceSubject, java.util.Map properties)](
_java.lang.String_ authContextID, _javax.security.auth.Subject_
serviceSubject, _java.util.Map_ properties)_

[#50458644_pgfId-231544]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-231515]##Inherited Member Summary
a|
======= [#50458644_pgfId-231521]##Methods inherited from interface _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig[AuthConfig]link:jaspic.htm#50458644_ClassHead[See AuthConfig]_

|[#50458644_pgfId-231539]##
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAppContext()[getAppContext()]link:jaspic.htm#50458644_MemberHead[See
getAppContext()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getAuthContextID(javax.security.auth.message.MessageInfo)[getAuthContextID(MessageInfo)]link:jaspic.htm#50458644_MemberHead[See
getAuthContextID(MessageInfo82 messageInfo)],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.getMessageLayer()[getMessageLayer()]link:jaspic.htm#50458644_MemberHead[See
getMessageLayer()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.isProtected()[isProtected()]link:jaspic.htm#50458644_MemberHead[See
isProtected()],
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.AuthConfig.refresh()[refresh()]link:jaspic.htm#50458644_MemberHead[See
refresh()]_____
|===

======= [#50458644_pgfId-231545]##Methods

[#50458644_pgfId-231549]##[#50458644_marker-231546]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.config.ServerAuthConfig.getAuthContext(java.lang.String, javax.security.auth.Subject, java.util.Map)]##getAuthContext(
_java.lang.String_ authContextID, _javax.security.auth.Subject_
serviceSubject, _java.util.Map_ properties)

[#50458644_pgfId-231554]##public
_link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See
ServerAuthContext] _getAuthContext_ ( _java.lang.String_ authContextID,
_javax.security.auth.Subject_ serviceSubject, _java.util.Map_
properties) +
throws AuthException_

[#50458644_pgfId-231555]##Get a ServerAuthContext instance from this
ServerAuthConfig.

[#50458644_pgfId-231556]##The implementation of this method returns a
ServerAuthContext instance that encapsulates the ServerAuthModules used
to validate requests and secure responses associated with the given
_authContextID_ .

[#50458644_pgfId-231557]##Specifically, this method accesses this
ServerAuthConfig object with the argument _authContextID_ to determine
the ServerAuthModules that are to be encapsulated in the returned
ServerAuthContext instance.

[#50458644_pgfId-231558]##The ServerAuthConfig object establishes the
request and response MessagePolicy objects that are passed to the
encapsulated modules when they are initialized by the returned
ServerAuthContext instance. It is the modules’ responsibility to enforce
these policies when invoked.

======= [#50458644_pgfId-231559]##Parameters:

[#50458644_pgfId-231560]## _authContextID_ - An identifier used to index
the provided _config_ , or null. This value must be identical to the
value returned by the _getAuthContextID_ method for all _MessageInfo_
objects passed to the _validateRequest_ method of the returned
ServerAuthContext.

[#50458644_pgfId-231561]## _serviceSubject_ - A Subject that represents
the source of the service response to be secured by the acquired
authentication context. The principal and credentials of the Subject may
be used to select or acquire the authentication context. If the Subject
is not null, additional Principals or credentials (pertaining to the
source of the response) may be added to the Subject. A null value may be
passed for this parameter.

[#50458644_pgfId-231562]## _properties_ - A Map object that may be used
by the caller to augment the properties that will be passed to the
encapsulated modules at module initialization. The null value may be
passed for this parameter.

======= [#50458644_pgfId-231563]##Returns:

[#50458644_pgfId-231564]##A ServerAuthContext instance that encapsulates
the ServerAuthModules used to secure and validate requests/responses
associated with the given _authContextID_ , or null (indicating that no
modules are configured).

======= [#50458644_pgfId-231565]##Throws:

[#50458644_pgfId-231570]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If this method fails._

===== [#50458644_pgfId-231571]##javax.security.auth.message.config

=== [#50458644_pgfId-231575]##[#50458644_marker-231572]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.config.ServerAuthContext]##ServerAuthContext

======= [#50458644_pgfId-231576]##All Superinterfaces:

======= [#50458644_pgfId-231581]## _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

======= [#50458644_pgfId-231582]##Declaration

======= [#50458644_pgfId-231587]##public interface _ServerAuthContext extends_ _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

======= [#50458644_pgfId-231588]##Description

[#50458644_pgfId-231589]##This ServerAuthContext class encapsulates
ServerAuthModules that are used to validate service requests received
from clients, and to secure any response returned for those requests. A
caller typically uses this class in the following manner:

======= [#50458644_pgfId-231590]##Retrieve an instance of this class via ServerAuthConfig.getAuthContext.

[#50458644_pgfId-231591]##Invoke _validateRequest_ . +
ServerAuthContext implementation invokes validateRequest of one or more
encapsulated ServerAuthModules. Modules validate credentials present in
request (for example, decrypt and verify a signature).

[#50458644_pgfId-231592]##If credentials valid and sufficient,
authentication complete. +
Perform authorization check on authenticated identity and, if
successful, dispatch to requested service application.

[#50458644_pgfId-231593]##Service application finished.

[#50458644_pgfId-231594]##Invoke _secureResponse_ . +
ServerAuthContext implementation invokes secureResponse of one or more
encapsulated ServerAuthModules. Modules secure response (sign and
encrypt response, for example), and prepare response message.

[#50458644_pgfId-231595]##Send secured response to client.

[#50458644_pgfId-231596]##Invoke _cleanSubject_ (as necessary) to clean
up any authentication state in Subject(s).

[#50458644_pgfId-231597]##A ServerAuthContext instance may be used
concurrently by multiple callers.

[#50458644_pgfId-231598]##Implementations of this interface are
responsible for constructing and initializing the encapsulated modules.
The initialization step includes passing the relevant request and
response MessagePolicy objects to the encapsulated modules. The
MessagePolicy objects are obtained by the ServerAuthConfig instance used
to ontain the ServerAuthContext object. See
_ServerAuthConfig.getAuthContext_ for more information.

[#50458644_pgfId-231599]##Implementations of this interface are
instantiated by their associated configuration object such that they
know which modules to invoke, in what order, and how results returned by
preceding modules are to influence subsequent module invocations.

[#50458644_pgfId-231600]##Calls to the inherited methods of this
interface delegate to the corresponding methods of the encapsulated
authentication modules.

======= [#50458644_pgfId-231601]##See Also:

======= [#50458644_pgfId-231610]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthConfig[ServerAuthConfig]link:jaspic.htm#50458644_ClassHead[See ServerAuthConfig], _link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule[ServerAuthModule]link:jaspic.htm#50458644_ClassHead[See ServerAuthModule]__

[#50458644_pgfId-231634]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-231613]##Inherited Member Summary
a|
======= [#50458644_pgfId-231619]##Methods inherited from interface _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

|[#50458644_pgfId-231629]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.secureResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureResponse(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
secureResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
serviceSubject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.validateRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateRequest(MessageInfo,
Subject, Subject)]link:jaspic.htm#50458644_MemberHead[See
validateRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)]___
|===

[#50458644_pgfId-231642]## 

===== [#50458644_pgfId-231968]##[#50458644_marker-231967]##Package

=== [#50458644_pgfId-231971]##[#50458644_PackageHead]##[#50458644_javax.security.auth.message.module]##javax.security.auth.message.module

======= [#50458644_pgfId-231972]##Description

[#50458644_pgfId-231973]##This package defines the interfaces
implemented by JSR 196 compatible authentication modules.

[#50458644_pgfId-231999]## 

[#50458644_pgfId-231976]##Class Summary

== [#50458644_pgfId-231980]##Interfaces

[#50458644_pgfId-231988]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule[ClientAuthModule]link:jaspic.htm#50458644_ClassHead[See
ClientAuthModule]_

[#50458644_pgfId-231990]##A ClientAuthModule secures request messages,
and validates received response messages.

[#50458644_pgfId-231996]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule[ServerAuthModule]link:jaspic.htm#50458644_ClassHead[See
ServerAuthModule]_

[#50458644_pgfId-231998]##A ServerAuthModule validates client requests
and secures responses to the client.

===== [#50458644_pgfId-232000]##javax.security.auth.message.module

=== [#50458644_pgfId-232004]##[#50458644_marker-232001]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.module.ClientAuthModule]##ClientAuthModule

======= [#50458644_pgfId-232005]##All Superinterfaces:

======= [#50458644_pgfId-232010]## _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

======= [#50458644_pgfId-232011]##Declaration

======= [#50458644_pgfId-232016]##public interface _ClientAuthModule extends_ _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

======= [#50458644_pgfId-232017]##Description

[#50458644_pgfId-232018]##A ClientAuthModule secures request messages,
and validates received response messages.

[#50458644_pgfId-232019]##A module implementation should assume it may
be used to secure different requests as different clients. A module
should also assume it may be used concurrently by multiple callers. It
is the module implementation’s responsibility to properly save and
restore any state as necessary. A module that does not need to do so may
remain completely stateless.

[#50458644_pgfId-232020]##Every implementation of the interface must
provide a public zero argument constructor.

======= [#50458644_pgfId-232021]##See Also:

======= [#50458644_pgfId-232026]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ClientAuthContext[ClientAuthContext]link:jaspic.htm#50458644_ClassHead[See ClientAuthContext]_

[#50458644_pgfId-232060]## 

[#50458644_pgfId-232029]##Member Summary

== [#50458644_pgfId-232033]##Methods

{empty}[#50458644_pgfId-232037]## _java.lang.Class_ []

[#50458644_pgfId-232043]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule.getSupportedMessageTypes()[getSupportedMessageTypes]link:jaspic.htm#50458644_MemberHead[See
getSupportedMessageTypes()]()_

[#50458644_pgfId-232045]## void

[#50458644_pgfId-232059]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ClientAuthModule.initialize(javax.security.auth.message.MessagePolicy,%20javax.security.auth.message.MessagePolicy,%20javax.security.auth.callback.CallbackHandle-148391767[initialize]link:jaspic.htm#50458644_MemberHead[See
initialize(MessagePolicy84 requestPolicy, MessagePolicy84
responsePolicy, javax.security.auth.callback.CallbackHandler handler,
java.util.Map options)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options)___

[#50458644_pgfId-232084]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-232063]##Inherited Member Summary
a|
======= [#50458644_pgfId-232069]##Methods inherited from interface _link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth[ClientAuth]link:jaspic.htm#50458644_ClassHead[See ClientAuth]_

|[#50458644_pgfId-232079]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.secureRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureRequest(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
secureRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ClientAuth.validateResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateResponse(MessageInfo,
Subject, Subject)]link:jaspic.htm#50458644_MemberHead[See
validateResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)]___
|===

======= [#50458644_pgfId-232085]##Methods

[#50458644_pgfId-232089]##[#50458644_marker-232086]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.module.ClientAuthModule.getSupportedMessageTypes()]##getSupportedMessageTypes()

[#50458644_pgfId-232090]##public _java.lang.Class_ []
_getSupportedMessageTypes_ ()

[#50458644_pgfId-232091]##Get the one or more Class objects representing
the message types supported by the module.

======= [#50458644_pgfId-232092]##Returns:

[#50458644_pgfId-232093]##An array of Class objects where each element
defines a message type supported by the module. A module should return
an array containing at least one element. An empty array indicates that
the module will attempt to support any message type. This method never
returns null.

[#50458644_pgfId-232105]##[#50458644_marker-232094]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.module.ClientAuthModule.initialize(javax.security.auth.message.MessagePolicy, javax.security.auth.message.MessagePolicy, javax.security.auth.callback.CallbackHandler, java.util.Map)]##initialize(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options)__

[#50458644_pgfId-232114]##public void _initialize_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options) +
throws AuthException__

[#50458644_pgfId-232115]##Initialize this module with request and
response message policies to enforce, a CallbackHandler, and any
module-specific configuration properties.

[#50458644_pgfId-232116]##The request policy and the response policy
must not both be null.

======= [#50458644_pgfId-232117]##Parameters:

[#50458644_pgfId-232118]## _requestPolicy_ - The request policy this
module must enforce, or null.

[#50458644_pgfId-232119]## _responsePolicy_ - The response policy this
module must enforce, or null.

[#50458644_pgfId-232120]## _handler_ - CallbackHandler used to request
information.

[#50458644_pgfId-232121]## _options_ - A Map of module-specific
configuration properties.

======= [#50458644_pgfId-232122]##Throws:

[#50458644_pgfId-232127]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If module initialization fails, including for the case
where the options argument contains elements that are not supported by
the module._

===== [#50458644_pgfId-232128]##javax.security.auth.message.module

=== [#50458644_pgfId-232132]##[#50458644_marker-232129]##[#50458644_ClassHead]##[#50458644_javax.security.auth.message.module.ServerAuthModule]##ServerAuthModule

======= [#50458644_pgfId-232133]##All Superinterfaces:

======= [#50458644_pgfId-232138]## _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

======= [#50458644_pgfId-232139]##Declaration

======= [#50458644_pgfId-232144]##public interface _ServerAuthModule extends_ _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

======= [#50458644_pgfId-232145]##Description

[#50458644_pgfId-232146]##A ServerAuthModule validates client requests
and secures responses to the client.

[#50458644_pgfId-232147]##A module implementation should assume it may
be used to secure different requests as different clients. A module
should also assume it may be used concurrently by multiple callers. It
is the module implementation’s responsibility to properly save and
restore any state as necessary. A module that does not need to do so may
remain completely stateless.

[#50458644_pgfId-232148]##Every implementation of the interface must
provide a public zero argument constructor.

======= [#50458644_pgfId-232149]##See Also:

======= [#50458644_pgfId-232154]## _link:javax.security.auth.message.config.htm#javax.security.auth.message.config.ServerAuthContext[ServerAuthContext]link:jaspic.htm#50458644_ClassHead[See ServerAuthContext]_

[#50458644_pgfId-232188]## 

[#50458644_pgfId-232157]##Member Summary

== [#50458644_pgfId-232161]##Methods

{empty}[#50458644_pgfId-232165]## _java.lang.Class_ []

[#50458644_pgfId-232171]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule.getSupportedMessageTypes()[getSupportedMessageTypes]link:jaspic.htm#50458644_MemberHead[See
getSupportedMessageTypes()]()_

[#50458644_pgfId-232173]## void

[#50458644_pgfId-232187]##
_link:javax.security.auth.message.module.htm#javax.security.auth.message.module.ServerAuthModule.initialize(javax.security.auth.message.MessagePolicy,%20javax.security.auth.message.MessagePolicy,%20javax.security.auth.callback.CallbackHandle-463168479[initialize]link:jaspic.htm#50458644_MemberHead[See
initialize(MessagePolicy84 requestPolicy, MessagePolicy84
responsePolicy, javax.security.auth.callback.CallbackHandler handler,
java.util.Map options)](
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options)___

[#50458644_pgfId-232212]## 

[width="100%",cols="100%",options="header",]
|===
|[#50458644_pgfId-232191]##Inherited Member Summary
a|
======= [#50458644_pgfId-232197]##Methods inherited from interface _link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth[ServerAuth]link:jaspic.htm#50458644_ClassHead[See ServerAuth]_

|[#50458644_pgfId-232207]##
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.cleanSubject(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[cleanSubject(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
cleanSubject(MessageInfo82 messageInfo, javax.security.auth.Subject
subject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.secureResponse(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject)[secureResponse(MessageInfo,
Subject)]link:jaspic.htm#50458644_MemberHead[See
secureResponse(MessageInfo82 messageInfo, javax.security.auth.Subject
serviceSubject)],
_link:javax.security.auth.message.htm#javax.security.auth.message.ServerAuth.validateRequest(javax.security.auth.message.MessageInfo,%20javax.security.auth.Subject,%20javax.security.auth.Subject)[validateRequest(MessageInfo,
Subject, Subject)]link:jaspic.htm#50458644_MemberHead[See
validateRequest(MessageInfo82 messageInfo, javax.security.auth.Subject
clientSubject, javax.security.auth.Subject serviceSubject)]___
|===

======= [#50458644_pgfId-232213]##Methods

[#50458644_pgfId-232217]##[#50458644_marker-232214]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.module.ServerAuthModule.getSupportedMessageTypes()]##getSupportedMessageTypes()

[#50458644_pgfId-232218]##public _java.lang.Class_ []
_getSupportedMessageTypes_ ()

[#50458644_pgfId-232219]##Get the one or more Class objects representing
the message types supported by the module.

======= [#50458644_pgfId-232220]##Returns:

[#50458644_pgfId-232221]##An array of Class objects, with at least one
element defining a message type supported by the module.

[#50458644_pgfId-232233]##[#50458644_marker-232222]##[#50458644_MemberHead]##[#50458644_javax.security.auth.message.module.ServerAuthModule.initialize(javax.security.auth.message.MessagePolicy, javax.security.auth.message.MessagePolicy, javax.security.auth.callback.CallbackHandler, java.util.Map)]##initialize(
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options)__

[#50458644_pgfId-232242]##public void _initialize_ (
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] requestPolicy,
_link:javax.security.auth.message.htm#javax.security.auth.message.MessagePolicy[MessagePolicy]link:jaspic.htm#50458644_ClassHead[See
MessagePolicy] responsePolicy,
_javax.security.auth.callback.CallbackHandler_ handler, _java.util.Map_
options) +
throws AuthException__

[#50458644_pgfId-232243]##Initialize this module with request and
response message policies to enforce, a CallbackHandler, and any
module-specific configuration properties.

[#50458644_pgfId-232244]##The request policy and the response policy
must not both be null.

======= [#50458644_pgfId-232245]##Parameters:

[#50458644_pgfId-232246]## _requestPolicy_ - The request policy this
module must enforce, or null.

[#50458644_pgfId-232247]## _responsePolicy_ - The response policy this
module must enforce, or null.

[#50458644_pgfId-232248]## _handler_ - CallbackHandler used to request
information.

[#50458644_pgfId-232249]## _options_ - A Map of module-specific
configuration properties.

======= [#50458644_pgfId-232250]##Throws:

[#50458644_pgfId-232255]##
_link:javax.security.auth.message.htm#javax.security.auth.message.AuthException[AuthException]link:jaspic.htm#50458644_ClassHead[See
AuthException] - If module initialization fails, including for the case
where the options argument contains elements that are not supported by
the module._

== [#50458644_pgfId-222647]## 

======= [#50458640_pgfId-114132]## 

'''''

[.footnoteNumber]# 1.# [#50458677_pgfId-1010188]##The dashed lines
between validateRequest and validateResponse convey additional message
exchanges that may occur when message validation requires a
multi-message dialog, such as would occur in challenge-response
protocols.

[.footnoteNumber]# 2.# [#50458677_pgfId-1010421]##A client runtime may
be able to tell when a request is the same, based on the context (for
example, stub) from which the request is made.

[.footnoteNumber]# 3.# [#50458677_pgfId-1006514]##For example, where the
message content that defines the identifier is encrypted.

[.footnoteNumber]# 4.# [#50458678_pgfId-1029128]##The application
request processing must not be performed if the request authorization
fails. If the runtime intends to return a response message to indicate
the failed authorization, the profile of this specification being
followed by the runtime must establish whether or not secureResponse
must be called prior to sending the authorization failure message.

[.footnoteNumber]# 5.# [#50458678_pgfId-1029231]##validateRequest is
called to process all received messages, including security
mechanism-specific messages sent by clients in response to service
response messages.

[.footnoteNumber]# 6.# [#50458641_pgfId-1032695]##In a JSR 115
environment, connection requirements are tested by checking a
WebUserDataPermission constructed with the HttpServletRequest. In a
non-JSR 115 environment, connection requirements are tested by comparing
the security properties of the connection on which the request was
received with the permitted connection types as defined through
user-data-constraints in the corresponding web.xml.

[.footnoteNumber]# 7.# [#50458641_pgfId-1032976]##In a JSR 115
environment, authorization requirements are enforced by checking if the
authenticated caller identity (such as it is) has been granted the
WebResourcePermission corresponding to the HttpServletRequest. In a
non-JSR 115 environment, authorization requirements are enforced by
checking if the role-mappings of the authenticated caller identity are
sufficient to satisfy the auth-constraints (if any) that apply to the
request as defined in the corresponding web.xml.

[.footnoteNumber]# 8.# [#50458641_pgfId-1032704]##These unconditional
calls to validateRequest are necessary to allow for delegation of
servlet authentication session management to authentication contexts and
their contained authentication modules.

[.footnoteNumber]# 9.# [#50458641_pgfId-1037165]##Note that Servlet
security model does not apply when a servlet uses a RequestDispatcher to
invoke a static resource or servlet using a forward or an include.

[.footnoteNumber]# 10.# [#50458641_pgfId-1030555]##If the
auth-constraint is an excluding auth-constraint (that is, an
auth-constraint that authorizes no roles), the Servlet Specification
requires that no access be permitted independent of authentication.
Runtimes should reject requests to excluded resources prior to
proceeding to point (2) in the message processing model (that is, prior
to the authentication processing).

[.footnoteNumber]# 11.# [#50458641_pgfId-1036965]##JSR 115 compatible
runtimes should also reject requests to excluded resources prior to
proceeding to point (2) in the message processing model (that is, prior
to the authentication processing).

[.footnoteNumber]# 12.# [#50458641_pgfId-1033706]##The module may
continue, or refresh an authentication dialog that has already been
initiated (perhaps by the client) in the request, but it must not start
an authentication dialog for a request which has not yet been associated
with authentication information (as understood by the module).

[.footnoteNumber]# 13.# [#50458641_pgfId-1036922]##“After the service
invocation” effectively means after the first call to secureResponse; as
distinct from the case where authenticate might call validateRequest
from within the service invocation and before it completes.

[.footnoteNumber]# 14.# [#50458641_pgfId-1036805]##Except when
getUserPrincipal returns null; in which case the value returned by
getRemoteUser must be null

[.footnoteNumber]# 15.# [#50458641_pgfId-1036798]##Unlike
CallbackHandler processed Callback objects, callback properties are not
acted upon until the authentication module returns to the runtime.

[.footnoteNumber]# 16.# [#50458641_pgfId-1036104]##Note that the
authenticate method must not perform the pre-dispatch container
authorization check that the message processing runtime would typically
perform on successful return from validateRequest.

[.footnoteNumber]# 17.# [#50458643_pgfId-1030808]##The module may
continue, or refresh an authentication dialog that has already been
initiated (perhaps by the client) in the request, but it must not start
an authentication dialog for a request which has not yet been associated
with authentication information (as understood by the module).

[.footnoteNumber]# 18.# [#50458643_pgfId-1028502]##Occurs when the
module is challenged by the server during secureRequest processing.

[.footnoteNumber]# 19.# [#50458643_pgfId-1031721]##For an http or https
schema, the path must be the corresponding component of the "generic
URI" syntax (that is, <scheme>://<authority><path>?<query>) described in
section 3. of RFC 2396 "Uniform Resource Identifiers (URI): Generic
Syntax". If the service is implemented as a Servlet, the path must begin
with the context-path.

[.footnoteNumber]# 20.# [#50458643_pgfId-1030025]##This authorization
processing would NOT be expected to include the enforcement of Servlet
Auth-Constraints since they are defined at url-pattern granularity.

[.footnoteNumber]# 21.# [#50458643_pgfId-1030821]##The module may
continue, or refresh an authentication dialog that has already been
initiated (perhaps by the client) in the request, but it must not start
an authentication dialog for a request which has not yet been associated
with authentication information (as understood by the module).

[.footnoteNumber]# 22.# [#50458643_pgfId-1028496]##Occurs when the
module is challenged by the client during secureResponse processing.

[.footnoteNumber]# 23.# [#50458684_pgfId-1023340]##The
CallerPrincipalCallback may be constucted with a String argument
containing the name value, or with a Principal argument whose getName
method returns the name value.

[.footnoteNumber]# 24.# [#50458686_pgfId-1015958]##Some
HttpServletResponse implementations extend the buffering methodology to
the response headers, such that the status code and the first buffers
worth of response headers are sent when when the header buffer is full.
This does not, strictly speaking, cause the response to be committed,
but instead creates a situation where attempts to change the status
code, or to replace an existing header, would not be expected to
succeed.
